{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/__tests__/components/ChatWindow.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen, fireEvent } from '@testing-library/react'\nimport { ChatWindow } from '@/components/chat/chat-window'\n\n// Mock next/dynamic to avoid loading heavy components during tests\njest.mock('next/dynamic', () => () => (props: any) => null)\n\n// Mock Next.js navigation to satisfy components that call useRouter/usePathname\njest.mock('next/navigation', () => ({\n  useRouter: () => ({ push: jest.fn(), replace: jest.fn(), prefetch: jest.fn(), back: jest.fn() }),\n  usePathname: () => '/messages',\n  useSearchParams: () => ({ get: () => null }),\n}))\n\n// Mock hooks used by ChatWindow\njest.mock('@/hooks/use-conversations', () => ({\n  useConversations: () => ({\n    conversations: [\n      { id: 'abc', title: 'Test Conversation', created_at: '', updated_at: '', user_id: 'user-1' },\n    ],\n    loading: false,\n    error: null,\n    fetchConversations: jest.fn(),\n    createConversation: jest.fn(),\n    createConversationWithParticipants: jest.fn(),\n    updateConversation: jest.fn(),\n    deleteConversation: jest.fn(),\n  }),\n}))\n\njest.mock('@/hooks/use-websocket', () => ({\n  useWebSocket: () => ({\n    isConnected: true,\n    messages: [],\n    typingUsers: {},\n    joinConversation: jest.fn(),\n    sendChatMessage: jest.fn(),\n    sendTyping: jest.fn(),\n  }),\n}))\n\njest.mock('@/hooks/use-mobile', () => ({ useIsMobile: () => false }))\njest.mock('@/hooks/use-haptics', () => ({ useHaptics: () => ({ triggerHaptic: () => undefined }) }))\n\n// Mock UserProfile to simply render the provided user name (header title)\njest.mock('@/components/chat/user-profile', () => ({\n  UserProfile: ({ user }: any) => <div>{user.name}</div>,\n}))\n\n// Basic smoke tests for header rendering and popout behavior\n\ndescribe('ChatWindow', () => {\n  const baseProps = {\n    chatId: 'abc',\n    onToggleSidebar: () => {},\n    sidebarCollapsed: false,\n  }\n\n  test('renders header with conversation title from useConversations()', () => {\n    render(<ChatWindow {...baseProps} />)\n    expect(screen.getByText('Test Conversation')).toBeInTheDocument()\n  })\n\n  test('popout button opens /messages?c=<id>&popout=1 in a new window', () => {\n    const openSpy = jest.spyOn(window, 'open').mockImplementation(() => null)\n    render(<ChatWindow {...baseProps} />)\n\n    const btn = screen.getByRole('button', { name: /open in new window/i })\n    fireEvent.click(btn)\n\n    const expectedUrl = new URL('/messages', window.location.origin)\n    expectedUrl.searchParams.set('c', 'abc')\n    expectedUrl.searchParams.set('popout', '1')\n\n    expect(openSpy).toHaveBeenCalledTimes(1)\n    expect(openSpy).toHaveBeenCalledWith(expectedUrl.toString(), '_blank', 'noopener,noreferrer,width=520,height=720')\n\n    openSpy.mockRestore()\n  })\n})\n"],"names":["jest","mock","props","useRouter","push","fn","replace","prefetch","back","usePathname","useSearchParams","get","useConversations","conversations","id","title","created_at","updated_at","user_id","loading","error","fetchConversations","createConversation","createConversationWithParticipants","updateConversation","deleteConversation","useWebSocket","isConnected","messages","typingUsers","joinConversation","sendChatMessage","sendTyping","useIsMobile","useHaptics","triggerHaptic","undefined","UserProfile","user","div","name","describe","baseProps","chatId","onToggleSidebar","sidebarCollapsed","test","render","ChatWindow","expect","screen","getByText","toBeInTheDocument","openSpy","spyOn","window","mockImplementation","btn","getByRole","fireEvent","click","expectedUrl","URL","location","origin","searchParams","set","toHaveBeenCalledTimes","toHaveBeenCalledWith","toString","mockRestore"],"mappings":";AAIA,mEAAmE;AACnEA,KAAKC,IAAI,CAAC,gBAAgB,IAAM,IAAM,CAACC,QAAe;AAEtD,gFAAgF;AAChFF,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCE,WAAW,IAAO,CAAA;gBAAEC,MAAMJ,KAAKK,EAAE;gBAAIC,SAASN,KAAKK,EAAE;gBAAIE,UAAUP,KAAKK,EAAE;gBAAIG,MAAMR,KAAKK,EAAE;YAAG,CAAA;QAC9FI,aAAa,IAAM;QACnBC,iBAAiB,IAAO,CAAA;gBAAEC,KAAK,IAAM;YAAK,CAAA;IAC5C,CAAA;AAEA,gCAAgC;AAChCX,KAAKC,IAAI,CAAC,6BAA6B,IAAO,CAAA;QAC5CW,kBAAkB,IAAO,CAAA;gBACvBC,eAAe;oBACb;wBAAEC,IAAI;wBAAOC,OAAO;wBAAqBC,YAAY;wBAAIC,YAAY;wBAAIC,SAAS;oBAAS;iBAC5F;gBACDC,SAAS;gBACTC,OAAO;gBACPC,oBAAoBrB,KAAKK,EAAE;gBAC3BiB,oBAAoBtB,KAAKK,EAAE;gBAC3BkB,oCAAoCvB,KAAKK,EAAE;gBAC3CmB,oBAAoBxB,KAAKK,EAAE;gBAC3BoB,oBAAoBzB,KAAKK,EAAE;YAC7B,CAAA;IACF,CAAA;AAEAL,KAAKC,IAAI,CAAC,yBAAyB,IAAO,CAAA;QACxCyB,cAAc,IAAO,CAAA;gBACnBC,aAAa;gBACbC,UAAU,EAAE;gBACZC,aAAa,CAAC;gBACdC,kBAAkB9B,KAAKK,EAAE;gBACzB0B,iBAAiB/B,KAAKK,EAAE;gBACxB2B,YAAYhC,KAAKK,EAAE;YACrB,CAAA;IACF,CAAA;AAEAL,KAAKC,IAAI,CAAC,sBAAsB,IAAO,CAAA;QAAEgC,aAAa,IAAM;IAAM,CAAA;AAClEjC,KAAKC,IAAI,CAAC,uBAAuB,IAAO,CAAA;QAAEiC,YAAY,IAAO,CAAA;gBAAEC,eAAe,IAAMC;YAAU,CAAA;IAAG,CAAA;AAEjG,0EAA0E;AAC1EpC,KAAKC,IAAI,CAAC,kCAAkC,IAAO,CAAA;QACjDoC,aAAa,CAAC,EAAEC,IAAI,EAAO,iBAAK,qBAACC;0BAAKD,KAAKE,IAAI;;IACjD,CAAA;;;;;8DA/CkB;wBACwB;4BACf;;;;;;AA+C3B,6DAA6D;AAE7DC,SAAS,cAAc;IACrB,MAAMC,YAAY;QAChBC,QAAQ;QACRC,iBAAiB,KAAO;QACxBC,kBAAkB;IACpB;IAEAC,KAAK,kEAAkE;QACrEC,IAAAA,cAAM,gBAAC,qBAACC,sBAAU;YAAE,GAAGN,SAAS;;QAChCO,OAAOC,cAAM,CAACC,SAAS,CAAC,sBAAsBC,iBAAiB;IACjE;IAEAN,KAAK,iEAAiE;QACpE,MAAMO,UAAUrD,KAAKsD,KAAK,CAACC,QAAQ,QAAQC,kBAAkB,CAAC,IAAM;QACpET,IAAAA,cAAM,gBAAC,qBAACC,sBAAU;YAAE,GAAGN,SAAS;;QAEhC,MAAMe,MAAMP,cAAM,CAACQ,SAAS,CAAC,UAAU;YAAElB,MAAM;QAAsB;QACrEmB,iBAAS,CAACC,KAAK,CAACH;QAEhB,MAAMI,cAAc,IAAIC,IAAI,aAAaP,OAAOQ,QAAQ,CAACC,MAAM;QAC/DH,YAAYI,YAAY,CAACC,GAAG,CAAC,KAAK;QAClCL,YAAYI,YAAY,CAACC,GAAG,CAAC,UAAU;QAEvCjB,OAAOI,SAASc,qBAAqB,CAAC;QACtClB,OAAOI,SAASe,oBAAoB,CAACP,YAAYQ,QAAQ,IAAI,UAAU;QAEvEhB,QAAQiB,WAAW;IACrB;AACF"}