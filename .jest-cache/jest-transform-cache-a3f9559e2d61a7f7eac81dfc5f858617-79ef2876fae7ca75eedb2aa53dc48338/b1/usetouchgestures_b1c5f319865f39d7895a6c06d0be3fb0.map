{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/hooks/use-touch-gestures.ts"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\n\nimport { useCallback, useRef, useState } from \"react\"\n\ninterface TouchGestureOptions {\n  onSwipeLeft?: () => void\n  onSwipeRight?: () => void\n  onSwipeUp?: () => void\n  onSwipeDown?: () => void\n  onLongPress?: () => void\n  threshold?: number\n  longPressDelay?: number\n}\n\nexport function useTouchGestures({\n  onSwipeLeft,\n  onSwipeRight,\n  onSwipeUp,\n  onSwipeDown,\n  onLongPress,\n  threshold = 50,\n  longPressDelay = 500,\n}: TouchGestureOptions) {\n  const touchStart = useRef<{ x: number; y: number; time: number } | null>(null)\n  const longPressTimer = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const [isLongPressing, setIsLongPressing] = useState(false)\n\n  const handleTouchStart = useCallback(\n    (e: React.TouchEvent) => {\n      const touch = e.touches[0]\n      touchStart.current = {\n        x: touch.clientX,\n        y: touch.clientY,\n        time: Date.now(),\n      }\n\n      // Start long press timer\n      if (onLongPress) {\n        longPressTimer.current = setTimeout(() => {\n          setIsLongPressing(true)\n          onLongPress()\n        }, longPressDelay)\n      }\n    },\n    [onLongPress, longPressDelay],\n  )\n\n  const handleTouchMove = useCallback(() => {\n    // Cancel long press if user moves finger\n    if (longPressTimer.current) {\n      clearTimeout(longPressTimer.current)\n      longPressTimer.current = null\n    }\n  }, [])\n\n  const handleTouchEnd = useCallback(\n    (e: React.TouchEvent) => {\n      if (longPressTimer.current) {\n        clearTimeout(longPressTimer.current)\n        longPressTimer.current = null\n      }\n\n      if (isLongPressing) {\n        setIsLongPressing(false)\n        return\n      }\n\n      if (!touchStart.current) return\n\n      const touch = e.changedTouches[0]\n      const deltaX = touch.clientX - touchStart.current.x\n      const deltaY = touch.clientY - touchStart.current.y\n      const deltaTime = Date.now() - touchStart.current.time\n\n      // Ignore if touch was too slow (likely not a swipe)\n      if (deltaTime > 300) return\n\n      const absDeltaX = Math.abs(deltaX)\n      const absDeltaY = Math.abs(deltaY)\n\n      // Determine swipe direction\n      if (absDeltaX > threshold && absDeltaX > absDeltaY) {\n        if (deltaX > 0) {\n          onSwipeRight?.()\n        } else {\n          onSwipeLeft?.()\n        }\n      } else if (absDeltaY > threshold && absDeltaY > absDeltaX) {\n        if (deltaY > 0) {\n          onSwipeDown?.()\n        } else {\n          onSwipeUp?.()\n        }\n      }\n\n      touchStart.current = null\n    },\n    [onSwipeLeft, onSwipeRight, onSwipeUp, onSwipeDown, threshold, isLongPressing],\n  )\n\n  return {\n    touchHandlers: {\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n    },\n    isLongPressing,\n  }\n}\n"],"names":["useTouchGestures","onSwipeLeft","onSwipeRight","onSwipeUp","onSwipeDown","onLongPress","threshold","longPressDelay","touchStart","useRef","longPressTimer","isLongPressing","setIsLongPressing","useState","handleTouchStart","useCallback","e","touch","touches","current","x","clientX","y","clientY","time","Date","now","setTimeout","handleTouchMove","clearTimeout","handleTouchEnd","changedTouches","deltaX","deltaY","deltaTime","absDeltaX","Math","abs","absDeltaY","touchHandlers","onTouchStart","onTouchMove","onTouchEnd"],"mappings":"AAAA;;;;;+BAgBgBA;;;eAAAA;;;uBAZ8B;AAYvC,SAASA,iBAAiB,EAC/BC,WAAW,EACXC,YAAY,EACZC,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,YAAY,EAAE,EACdC,iBAAiB,GAAG,EACA;IACpB,MAAMC,aAAaC,IAAAA,aAAM,EAAgD;IACzE,MAAMC,iBAAiBD,IAAAA,aAAM,EAAuC;IACpE,MAAM,CAACE,gBAAgBC,kBAAkB,GAAGC,IAAAA,eAAQ,EAAC;IAErD,MAAMC,mBAAmBC,IAAAA,kBAAW,EAClC,CAACC;QACC,MAAMC,QAAQD,EAAEE,OAAO,CAAC,EAAE;QAC1BV,WAAWW,OAAO,GAAG;YACnBC,GAAGH,MAAMI,OAAO;YAChBC,GAAGL,MAAMM,OAAO;YAChBC,MAAMC,KAAKC,GAAG;QAChB;QAEA,yBAAyB;QACzB,IAAIrB,aAAa;YACfK,eAAeS,OAAO,GAAGQ,WAAW;gBAClCf,kBAAkB;gBAClBP;YACF,GAAGE;QACL;IACF,GACA;QAACF;QAAaE;KAAe;IAG/B,MAAMqB,kBAAkBb,IAAAA,kBAAW,EAAC;QAClC,yCAAyC;QACzC,IAAIL,eAAeS,OAAO,EAAE;YAC1BU,aAAanB,eAAeS,OAAO;YACnCT,eAAeS,OAAO,GAAG;QAC3B;IACF,GAAG,EAAE;IAEL,MAAMW,iBAAiBf,IAAAA,kBAAW,EAChC,CAACC;QACC,IAAIN,eAAeS,OAAO,EAAE;YAC1BU,aAAanB,eAAeS,OAAO;YACnCT,eAAeS,OAAO,GAAG;QAC3B;QAEA,IAAIR,gBAAgB;YAClBC,kBAAkB;YAClB;QACF;QAEA,IAAI,CAACJ,WAAWW,OAAO,EAAE;QAEzB,MAAMF,QAAQD,EAAEe,cAAc,CAAC,EAAE;QACjC,MAAMC,SAASf,MAAMI,OAAO,GAAGb,WAAWW,OAAO,CAACC,CAAC;QACnD,MAAMa,SAAShB,MAAMM,OAAO,GAAGf,WAAWW,OAAO,CAACG,CAAC;QACnD,MAAMY,YAAYT,KAAKC,GAAG,KAAKlB,WAAWW,OAAO,CAACK,IAAI;QAEtD,oDAAoD;QACpD,IAAIU,YAAY,KAAK;QAErB,MAAMC,YAAYC,KAAKC,GAAG,CAACL;QAC3B,MAAMM,YAAYF,KAAKC,GAAG,CAACJ;QAE3B,4BAA4B;QAC5B,IAAIE,YAAY7B,aAAa6B,YAAYG,WAAW;YAClD,IAAIN,SAAS,GAAG;gBACd9B;YACF,OAAO;gBACLD;YACF;QACF,OAAO,IAAIqC,YAAYhC,aAAagC,YAAYH,WAAW;YACzD,IAAIF,SAAS,GAAG;gBACd7B;YACF,OAAO;gBACLD;YACF;QACF;QAEAK,WAAWW,OAAO,GAAG;IACvB,GACA;QAAClB;QAAaC;QAAcC;QAAWC;QAAaE;QAAWK;KAAe;IAGhF,OAAO;QACL4B,eAAe;YACbC,cAAc1B;YACd2B,aAAab;YACbc,YAAYZ;QACd;QACAnB;IACF;AACF"}