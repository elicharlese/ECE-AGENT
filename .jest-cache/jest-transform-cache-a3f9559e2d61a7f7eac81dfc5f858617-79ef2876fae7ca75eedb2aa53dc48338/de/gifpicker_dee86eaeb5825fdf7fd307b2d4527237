2780b57435c2a2cd1a49204e822d7642
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "GifPicker", {
    enumerable: true,
    get: function() {
        return GifPicker;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _button = require("../ui/button");
const _popover = require("../ui/popover");
const _input = require("../ui/input");
const _lucidereact = require("lucide-react");
function GifPicker({ onGifSelect }) {
    const [searchTerm, setSearchTerm] = (0, _react.useState)("");
    const [gifs, setGifs] = (0, _react.useState)([]);
    const [loading, setLoading] = (0, _react.useState)(false);
    const [selectedCategory, setSelectedCategory] = (0, _react.useState)("trending");
    // Mock GIF data for demonstration (in real app, would use Giphy/Tenor API)
    const mockGifs = [
        {
            id: "1",
            title: "Happy Dance",
            url: "/placeholder.svg?height=200&width=200",
            preview_url: "/placeholder.svg?height=100&width=100",
            width: 200,
            height: 200
        },
        {
            id: "2",
            title: "Thumbs Up",
            url: "/placeholder.svg?height=150&width=200",
            preview_url: "/placeholder.svg?height=75&width=100",
            width: 200,
            height: 150
        },
        {
            id: "3",
            title: "Mind Blown",
            url: "/placeholder.svg?height=180&width=180",
            preview_url: "/placeholder.svg?height=90&width=90",
            width: 180,
            height: 180
        },
        {
            id: "4",
            title: "Celebration",
            url: "/placeholder.svg?height=220&width=200",
            preview_url: "/placeholder.svg?height=110&width=100",
            width: 200,
            height: 220
        },
        {
            id: "5",
            title: "Laughing",
            url: "/placeholder.svg?height=160&width=200",
            preview_url: "/placeholder.svg?height=80&width=100",
            width: 200,
            height: 160
        },
        {
            id: "6",
            title: "High Five",
            url: "/placeholder.svg?height=180&width=200",
            preview_url: "/placeholder.svg?height=90&width=100",
            width: 200,
            height: 180
        },
        {
            id: "7",
            title: "Thinking",
            url: "/placeholder.svg?height=170&width=170",
            preview_url: "/placeholder.svg?height=85&width=85",
            width: 170,
            height: 170
        },
        {
            id: "8",
            title: "Shocked",
            url: "/placeholder.svg?height=190&width=200",
            preview_url: "/placeholder.svg?height=95&width=100",
            width: 200,
            height: 190
        }
    ];
    const categories = [
        {
            id: "trending",
            name: "Trending",
            icon: _lucidereact.Zap
        },
        {
            id: "reactions",
            name: "Reactions",
            icon: _lucidereact.ImageIcon
        },
        {
            id: "emotions",
            name: "Emotions",
            icon: _lucidereact.ImageIcon
        },
        {
            id: "animals",
            name: "Animals",
            icon: _lucidereact.ImageIcon
        },
        {
            id: "sports",
            name: "Sports",
            icon: _lucidereact.ImageIcon
        }
    ];
    // Simulate API search
    const searchGifs = async (query, category = "trending")=>{
        setLoading(true);
        // Simulate API delay
        await new Promise((resolve)=>setTimeout(resolve, 500));
        let filteredGifs = mockGifs;
        if (query) {
            filteredGifs = mockGifs.filter((gif)=>gif.title.toLowerCase().includes(query.toLowerCase()));
        }
        // Add category-specific filtering logic here
        if (category === "reactions") {
            filteredGifs = filteredGifs.filter((gif)=>[
                    "thumbs up",
                    "mind blown",
                    "celebration",
                    "high five"
                ].some((reaction)=>gif.title.toLowerCase().includes(reaction)));
        }
        setGifs(filteredGifs);
        setLoading(false);
    };
    // Load trending GIFs on mount
    (0, _react.useEffect)(()=>{
        searchGifs("", selectedCategory);
    }, [
        selectedCategory
    ]);
    // Search with debounce
    (0, _react.useEffect)(()=>{
        const timer = setTimeout(()=>{
            if (searchTerm) {
                searchGifs(searchTerm, selectedCategory);
            } else {
                searchGifs("", selectedCategory);
            }
        }, 300);
        return ()=>clearTimeout(timer);
    }, [
        searchTerm,
        selectedCategory
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_popover.Popover, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_popover.PopoverTrigger, {
                asChild: true,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                    variant: "ghost",
                    size: "sm",
                    className: "hover:bg-purple-50 dark:hover:bg-purple-900/20",
                    "aria-label": "Open GIF picker",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ImageIcon, {
                        className: "h-4 w-4 text-purple-600 dark:text-purple-400"
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_popover.PopoverContent, {
                className: "w-96 p-0",
                align: "end",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "p-3 border-b border-gray-200 dark:border-gray-700",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "relative",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Search, {
                                    className: "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                    type: "text",
                                    placeholder: "Search GIFs...",
                                    value: searchTerm,
                                    onChange: (e)=>setSearchTerm(e.target.value),
                                    className: "pl-10 pr-4 py-2 text-sm border border-gray-200 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-purple-500"
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "border-b border-gray-200 dark:border-gray-700",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "flex overflow-x-auto p-2 gap-1 scrollbar-hide",
                            children: categories.map((category)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                    variant: selectedCategory === category.id ? "default" : "ghost",
                                    size: "sm",
                                    className: "text-xs whitespace-nowrap min-w-fit flex items-center gap-1",
                                    onClick: ()=>setSelectedCategory(category.id),
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(category.icon, {
                                            className: "h-3 w-3"
                                        }),
                                        category.name
                                    ]
                                }, category.id))
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "p-3 h-80 overflow-y-auto",
                        children: [
                            loading ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "flex items-center justify-center h-full",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex flex-col items-center gap-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Loader2, {
                                            className: "h-6 w-6 animate-spin text-purple-500"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            className: "text-sm text-gray-500",
                                            children: "Loading GIFs..."
                                        })
                                    ]
                                })
                            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "grid grid-cols-2 gap-2",
                                children: gifs.map((gif)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                        className: "relative group rounded-lg overflow-hidden hover:ring-2 hover:ring-purple-500 transition-all duration-200",
                                        onClick: ()=>onGifSelect(gif),
                                        title: gif.title,
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                                                src: gif.preview_url || "/placeholder.svg",
                                                alt: gif.title,
                                                className: "w-full h-24 object-cover group-hover:scale-105 transition-transform duration-200",
                                                loading: "lazy"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "absolute inset-0 bg-black/0 group-hover:bg-black/10 transition-colors duration-200"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "absolute bottom-1 left-1 right-1",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "bg-black/70 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 truncate",
                                                    children: gif.title
                                                })
                                            })
                                        ]
                                    }, gif.id))
                            }),
                            !loading && gifs.length === 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "text-center text-gray-500 dark:text-gray-400 py-8",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ImageIcon, {
                                        className: "h-8 w-8 mx-auto mb-2 opacity-50"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        children: "No GIFs found"
                                    }),
                                    searchTerm && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-sm",
                                        children: "Try a different search term"
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "p-2 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-800",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                            className: "text-xs text-gray-500 text-center",
                            children: [
                                "Powered by GIF Search • ",
                                gifs.length,
                                " results"
                            ]
                        })
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,