{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/components/chat/gif-picker.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\nimport { Input } from \"@/components/ui/input\"\nimport { ImageIcon, Search, Loader2, Zap } from \"lucide-react\"\n\ninterface GifData {\n  id: string\n  title: string\n  url: string\n  preview_url: string\n  width: number\n  height: number\n}\n\ninterface GifPickerProps {\n  onGifSelect: (gif: GifData) => void\n}\n\nexport function GifPicker({ onGifSelect }: GifPickerProps) {\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [gifs, setGifs] = useState<GifData[]>([])\n  const [loading, setLoading] = useState(false)\n  const [selectedCategory, setSelectedCategory] = useState(\"trending\")\n\n  // Mock GIF data for demonstration (in real app, would use Giphy/Tenor API)\n  const mockGifs: GifData[] = [\n    {\n      id: \"1\",\n      title: \"Happy Dance\",\n      url: \"/placeholder.svg?height=200&width=200\",\n      preview_url: \"/placeholder.svg?height=100&width=100\",\n      width: 200,\n      height: 200,\n    },\n    {\n      id: \"2\",\n      title: \"Thumbs Up\",\n      url: \"/placeholder.svg?height=150&width=200\",\n      preview_url: \"/placeholder.svg?height=75&width=100\",\n      width: 200,\n      height: 150,\n    },\n    {\n      id: \"3\",\n      title: \"Mind Blown\",\n      url: \"/placeholder.svg?height=180&width=180\",\n      preview_url: \"/placeholder.svg?height=90&width=90\",\n      width: 180,\n      height: 180,\n    },\n    {\n      id: \"4\",\n      title: \"Celebration\",\n      url: \"/placeholder.svg?height=220&width=200\",\n      preview_url: \"/placeholder.svg?height=110&width=100\",\n      width: 200,\n      height: 220,\n    },\n    {\n      id: \"5\",\n      title: \"Laughing\",\n      url: \"/placeholder.svg?height=160&width=200\",\n      preview_url: \"/placeholder.svg?height=80&width=100\",\n      width: 200,\n      height: 160,\n    },\n    {\n      id: \"6\",\n      title: \"High Five\",\n      url: \"/placeholder.svg?height=180&width=200\",\n      preview_url: \"/placeholder.svg?height=90&width=100\",\n      width: 200,\n      height: 180,\n    },\n    {\n      id: \"7\",\n      title: \"Thinking\",\n      url: \"/placeholder.svg?height=170&width=170\",\n      preview_url: \"/placeholder.svg?height=85&width=85\",\n      width: 170,\n      height: 170,\n    },\n    {\n      id: \"8\",\n      title: \"Shocked\",\n      url: \"/placeholder.svg?height=190&width=200\",\n      preview_url: \"/placeholder.svg?height=95&width=100\",\n      width: 200,\n      height: 190,\n    },\n  ]\n\n  const categories = [\n    { id: \"trending\", name: \"Trending\", icon: Zap },\n    { id: \"reactions\", name: \"Reactions\", icon: ImageIcon },\n    { id: \"emotions\", name: \"Emotions\", icon: ImageIcon },\n    { id: \"animals\", name: \"Animals\", icon: ImageIcon },\n    { id: \"sports\", name: \"Sports\", icon: ImageIcon },\n  ]\n\n  // Simulate API search\n  const searchGifs = async (query: string, category = \"trending\") => {\n    setLoading(true)\n\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 500))\n\n    let filteredGifs = mockGifs\n\n    if (query) {\n      filteredGifs = mockGifs.filter((gif) => gif.title.toLowerCase().includes(query.toLowerCase()))\n    }\n\n    // Add category-specific filtering logic here\n    if (category === \"reactions\") {\n      filteredGifs = filteredGifs.filter((gif) =>\n        [\"thumbs up\", \"mind blown\", \"celebration\", \"high five\"].some((reaction) =>\n          gif.title.toLowerCase().includes(reaction),\n        ),\n      )\n    }\n\n    setGifs(filteredGifs)\n    setLoading(false)\n  }\n\n  // Load trending GIFs on mount\n  useEffect(() => {\n    searchGifs(\"\", selectedCategory)\n  }, [selectedCategory])\n\n  // Search with debounce\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (searchTerm) {\n        searchGifs(searchTerm, selectedCategory)\n      } else {\n        searchGifs(\"\", selectedCategory)\n      }\n    }, 300)\n\n    return () => clearTimeout(timer)\n  }, [searchTerm, selectedCategory])\n\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          className=\"hover:bg-purple-50 dark:hover:bg-purple-900/20\"\n          aria-label=\"Open GIF picker\"\n        >\n          <ImageIcon className=\"h-4 w-4 text-purple-600 dark:text-purple-400\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-96 p-0\" align=\"end\">\n        {/* Header with search */}\n        <div className=\"p-3 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <Input\n              type=\"text\"\n              placeholder=\"Search GIFs...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10 pr-4 py-2 text-sm border border-gray-200 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n            />\n          </div>\n        </div>\n\n        {/* Category tabs */}\n        <div className=\"border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex overflow-x-auto p-2 gap-1 scrollbar-hide\">\n            {categories.map((category) => (\n              <Button\n                key={category.id}\n                variant={selectedCategory === category.id ? \"default\" : \"ghost\"}\n                size=\"sm\"\n                className=\"text-xs whitespace-nowrap min-w-fit flex items-center gap-1\"\n                onClick={() => setSelectedCategory(category.id)}\n              >\n                <category.icon className=\"h-3 w-3\" />\n                {category.name}\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        {/* GIF grid */}\n        <div className=\"p-3 h-80 overflow-y-auto\">\n          {loading ? (\n            <div className=\"flex items-center justify-center h-full\">\n              <div className=\"flex flex-col items-center gap-2\">\n                <Loader2 className=\"h-6 w-6 animate-spin text-purple-500\" />\n                <p className=\"text-sm text-gray-500\">Loading GIFs...</p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-2 gap-2\">\n              {gifs.map((gif) => (\n                <button\n                  key={gif.id}\n                  className=\"relative group rounded-lg overflow-hidden hover:ring-2 hover:ring-purple-500 transition-all duration-200\"\n                  onClick={() => onGifSelect(gif)}\n                  title={gif.title}\n                >\n                  <img\n                    src={gif.preview_url || \"/placeholder.svg\"}\n                    alt={gif.title}\n                    className=\"w-full h-24 object-cover group-hover:scale-105 transition-transform duration-200\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"absolute inset-0 bg-black/0 group-hover:bg-black/10 transition-colors duration-200\" />\n                  <div className=\"absolute bottom-1 left-1 right-1\">\n                    <div className=\"bg-black/70 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 truncate\">\n                      {gif.title}\n                    </div>\n                  </div>\n                </button>\n              ))}\n            </div>\n          )}\n\n          {/* No results message */}\n          {!loading && gifs.length === 0 && (\n            <div className=\"text-center text-gray-500 dark:text-gray-400 py-8\">\n              <ImageIcon className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n              <p>No GIFs found</p>\n              {searchTerm && <p className=\"text-sm\">Try a different search term</p>}\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"p-2 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-800\">\n          <p className=\"text-xs text-gray-500 text-center\">Powered by GIF Search â€¢ {gifs.length} results</p>\n        </div>\n      </PopoverContent>\n    </Popover>\n  )\n}\n"],"names":["GifPicker","onGifSelect","searchTerm","setSearchTerm","useState","gifs","setGifs","loading","setLoading","selectedCategory","setSelectedCategory","mockGifs","id","title","url","preview_url","width","height","categories","name","icon","Zap","ImageIcon","searchGifs","query","category","Promise","resolve","setTimeout","filteredGifs","filter","gif","toLowerCase","includes","some","reaction","useEffect","timer","clearTimeout","Popover","PopoverTrigger","asChild","Button","variant","size","className","aria-label","PopoverContent","align","div","Search","Input","type","placeholder","value","onChange","e","target","map","onClick","Loader2","p","button","img","src","alt","length"],"mappings":"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"}