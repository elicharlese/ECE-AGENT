{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/libs/observability/CoreProtection.ts"],"sourcesContent":["import { z } from 'zod';\nimport { promises as fs } from 'fs';\nimport { join } from 'path';\nimport { glob } from 'glob';\nimport {\n  CoreProtectionResult,\n  RecorderConfig,\n  CoreProtectionResultSchema,\n} from '../../src/types/agent-observability';\n\nexport class CoreProtection {\n  private protectedPaths: string[];\n  private learningPaths: string[];\n\n  constructor(private config?: RecorderConfig) {\n    this.protectedPaths = config?.protectedPaths || [\n      'src/types/agent.ts',\n      'src/types/conversation.ts',\n      'src/types/credits.ts',\n      'src/types/user-tiers.ts',\n      'prisma/schema.prisma',\n      'middleware.ts',\n      'lib/supabase/**',\n      'components/ui/**',\n      'app/api/auth/**',\n      '.github/workflows/**'\n    ];\n    this.learningPaths = config?.learningPaths || [\n      'data/learning/**',\n      'docs/patches/**',\n      '__tests__/**',\n      'scripts/**'\n    ];\n  }\n\n  async validateTransformation(filesTouched: string[]): Promise<CoreProtectionResult> {\n    const violations: Array<{ path: string; reason: string; severity: 'warning' | 'error' | 'critical' }> = [];\n    const protectedPaths: string[] = [];\n    const allowedPaths: string[] = [];\n\n    for (const file of filesTouched) {\n      if (this.isPristineCorePath(file)) {\n        protectedPaths.push(file);\n        \n        // Determine severity based on file criticality\n        const severity = this.getViolationSeverity(file);\n        violations.push({\n          path: file,\n          reason: `Attempted modification of pristine core file: ${file}`,\n          severity,\n        });\n      } else if (this.isLearningLayerPath(file)) {\n        allowedPaths.push(file);\n      } else {\n        // Regular application files - allowed but logged\n        allowedPaths.push(file);\n      }\n    }\n\n    return CoreProtectionResultSchema.parse({\n      isValid: violations.length === 0 || !violations.some(v => v.severity === 'critical'),\n      violations,\n      protectedPaths,\n      allowedPaths,\n      timestamp: new Date().toISOString(),\n    });\n  }\n\n  isPristineCorePath(filePath: string): boolean {\n    // Normalize path for comparison\n    const normalizedPath = filePath.replace(/^\\/+/, '').replace(/\\\\/g, '/');\n    \n    return this.protectedPaths.some(pattern => {\n      // Convert glob pattern to regex for matching\n      const regexPattern = pattern\n        .replace(/\\*\\*/g, '.*')\n        .replace(/\\*/g, '[^/]*')\n        .replace(/\\?/g, '[^/]');\n      \n      const regex = new RegExp(`^${regexPattern}$`);\n      return regex.test(normalizedPath);\n    });\n  }\n\n  isLearningLayerPath(filePath: string): boolean {\n    const normalizedPath = filePath.replace(/^\\/+/, '').replace(/\\\\/g, '/');\n    \n    return this.learningPaths.some(pattern => {\n      const regexPattern = pattern\n        .replace(/\\*\\*/g, '.*')\n        .replace(/\\*/g, '[^/]*')\n        .replace(/\\?/g, '[^/]');\n      \n      const regex = new RegExp(`^${regexPattern}$`);\n      return regex.test(normalizedPath);\n    });\n  }\n\n  async validatePath(filePath: string): Promise<{ isProtected: boolean; reason?: string }> {\n    const isProtected = this.isPristineCorePath(filePath);\n    return {\n      isProtected,\n      reason: isProtected ? `File ${filePath} is in protected pristine core` : undefined\n    };\n  }\n\n  async auditIntegrity(): Promise<CoreProtectionResult> {\n    return this.auditCoreIntegrity();\n  }\n\n  async auditCoreIntegrity(): Promise<CoreProtectionResult> {\n    const violations: Array<{ path: string; reason: string; severity: 'warning' | 'error' | 'critical' }> = [];\n    const protectedPaths: string[] = [];\n    const allowedPaths: string[] = [];\n\n    // Check if critical core files exist and haven't been tampered with\n    const criticalFiles = [\n      'src/types/agent.ts',\n      'src/types/conversation.ts', \n      'src/types/credits.ts',\n      'src/types/user-tiers.ts',\n      'prisma/schema.prisma',\n      'next.config.js',\n      'tailwind.config.js',\n      'tsconfig.json',\n    ];\n\n    for (const file of criticalFiles) {\n      try {\n        const exists = await fs.access(file).then(() => true).catch(() => false);\n        if (exists) {\n          protectedPaths.push(file);\n          \n          // Additional integrity checks could go here\n          // e.g., checksum validation, schema validation, etc.\n          const content = await fs.readFile(file, 'utf8');\n          \n          // Basic sanity checks\n          if (file.endsWith('.ts') && !content.includes('export')) {\n            violations.push({\n              path: file,\n              reason: `Core TypeScript file ${file} appears corrupted (no exports found)`,\n              severity: 'error',\n            });\n          }\n          \n          if (file === 'prisma/schema.prisma' && !content.includes('generator client')) {\n            violations.push({\n              path: file,\n              reason: 'Prisma schema missing generator client configuration',\n              severity: 'critical',\n            });\n          }\n        } else {\n          violations.push({\n            path: file,\n            reason: `Critical core file ${file} is missing`,\n            severity: 'critical',\n          });\n        }\n      } catch (error) {\n        violations.push({\n          path: file,\n          reason: `Failed to audit core file ${file}: ${error}`,\n          severity: 'error',\n        });\n      }\n    }\n\n    // Check for unauthorized modifications to protected directories\n    const protectedDirs = [\n      'components/ui',\n      'lib/supabase',\n      'app/api/auth',\n      '.github/workflows',\n    ];\n\n    for (const dir of protectedDirs) {\n      try {\n        const files = await glob(`${dir}/**/*`, { nodir: true });\n        protectedPaths.push(...files);\n        \n        // Could add file integrity checks here\n        // e.g., verify critical UI components haven't been modified\n      } catch (error) {\n        // Directory might not exist, which is also a violation for some dirs\n        if (dir === 'components/ui' || dir === 'lib/supabase') {\n          violations.push({\n            path: dir,\n            reason: `Critical directory ${dir} is missing or inaccessible`,\n            severity: 'error',\n          });\n        }\n      }\n    }\n\n    return CoreProtectionResultSchema.parse({\n      isValid: violations.length === 0 || !violations.some(v => v.severity === 'critical'),\n      violations,\n      protectedPaths,\n      allowedPaths,\n      timestamp: new Date().toISOString(),\n    });\n  }\n\n  private getViolationSeverity(filePath: string): 'warning' | 'error' | 'critical' {\n    // Critical files that must never be modified\n    const criticalFiles = [\n      'src/types/agent.ts',\n      'src/types/conversation.ts',\n      'src/types/credits.ts', \n      'src/types/user-tiers.ts',\n      'prisma/schema.prisma',\n      'middleware.ts',\n      'lib/supabase/client.ts',\n      'lib/supabase/server.ts',\n    ];\n\n    // Error-level files (important but not critical)\n    const errorFiles = [\n      'next.config.js',\n      'tailwind.config.js',\n      'tsconfig.json',\n      'components/ui/',\n      'app/api/auth/',\n    ];\n\n    const normalizedPath = filePath.replace(/^\\/+/, '').replace(/\\\\/g, '/');\n\n    if (criticalFiles.some(f => normalizedPath === f || normalizedPath.startsWith(f))) {\n      return 'critical';\n    }\n\n    if (errorFiles.some(f => normalizedPath === f || normalizedPath.startsWith(f))) {\n      return 'error';\n    }\n\n    return 'warning';\n  }\n\n  async enforceProtection(): Promise<void> {\n    const result = await this.auditCoreIntegrity();\n    \n    if (!result.isValid) {\n      const criticalViolations = result.violations.filter(v => v.severity === 'critical');\n      \n      if (criticalViolations.length > 0) {\n        const violationList = criticalViolations.map(v => `- ${v.path}: ${v.reason}`).join('\\n');\n        throw new Error(`CRITICAL CORE PROTECTION VIOLATION:\\n${violationList}\\n\\nTransformation halted to protect pristine core.`);\n      }\n    }\n  }\n\n  generateProtectionReport(): string {\n    return `# Core Protection Configuration\n\n## Protected Paths (${this.protectedPaths.length})\n${this.protectedPaths.map(p => `- \\`${p}\\``).join('\\n')}\n\n## Learning Layer Paths (${this.learningPaths.length})\n${this.learningPaths.map(p => `- \\`${p}\\``).join('\\n')}\n\n## Protection Mechanisms\n- File path validation against protected patterns\n- Integrity auditing of critical core files\n- Automatic violation detection and blocking\n- Severity-based response (warning/error/critical)\n- Fail-safe transformation halting on critical violations\n\n## Violation Response Protocol\n1. **Warning**: Log and continue with monitoring\n2. **Error**: Log, alert, and require manual review\n3. **Critical**: Immediately halt transformation and rollback\n\n---\n*Generated by CoreProtection service*\n`;\n  }\n}\n"],"names":["CoreProtection","constructor","config","protectedPaths","learningPaths","validateTransformation","filesTouched","violations","allowedPaths","file","isPristineCorePath","push","severity","getViolationSeverity","path","reason","isLearningLayerPath","CoreProtectionResultSchema","parse","isValid","length","some","v","timestamp","Date","toISOString","filePath","normalizedPath","replace","pattern","regexPattern","regex","RegExp","test","validatePath","isProtected","undefined","auditIntegrity","auditCoreIntegrity","criticalFiles","exists","fs","access","then","catch","content","readFile","endsWith","includes","error","protectedDirs","dir","files","glob","nodir","errorFiles","f","startsWith","enforceProtection","result","criticalViolations","filter","violationList","map","join","Error","generateProtectionReport","p"],"mappings":"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"}