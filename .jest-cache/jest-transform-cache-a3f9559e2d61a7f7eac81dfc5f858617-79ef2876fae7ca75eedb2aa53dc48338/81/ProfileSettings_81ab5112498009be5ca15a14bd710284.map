{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/components/profile/ProfileSettings.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { z } from 'zod'\nimport { ProfileUpdateSchema, type ProfileUpdate } from '@/types/profile'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { UI_CONSTANTS } from '@/lib/ui-constants'\nimport { toast } from 'sonner'\n\nconst FormSchema = ProfileUpdateSchema.extend({\n  // Allow empty strings from inputs and coerce to undefined for optional fields\n  full_name: z.string().max(50).optional().or(z.literal('')).transform(v => (v === '' ? undefined : v)),\n  username: z\n    .string()\n    .min(3)\n    .max(20)\n    .regex(/^[a-z0-9_-]+$/i)\n    .optional()\n    .or(z.literal(''))\n    .transform(v => (v === '' ? undefined : v)),\n  avatar_url: z.string().url().optional().or(z.literal('')).transform(v => (v === '' ? undefined : v)),\n  cover_url: z.string().url().optional().or(z.literal('')).transform(v => (v === '' ? undefined : v)),\n  solana_address: z.string().min(32).max(128).optional().or(z.literal('')).transform(v => (v === '' ? undefined : v)),\n})\n\nexport function ProfileSettings() {\n  const [loading, setLoading] = useState(false)\n  const { register, handleSubmit, reset, formState: { errors, isDirty } } = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      full_name: '',\n      username: '',\n      avatar_url: '',\n      cover_url: '',\n      solana_address: '',\n    },\n  })\n\n  // Load current profile\n  useEffect(() => {\n    let ignore = false\n    ;(async () => {\n      try {\n        const res = await fetch('/api/profile', { method: 'GET' })\n        if (!res.ok) return\n        const { data } = await res.json()\n        if (ignore) return\n        reset({\n          full_name: data?.full_name ?? '',\n          username: data?.username ?? '',\n          avatar_url: data?.avatar_url ?? '',\n          cover_url: data?.cover_url ?? '',\n          solana_address: data?.solana_address ?? '',\n        })\n      } catch (e) {\n        // no-op\n      }\n    })()\n    return () => { ignore = true }\n  }, [reset])\n\n  const onSubmit = async (values: z.infer<typeof FormSchema>) => {\n    setLoading(true)\n    try {\n      // Map to API shape (snake_case) - API also accepts camelCase but we keep consistency\n      const payload: ProfileUpdate = {\n        full_name: values.full_name,\n        username: values.username?.toLowerCase(),\n        avatar_url: values.avatar_url,\n        cover_url: values.cover_url,\n        solana_address: values.solana_address,\n      }\n\n      const res = await fetch('/api/profile', {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload),\n      })\n\n      if (!res.ok) {\n        const err = await res.json().catch(() => ({}))\n        const msg = err?.error || 'Failed to update profile'\n        toast.error(msg)\n        return\n      }\n\n      toast.success('Profile updated')\n      // refresh values from server\n      const json = await res.json()\n      reset({\n        full_name: json.data?.full_name ?? '',\n        username: json.data?.username ?? '',\n        avatar_url: json.data?.avatar_url ?? '',\n        cover_url: json.data?.cover_url ?? '',\n        solana_address: json.data?.solana_address ?? '',\n      })\n    } catch {\n      toast.error('Failed to update profile')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2 text-lg\">Profile Settings</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit(onSubmit)} className={`grid ${UI_CONSTANTS.grid.cols2} gap-4`}>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"full_name\">Display name</Label>\n            <Input id=\"full_name\" placeholder=\"Your name\" {...register('full_name')} />\n            {errors.full_name && <p className=\"text-xs text-red-500\">{errors.full_name.message}</p>}\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"username\">Username</Label>\n            <Input id=\"username\" placeholder=\"your_handle\" {...register('username')} />\n            {errors.username && <p className=\"text-xs text-red-500\">{errors.username.message}</p>}\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"avatar_url\">Avatar URL</Label>\n            <Input id=\"avatar_url\" placeholder=\"https://...\" {...register('avatar_url')} />\n            {errors.avatar_url && <p className=\"text-xs text-red-500\">{errors.avatar_url.message}</p>}\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"cover_url\">Cover URL</Label>\n            <Input id=\"cover_url\" placeholder=\"https://...\" {...register('cover_url')} />\n            {errors.cover_url && <p className=\"text-xs text-red-500\">{errors.cover_url.message}</p>}\n          </div>\n\n          <div className=\"space-y-2 md:col-span-2\">\n            <Label htmlFor=\"solana_address\">Solana Address</Label>\n            <Input id=\"solana_address\" placeholder=\"Your Solana wallet address\" {...register('solana_address')} />\n            {errors.solana_address && <p className=\"text-xs text-red-500\">{errors.solana_address.message}</p>}\n          </div>\n\n          <div className=\"md:col-span-2 flex justify-end gap-2\">\n            <Button type=\"submit\" disabled={loading || !isDirty}>{loading ? 'Saving...' : 'Save changes'}</Button>\n          </div>\n        </form>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":["ProfileSettings","FormSchema","ProfileUpdateSchema","extend","full_name","z","string","max","optional","or","literal","transform","v","undefined","username","min","regex","avatar_url","url","cover_url","solana_address","loading","setLoading","useState","register","handleSubmit","reset","formState","errors","isDirty","useForm","resolver","zodResolver","defaultValues","useEffect","ignore","res","fetch","method","ok","data","json","e","onSubmit","values","payload","toLowerCase","headers","body","JSON","stringify","err","catch","msg","error","toast","success","Card","CardHeader","CardTitle","className","CardContent","form","UI_CONSTANTS","grid","cols2","div","Label","htmlFor","Input","id","placeholder","p","message","Button","type","disabled"],"mappings":"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"}