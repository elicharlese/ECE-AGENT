2b929983fe8d2d1869c8e76b376d2bca
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ProfileSettings", {
    enumerable: true,
    get: function() {
        return ProfileSettings;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reacthookform = require("react-hook-form");
const _zod = require("@hookform/resolvers/zod");
const _zod1 = require("zod");
const _profile = require("../../types/profile");
const _card = require("../ui/card");
const _button = require("../ui/button");
const _input = require("../ui/input");
const _label = require("../ui/label");
const _uiconstants = require("../../lib/ui-constants");
const _sonner = require("sonner");
const FormSchema = _profile.ProfileUpdateSchema.extend({
    // Allow empty strings from inputs and coerce to undefined for optional fields
    full_name: _zod1.z.string().max(50).optional().or(_zod1.z.literal("")).transform((v)=>v === "" ? undefined : v),
    username: _zod1.z.string().min(3).max(20).regex(/^[a-z0-9_-]+$/i).optional().or(_zod1.z.literal("")).transform((v)=>v === "" ? undefined : v),
    avatar_url: _zod1.z.string().url().optional().or(_zod1.z.literal("")).transform((v)=>v === "" ? undefined : v),
    cover_url: _zod1.z.string().url().optional().or(_zod1.z.literal("")).transform((v)=>v === "" ? undefined : v),
    solana_address: _zod1.z.string().min(32).max(128).optional().or(_zod1.z.literal("")).transform((v)=>v === "" ? undefined : v)
});
function ProfileSettings() {
    const [loading, setLoading] = (0, _react.useState)(false);
    const { register, handleSubmit, reset, formState: { errors, isDirty } } = (0, _reacthookform.useForm)({
        resolver: (0, _zod.zodResolver)(FormSchema),
        defaultValues: {
            full_name: "",
            username: "",
            avatar_url: "",
            cover_url: "",
            solana_address: ""
        }
    });
    // Load current profile
    (0, _react.useEffect)(()=>{
        let ignore = false;
        (async ()=>{
            try {
                const res = await fetch("/api/profile", {
                    method: "GET"
                });
                if (!res.ok) return;
                const { data } = await res.json();
                if (ignore) return;
                reset({
                    full_name: data?.full_name ?? "",
                    username: data?.username ?? "",
                    avatar_url: data?.avatar_url ?? "",
                    cover_url: data?.cover_url ?? "",
                    solana_address: data?.solana_address ?? ""
                });
            } catch (e) {
            // no-op
            }
        })();
        return ()=>{
            ignore = true;
        };
    }, [
        reset
    ]);
    const onSubmit = async (values)=>{
        setLoading(true);
        try {
            // Map to API shape (snake_case) - API also accepts camelCase but we keep consistency
            const payload = {
                full_name: values.full_name,
                username: values.username?.toLowerCase(),
                avatar_url: values.avatar_url,
                cover_url: values.cover_url,
                solana_address: values.solana_address
            };
            const res = await fetch("/api/profile", {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(payload)
            });
            if (!res.ok) {
                const err = await res.json().catch(()=>({}));
                const msg = err?.error || "Failed to update profile";
                _sonner.toast.error(msg);
                return;
            }
            _sonner.toast.success("Profile updated");
            // refresh values from server
            const json = await res.json();
            reset({
                full_name: json.data?.full_name ?? "",
                username: json.data?.username ?? "",
                avatar_url: json.data?.avatar_url ?? "",
                cover_url: json.data?.cover_url ?? "",
                solana_address: json.data?.solana_address ?? ""
            });
        } catch  {
            _sonner.toast.error("Failed to update profile");
        } finally{
            setLoading(false);
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                    className: "flex items-center gap-2 text-lg",
                    children: "Profile Settings"
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("form", {
                    onSubmit: handleSubmit(onSubmit),
                    className: `grid ${_uiconstants.UI_CONSTANTS.grid.cols2} gap-4`,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                    htmlFor: "full_name",
                                    children: "Display name"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                    id: "full_name",
                                    placeholder: "Your name",
                                    ...register("full_name")
                                }),
                                errors.full_name && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-xs text-red-500",
                                    children: errors.full_name.message
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                    htmlFor: "username",
                                    children: "Username"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                    id: "username",
                                    placeholder: "your_handle",
                                    ...register("username")
                                }),
                                errors.username && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-xs text-red-500",
                                    children: errors.username.message
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                    htmlFor: "avatar_url",
                                    children: "Avatar URL"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                    id: "avatar_url",
                                    placeholder: "https://...",
                                    ...register("avatar_url")
                                }),
                                errors.avatar_url && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-xs text-red-500",
                                    children: errors.avatar_url.message
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                    htmlFor: "cover_url",
                                    children: "Cover URL"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                    id: "cover_url",
                                    placeholder: "https://...",
                                    ...register("cover_url")
                                }),
                                errors.cover_url && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-xs text-red-500",
                                    children: errors.cover_url.message
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-2 md:col-span-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                    htmlFor: "solana_address",
                                    children: "Solana Address"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                    id: "solana_address",
                                    placeholder: "Your Solana wallet address",
                                    ...register("solana_address")
                                }),
                                errors.solana_address && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-xs text-red-500",
                                    children: errors.solana_address.message
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "md:col-span-2 flex justify-end gap-2",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                type: "submit",
                                disabled: loading || !isDirty,
                                children: loading ? "Saving..." : "Save changes"
                            })
                        })
                    ]
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,