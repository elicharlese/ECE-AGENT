{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/__tests__/pages/home.page.test.ts"],"sourcesContent":["// Mock Next APIs used by the server component\njest.mock('next/navigation', () => ({\n  // redirect in Next throws to short-circuit; here we just spy on calls\n  redirect: jest.fn(),\n}))\n\njest.mock('next/headers', () => ({\n  cookies: jest.fn(),\n}))\n\ndescribe('app/page.tsx (HomePage) redirect behavior', () => {\n  const { redirect } = require('next/navigation') as { redirect: jest.Mock }\n  const { cookies } = require('next/headers') as { cookies: jest.Mock }\n\n  afterEach(() => {\n    jest.resetModules()\n    redirect.mockClear()\n    cookies.mockReset()\n  })\n\n  test('redirects to /messages when Supabase auth cookie is present', async () => {\n    // Simulate cookie store exposing sb-*-auth-token\n    ;(cookies as jest.Mock).mockImplementation(() => ({\n      getAll: () => [\n        { name: 'sb-xyz-auth-token', value: 'fake' },\n        { name: 'other', value: 'v' },\n      ],\n    }))\n\n    const mod = await import('@/app/page')\n    const HomePage = mod.default as () => Promise<unknown>\n\n    await HomePage()\n\n    expect(redirect).toHaveBeenCalledTimes(1)\n    expect(redirect).toHaveBeenCalledWith('/messages')\n  })\n\n  test('renders landing page when unauthenticated (no sb auth cookie)', async () => {\n    // No relevant cookies\n    ;(cookies as jest.Mock).mockImplementation(() => ({\n      getAll: () => [],\n    }))\n\n    const mod = await import('@/app/page')\n    const HomePage = mod.default as () => Promise<any>\n\n    const el = await HomePage()\n\n    // Should not redirect\n    expect(redirect).not.toHaveBeenCalled()\n\n    // Expect the returned element to be the main landing element\n    // app/page.tsx returns <main id=\"main-content\" ...>\n    expect(el).toBeTruthy()\n    expect((el as any)?.props?.id).toBe('main-content')\n  })\n})\n"],"names":["jest","mock","redirect","fn","cookies","describe","require","afterEach","resetModules","mockClear","mockReset","test","mockImplementation","getAll","name","value","mod","HomePage","default","expect","toHaveBeenCalledTimes","toHaveBeenCalledWith","el","not","toHaveBeenCalled","toBeTruthy","props","id","toBe"],"mappings":"AAAA,8CAA8C;;AAC9CA,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClC,sEAAsE;QACtEC,UAAUF,KAAKG,EAAE;IACnB,CAAA;AAEAH,KAAKC,IAAI,CAAC,gBAAgB,IAAO,CAAA;QAC/BG,SAASJ,KAAKG,EAAE;IAClB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEAE,SAAS,6CAA6C;IACpD,MAAM,EAAEH,QAAQ,EAAE,GAAGI,QAAQ;IAC7B,MAAM,EAAEF,OAAO,EAAE,GAAGE,QAAQ;IAE5BC,UAAU;QACRP,KAAKQ,YAAY;QACjBN,SAASO,SAAS;QAClBL,QAAQM,SAAS;IACnB;IAEAC,KAAK,+DAA+D;QAEhEP,QAAsBQ,kBAAkB,CAAC,IAAO,CAAA;gBAChDC,QAAQ,IAAM;wBACZ;4BAAEC,MAAM;4BAAqBC,OAAO;wBAAO;wBAC3C;4BAAED,MAAM;4BAASC,OAAO;wBAAI;qBAC7B;YACH,CAAA;QAEA,MAAMC,MAAM,MAAM,mEAAA,QAAO;QACzB,MAAMC,WAAWD,IAAIE,OAAO;QAE5B,MAAMD;QAENE,OAAOjB,UAAUkB,qBAAqB,CAAC;QACvCD,OAAOjB,UAAUmB,oBAAoB,CAAC;IACxC;IAEAV,KAAK,iEAAiE;QAElEP,QAAsBQ,kBAAkB,CAAC,IAAO,CAAA;gBAChDC,QAAQ,IAAM,EAAE;YAClB,CAAA;QAEA,MAAMG,MAAM,MAAM,mEAAA,QAAO;QACzB,MAAMC,WAAWD,IAAIE,OAAO;QAE5B,MAAMI,KAAK,MAAML;QAEjB,sBAAsB;QACtBE,OAAOjB,UAAUqB,GAAG,CAACC,gBAAgB;QAErC,6DAA6D;QAC7D,oDAAoD;QACpDL,OAAOG,IAAIG,UAAU;QACrBN,OAAQG,IAAYI,OAAOC,IAAIC,IAAI,CAAC;IACtC;AACF"}