23dfbf050730ab368fa41b9f5bfce570
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FileUpload", {
    enumerable: true,
    get: function() {
        return FileUpload;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _button = require("../ui/button");
const _popover = require("../ui/popover");
const _lucidereact = require("lucide-react");
function FileUpload({ onFileSelect }) {
    const fileInputRef = (0, _react.useRef)(null);
    const [uploadType, setUploadType] = (0, _react.useState)("");
    const handleFileSelect = (type, accept)=>{
        setUploadType(type);
        if (fileInputRef.current) {
            fileInputRef.current.accept = accept;
            fileInputRef.current.click();
        }
    };
    const handleFileChange = (e)=>{
        const file = e.target.files?.[0];
        if (file) {
            onFileSelect(file, uploadType);
        }
    };
    const uploadOptions = [
        {
            type: "image",
            label: "Photo",
            icon: _lucidereact.ImageIcon,
            accept: "image/*"
        },
        {
            type: "video",
            label: "Video",
            icon: _lucidereact.Video,
            accept: "video/*"
        },
        {
            type: "audio",
            label: "Audio",
            icon: _lucidereact.Music,
            accept: "audio/*"
        },
        {
            type: "document",
            label: "Document",
            icon: _lucidereact.FileText,
            accept: ".pdf,.doc,.docx,.txt"
        },
        {
            type: "camera",
            label: "Camera",
            icon: _lucidereact.Camera,
            accept: "image/*"
        }
    ];
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_popover.Popover, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_popover.PopoverTrigger, {
                        asChild: true,
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                            variant: "ghost",
                            size: "sm",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Paperclip, {
                                className: "h-4 w-4"
                            })
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_popover.PopoverContent, {
                        className: "w-48 p-2",
                        align: "start",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "space-y-1",
                            children: uploadOptions.map((option)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                    variant: "ghost",
                                    className: "w-full justify-start",
                                    onClick: ()=>handleFileSelect(option.type, option.accept),
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(option.icon, {
                                            className: "h-4 w-4 mr-2"
                                        }),
                                        option.label
                                    ]
                                }, option.type))
                        })
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                ref: fileInputRef,
                type: "file",
                className: "hidden",
                onChange: handleFileChange
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbGljaGFybGVzZS9DYXNjYWRlUHJvamVjdHMvQUdFTlQvY29tcG9uZW50cy9jaGF0L2ZpbGUtdXBsb2FkLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxuXG5pbXBvcnQgdHlwZSBSZWFjdCBmcm9tIFwicmVhY3RcIlxuXG5pbXBvcnQgeyB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvYnV0dG9uXCJcbmltcG9ydCB7IFBvcG92ZXIsIFBvcG92ZXJDb250ZW50LCBQb3BvdmVyVHJpZ2dlciB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvcG9wb3ZlclwiXG5pbXBvcnQgeyBQYXBlcmNsaXAsIEltYWdlSWNvbiwgVmlkZW8sIE11c2ljLCBGaWxlVGV4dCwgQ2FtZXJhIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiXG5cbmludGVyZmFjZSBGaWxlVXBsb2FkUHJvcHMge1xuICBvbkZpbGVTZWxlY3Q6IChmaWxlOiBGaWxlLCB0eXBlOiBzdHJpbmcpID0+IHZvaWRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEZpbGVVcGxvYWQoeyBvbkZpbGVTZWxlY3QgfTogRmlsZVVwbG9hZFByb3BzKSB7XG4gIGNvbnN0IGZpbGVJbnB1dFJlZiA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKVxuICBjb25zdCBbdXBsb2FkVHlwZSwgc2V0VXBsb2FkVHlwZV0gPSB1c2VTdGF0ZTxzdHJpbmc+KFwiXCIpXG5cbiAgY29uc3QgaGFuZGxlRmlsZVNlbGVjdCA9ICh0eXBlOiBzdHJpbmcsIGFjY2VwdDogc3RyaW5nKSA9PiB7XG4gICAgc2V0VXBsb2FkVHlwZSh0eXBlKVxuICAgIGlmIChmaWxlSW5wdXRSZWYuY3VycmVudCkge1xuICAgICAgZmlsZUlucHV0UmVmLmN1cnJlbnQuYWNjZXB0ID0gYWNjZXB0XG4gICAgICBmaWxlSW5wdXRSZWYuY3VycmVudC5jbGljaygpXG4gICAgfVxuICB9XG5cbiAgY29uc3QgaGFuZGxlRmlsZUNoYW5nZSA9IChlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIGNvbnN0IGZpbGUgPSBlLnRhcmdldC5maWxlcz8uWzBdXG4gICAgaWYgKGZpbGUpIHtcbiAgICAgIG9uRmlsZVNlbGVjdChmaWxlLCB1cGxvYWRUeXBlKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHVwbG9hZE9wdGlvbnMgPSBbXG4gICAgeyB0eXBlOiBcImltYWdlXCIsIGxhYmVsOiBcIlBob3RvXCIsIGljb246IEltYWdlSWNvbiwgYWNjZXB0OiBcImltYWdlLypcIiB9LFxuICAgIHsgdHlwZTogXCJ2aWRlb1wiLCBsYWJlbDogXCJWaWRlb1wiLCBpY29uOiBWaWRlbywgYWNjZXB0OiBcInZpZGVvLypcIiB9LFxuICAgIHsgdHlwZTogXCJhdWRpb1wiLCBsYWJlbDogXCJBdWRpb1wiLCBpY29uOiBNdXNpYywgYWNjZXB0OiBcImF1ZGlvLypcIiB9LFxuICAgIHsgdHlwZTogXCJkb2N1bWVudFwiLCBsYWJlbDogXCJEb2N1bWVudFwiLCBpY29uOiBGaWxlVGV4dCwgYWNjZXB0OiBcIi5wZGYsLmRvYywuZG9jeCwudHh0XCIgfSxcbiAgICB7IHR5cGU6IFwiY2FtZXJhXCIsIGxhYmVsOiBcIkNhbWVyYVwiLCBpY29uOiBDYW1lcmEsIGFjY2VwdDogXCJpbWFnZS8qXCIgfSxcbiAgXVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxQb3BvdmVyPlxuICAgICAgICA8UG9wb3ZlclRyaWdnZXIgYXNDaGlsZD5cbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJnaG9zdFwiIHNpemU9XCJzbVwiPlxuICAgICAgICAgICAgPFBhcGVyY2xpcCBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgPC9Qb3BvdmVyVHJpZ2dlcj5cbiAgICAgICAgPFBvcG92ZXJDb250ZW50IGNsYXNzTmFtZT1cInctNDggcC0yXCIgYWxpZ249XCJzdGFydFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS0xXCI+XG4gICAgICAgICAgICB7dXBsb2FkT3B0aW9ucy5tYXAoKG9wdGlvbikgPT4gKFxuICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAga2V5PXtvcHRpb24udHlwZX1cbiAgICAgICAgICAgICAgICB2YXJpYW50PVwiZ2hvc3RcIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBqdXN0aWZ5LXN0YXJ0XCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVGaWxlU2VsZWN0KG9wdGlvbi50eXBlLCBvcHRpb24uYWNjZXB0KX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxvcHRpb24uaWNvbiBjbGFzc05hbWU9XCJoLTQgdy00IG1yLTJcIiAvPlxuICAgICAgICAgICAgICAgIHtvcHRpb24ubGFiZWx9XG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvUG9wb3ZlckNvbnRlbnQ+XG4gICAgICA8L1BvcG92ZXI+XG4gICAgICA8aW5wdXQgcmVmPXtmaWxlSW5wdXRSZWZ9IHR5cGU9XCJmaWxlXCIgY2xhc3NOYW1lPVwiaGlkZGVuXCIgb25DaGFuZ2U9e2hhbmRsZUZpbGVDaGFuZ2V9IC8+XG4gICAgPC8+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJGaWxlVXBsb2FkIiwib25GaWxlU2VsZWN0IiwiZmlsZUlucHV0UmVmIiwidXNlUmVmIiwidXBsb2FkVHlwZSIsInNldFVwbG9hZFR5cGUiLCJ1c2VTdGF0ZSIsImhhbmRsZUZpbGVTZWxlY3QiLCJ0eXBlIiwiYWNjZXB0IiwiY3VycmVudCIsImNsaWNrIiwiaGFuZGxlRmlsZUNoYW5nZSIsImUiLCJmaWxlIiwidGFyZ2V0IiwiZmlsZXMiLCJ1cGxvYWRPcHRpb25zIiwibGFiZWwiLCJpY29uIiwiSW1hZ2VJY29uIiwiVmlkZW8iLCJNdXNpYyIsIkZpbGVUZXh0IiwiQ2FtZXJhIiwiUG9wb3ZlciIsIlBvcG92ZXJUcmlnZ2VyIiwiYXNDaGlsZCIsIkJ1dHRvbiIsInZhcmlhbnQiLCJzaXplIiwiUGFwZXJjbGlwIiwiY2xhc3NOYW1lIiwiUG9wb3ZlckNvbnRlbnQiLCJhbGlnbiIsImRpdiIsIm1hcCIsIm9wdGlvbiIsIm9uQ2xpY2siLCJpbnB1dCIsInJlZiIsIm9uQ2hhbmdlIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7K0JBYWdCQTs7O2VBQUFBOzs7O3VCQVRpQjt3QkFDVjt5QkFDaUM7NkJBQ2E7QUFNOUQsU0FBU0EsV0FBVyxFQUFFQyxZQUFZLEVBQW1CO0lBQzFELE1BQU1DLGVBQWVDLElBQUFBLGFBQU0sRUFBbUI7SUFDOUMsTUFBTSxDQUFDQyxZQUFZQyxjQUFjLEdBQUdDLElBQUFBLGVBQVEsRUFBUztJQUVyRCxNQUFNQyxtQkFBbUIsQ0FBQ0MsTUFBY0M7UUFDdENKLGNBQWNHO1FBQ2QsSUFBSU4sYUFBYVEsT0FBTyxFQUFFO1lBQ3hCUixhQUFhUSxPQUFPLENBQUNELE1BQU0sR0FBR0E7WUFDOUJQLGFBQWFRLE9BQU8sQ0FBQ0MsS0FBSztRQUM1QjtJQUNGO0lBRUEsTUFBTUMsbUJBQW1CLENBQUNDO1FBQ3hCLE1BQU1DLE9BQU9ELEVBQUVFLE1BQU0sQ0FBQ0MsS0FBSyxFQUFFLENBQUMsRUFBRTtRQUNoQyxJQUFJRixNQUFNO1lBQ1JiLGFBQWFhLE1BQU1WO1FBQ3JCO0lBQ0Y7SUFFQSxNQUFNYSxnQkFBZ0I7UUFDcEI7WUFBRVQsTUFBTTtZQUFTVSxPQUFPO1lBQVNDLE1BQU1DLHNCQUFTO1lBQUVYLFFBQVE7UUFBVTtRQUNwRTtZQUFFRCxNQUFNO1lBQVNVLE9BQU87WUFBU0MsTUFBTUUsa0JBQUs7WUFBRVosUUFBUTtRQUFVO1FBQ2hFO1lBQUVELE1BQU07WUFBU1UsT0FBTztZQUFTQyxNQUFNRyxrQkFBSztZQUFFYixRQUFRO1FBQVU7UUFDaEU7WUFBRUQsTUFBTTtZQUFZVSxPQUFPO1lBQVlDLE1BQU1JLHFCQUFRO1lBQUVkLFFBQVE7UUFBdUI7UUFDdEY7WUFBRUQsTUFBTTtZQUFVVSxPQUFPO1lBQVVDLE1BQU1LLG1CQUFNO1lBQUVmLFFBQVE7UUFBVTtLQUNwRTtJQUVELHFCQUNFOzswQkFDRSxzQkFBQ2dCLGdCQUFPOztrQ0FDTixxQkFBQ0MsdUJBQWM7d0JBQUNDLE9BQU87a0NBQ3JCLGNBQUEscUJBQUNDLGNBQU07NEJBQUNDLFNBQVE7NEJBQVFDLE1BQUs7c0NBQzNCLGNBQUEscUJBQUNDLHNCQUFTO2dDQUFDQyxXQUFVOzs7O2tDQUd6QixxQkFBQ0MsdUJBQWM7d0JBQUNELFdBQVU7d0JBQVdFLE9BQU07a0NBQ3pDLGNBQUEscUJBQUNDOzRCQUFJSCxXQUFVO3NDQUNaZixjQUFjbUIsR0FBRyxDQUFDLENBQUNDLHVCQUNsQixzQkFBQ1QsY0FBTTtvQ0FFTEMsU0FBUTtvQ0FDUkcsV0FBVTtvQ0FDVk0sU0FBUyxJQUFNL0IsaUJBQWlCOEIsT0FBTzdCLElBQUksRUFBRTZCLE9BQU81QixNQUFNOztzREFFMUQscUJBQUM0QixPQUFPbEIsSUFBSTs0Q0FBQ2EsV0FBVTs7d0NBQ3RCSyxPQUFPbkIsS0FBSzs7bUNBTlJtQixPQUFPN0IsSUFBSTs7Ozs7MEJBWTFCLHFCQUFDK0I7Z0JBQU1DLEtBQUt0QztnQkFBY00sTUFBSztnQkFBT3dCLFdBQVU7Z0JBQVNTLFVBQVU3Qjs7OztBQUd6RSJ9