{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/components/chat/message-reactions.tsx"],"sourcesContent":["\"use client\"\nimport { Button } from \"@/components/ui/button\"\nimport { useHaptics } from \"@/hooks/use-haptics\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\n\ninterface Reaction {\n  emoji: string\n  count: number\n  users: string[]\n  hasReacted: boolean\n}\n\ninterface MessageReactionsProps {\n  messageId: string\n  reactions: Reaction[]\n  onAddReaction: (messageId: string, emoji: string) => void\n  onRemoveReaction: (messageId: string, emoji: string) => void\n  showPicker: boolean\n  onTogglePicker: () => void\n}\n\nconst REACTION_EMOJIS = [\n  { emoji: \"👍\", label: \"Like\" },\n  { emoji: \"❤️\", label: \"Love\" },\n  { emoji: \"😂\", label: \"Laugh\" },\n  { emoji: \"😮\", label: \"Wow\" },\n  { emoji: \"😢\", label: \"Sad\" },\n  { emoji: \"😡\", label: \"Angry\" },\n]\n\nexport function MessageReactions({\n  messageId,\n  reactions,\n  onAddReaction,\n  onRemoveReaction,\n  showPicker,\n  onTogglePicker,\n}: MessageReactionsProps) {\n  const { triggerHaptic } = useHaptics()\n  const isMobile = useIsMobile()\n\n  const handleReactionClick = (emoji: string) => {\n    const reaction = reactions.find((r) => r.emoji === emoji)\n    if (reaction?.hasReacted) {\n      onRemoveReaction(messageId, emoji)\n      triggerHaptic(\"light\")\n    } else {\n      onAddReaction(messageId, emoji)\n      triggerHaptic(\"medium\")\n    }\n    onTogglePicker()\n  }\n\n  const handleReactionBubbleClick = (emoji: string, hasReacted: boolean) => {\n    if (hasReacted) {\n      onRemoveReaction(messageId, emoji)\n      triggerHaptic(\"light\")\n    } else {\n      onAddReaction(messageId, emoji)\n      triggerHaptic(\"medium\")\n    }\n  }\n\n  return (\n    <div className=\"relative\">\n      {/* Reaction Picker */}\n      {showPicker && (\n        <div className={`absolute ${isMobile ? \"bottom-full mb-2\" : \"top-full mt-2\"} left-0 z-50`}>\n          <div className=\"bg-white dark:bg-gray-800 rounded-full shadow-lg border border-gray-200 dark:border-gray-700 p-2 flex gap-1\">\n            {REACTION_EMOJIS.map(({ emoji, label }) => (\n              <Button\n                key={emoji}\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"h-10 w-10 p-0 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 transition-all duration-200 hover:scale-110\"\n                onClick={() => handleReactionClick(emoji)}\n                title={label}\n              >\n                <span className=\"text-lg\">{emoji}</span>\n              </Button>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Reaction Bubbles */}\n      {reactions.length > 0 && (\n        <div className=\"flex flex-wrap gap-1 mt-1\">\n          {reactions.map(({ emoji, count, hasReacted }) => (\n            <Button\n              key={emoji}\n              variant=\"ghost\"\n              size=\"sm\"\n              className={`h-6 px-2 py-0 rounded-full text-xs transition-all duration-200 hover:scale-105 ${\n                hasReacted\n                  ? \"bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 border border-blue-200 dark:border-blue-800\"\n                  : \"bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600\"\n              }`}\n              onClick={() => handleReactionBubbleClick(emoji, hasReacted)}\n            >\n              <span className=\"mr-1\">{emoji}</span>\n              <span>{count}</span>\n            </Button>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":["MessageReactions","REACTION_EMOJIS","emoji","label","messageId","reactions","onAddReaction","onRemoveReaction","showPicker","onTogglePicker","triggerHaptic","useHaptics","isMobile","useIsMobile","handleReactionClick","reaction","find","r","hasReacted","handleReactionBubbleClick","div","className","map","Button","variant","size","onClick","title","span","length","count"],"mappings":"AAAA;;;;;+BA8BgBA;;;eAAAA;;;;wBA7BO;4BACI;2BACC;AAkB5B,MAAMC,kBAAkB;IACtB;QAAEC,OAAO;QAAMC,OAAO;IAAO;IAC7B;QAAED,OAAO;QAAMC,OAAO;IAAO;IAC7B;QAAED,OAAO;QAAMC,OAAO;IAAQ;IAC9B;QAAED,OAAO;QAAMC,OAAO;IAAM;IAC5B;QAAED,OAAO;QAAMC,OAAO;IAAM;IAC5B;QAAED,OAAO;QAAMC,OAAO;IAAQ;CAC/B;AAEM,SAASH,iBAAiB,EAC/BI,SAAS,EACTC,SAAS,EACTC,aAAa,EACbC,gBAAgB,EAChBC,UAAU,EACVC,cAAc,EACQ;IACtB,MAAM,EAAEC,aAAa,EAAE,GAAGC,IAAAA,sBAAU;IACpC,MAAMC,WAAWC,IAAAA,sBAAW;IAE5B,MAAMC,sBAAsB,CAACZ;QAC3B,MAAMa,WAAWV,UAAUW,IAAI,CAAC,CAACC,IAAMA,EAAEf,KAAK,KAAKA;QACnD,IAAIa,UAAUG,YAAY;YACxBX,iBAAiBH,WAAWF;YAC5BQ,cAAc;QAChB,OAAO;YACLJ,cAAcF,WAAWF;YACzBQ,cAAc;QAChB;QACAD;IACF;IAEA,MAAMU,4BAA4B,CAACjB,OAAegB;QAChD,IAAIA,YAAY;YACdX,iBAAiBH,WAAWF;YAC5BQ,cAAc;QAChB,OAAO;YACLJ,cAAcF,WAAWF;YACzBQ,cAAc;QAChB;IACF;IAEA,qBACE,sBAACU;QAAIC,WAAU;;YAEZb,4BACC,qBAACY;gBAAIC,WAAW,CAAC,SAAS,EAAET,WAAW,qBAAqB,gBAAgB,YAAY,CAAC;0BACvF,cAAA,qBAACQ;oBAAIC,WAAU;8BACZpB,gBAAgBqB,GAAG,CAAC,CAAC,EAAEpB,KAAK,EAAEC,KAAK,EAAE,iBACpC,qBAACoB,cAAM;4BAELC,SAAQ;4BACRC,MAAK;4BACLJ,WAAU;4BACVK,SAAS,IAAMZ,oBAAoBZ;4BACnCyB,OAAOxB;sCAEP,cAAA,qBAACyB;gCAAKP,WAAU;0CAAWnB;;2BAPtBA;;;YAedG,UAAUwB,MAAM,GAAG,mBAClB,qBAACT;gBAAIC,WAAU;0BACZhB,UAAUiB,GAAG,CAAC,CAAC,EAAEpB,KAAK,EAAE4B,KAAK,EAAEZ,UAAU,EAAE,iBAC1C,sBAACK,cAAM;wBAELC,SAAQ;wBACRC,MAAK;wBACLJ,WAAW,CAAC,+EAA+E,EACzFH,aACI,iHACA,yGACL,CAAC;wBACFQ,SAAS,IAAMP,0BAA0BjB,OAAOgB;;0CAEhD,qBAACU;gCAAKP,WAAU;0CAAQnB;;0CACxB,qBAAC0B;0CAAME;;;uBAXF5B;;;;AAkBnB"}