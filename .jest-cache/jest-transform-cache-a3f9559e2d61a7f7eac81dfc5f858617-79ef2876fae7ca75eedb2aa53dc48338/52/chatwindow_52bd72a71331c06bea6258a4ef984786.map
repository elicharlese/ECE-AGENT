{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/components/chat/chat-window.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useRef, useEffect, useMemo, useCallback } from \"react\"\nimport { MessageBubble } from \"./message-bubble\"\nimport { MobileMessageInput } from \"./mobile-message-input\"\nimport { PullToRefresh } from \"./pull-to-refresh\"\nimport dynamic from \"next/dynamic\"\nconst AppLauncher = dynamic(() => import(\"../apps/app-launcher\").then(m => m.AppLauncher), {\n  ssr: false,\n  loading: () => <div className=\"text-xs text-gray-400\">Loading…</div>,\n})\nconst AppMessage = dynamic(() => import(\"../apps/app-message\").then(m => m.AppMessage), {\n  ssr: false,\n})\nconst CalculatorApp = dynamic(() => import(\"../apps/mini-apps/calculator-app\").then(m => m.CalculatorApp), {\n  ssr: false,\n})\nconst TicTacToeApp = dynamic(() => import(\"../apps/mini-apps/tic-tac-toe-app\").then(m => m.TicTacToeApp), {\n  ssr: false,\n})\nconst EventPlannerApp = dynamic(() => import(\"../apps/mini-apps/event-planner-app\").then(m => m.EventPlannerApp), {\n  ssr: false,\n})\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { useHaptics } from \"@/hooks/use-haptics\"\nconst AgentIntegration = dynamic(() => import(\"../agents/agent-integration\").then(m => m.AgentIntegration), {\n  ssr: false,\n})\nconst PhoneCallUI = dynamic(() => import(\"../calls/phone-call-ui\").then(m => m.PhoneCallUI), {\n  ssr: false,\n})\nconst VideoCallUI = dynamic(() => import(\"../calls/video-call-ui\").then(m => m.VideoCallUI), {\n  ssr: false,\n})\nimport { useWebSocket } from \"@/hooks/use-websocket\"\nimport { TypingIndicator } from \"./typing-indicator\"\nimport { useConversations } from \"@/hooks/use-conversations\"\nimport { EnhancedChatHeader } from \"./enhanced-chat-header\"\nimport { InviteUsersDialog } from \"./invite-users-dialog\"\nimport { supabase } from \"@/lib/supabase/client\"\nimport { getProfileByIdentifier, getProfileByUsername } from \"@/services/profile-service\"\nimport { ChevronDown } from \"lucide-react\"\nimport { format, isToday, isYesterday } from \"date-fns\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport { messageService } from \"@/services/message-service\"\nimport { toast } from \"@/components/ui/use-toast\"\nimport { DesktopMessageInput } from \"./DesktopMessageInput\"\nimport { Headset3DView } from \"./Headset3DView\"\nimport { isFeatureEnabled, FEATURES } from '@/lib/feature-flags'\nimport { trackEvent } from '@/lib/analytics'\nimport { WorkspaceMode } from '../workspace/workspace-mode'\nimport { WorkspaceToolbar } from '../workspace/workspace-toolbar'\nimport { useWorkspace } from '@/hooks/use-workspace'\n\ninterface Message {\n  id: string\n  content: string\n  timestamp: Date\n  senderId: string\n  senderName: string\n  type: \"text\" | \"image\" | \"video\" | \"audio\" | \"document\" | \"system\" | \"gif\" | \"app\"\n  isOwn: boolean\n  mediaUrl?: string\n  fileName?: string\n  fileSize?: string\n  isPinned?: boolean\n  isLiked?: boolean\n  likeCount?: number\n  gifData?: {\n    id: string\n    title: string\n    url: string\n    preview_url: string\n    width: number\n    height: number\n  }\n  appData?: {\n    appId: string\n    appName: string\n  }\n}\n\nconst mockMessages: Message[] = [\n  {\n    id: \"1\",\n    content: \"Hey! How was your day?\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 30),\n    senderId: \"2\",\n    senderName: \"Sarah Wilson\",\n    type: \"text\",\n    isOwn: false,\n  },\n  {\n    id: \"2\",\n    content: \"It was great! Just finished a big project at work. How about you?\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 25),\n    senderId: \"1\",\n    senderName: \"You\",\n    type: \"text\",\n    isOwn: true,\n  },\n  {\n    id: \"3\",\n    content:\n      \"📅 Event: Team Meeting\\n📍 Conference Room A\\n🕐 2024-01-15 at 14:00\\n👥 Attendees: Sarah, John, Mike\\n📝 Quarterly review and planning\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 20),\n    senderId: \"2\",\n    senderName: \"Sarah Wilson\",\n    type: \"app\",\n    isOwn: false,\n    appData: {\n      appId: \"event-planner\",\n      appName: \"Event Planner\",\n    },\n  },\n  {\n    id: \"4\",\n    content: \"🎮 Tic Tac Toe: Player X wins!\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 18),\n    senderId: \"1\",\n    senderName: \"You\",\n    type: \"app\",\n    isOwn: true,\n    appData: {\n      appId: \"tic-tac-toe\",\n      appName: \"Tic Tac Toe\",\n    },\n  },\n  {\n    id: \"5\",\n    content: \"Thanks! Want to celebrate over dinner this weekend?\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 15),\n    senderId: \"1\",\n    senderName: \"You\",\n    type: \"text\",\n    isOwn: true,\n    isLiked: true,\n    likeCount: 2,\n  },\n]\n\ninterface ChatWindowProps {\n  chatId: string\n  onToggleSidebar: () => void\n  sidebarCollapsed: boolean\n}\n\nexport function ChatWindow({ chatId, onToggleSidebar, sidebarCollapsed }: ChatWindowProps) {\n  const [messages, setMessages] = useState<Message[]>([])\n  const [newMessage, setNewMessage] = useState(\"\")\n  const [activeApp, setActiveApp] = useState<string | null>(null)\n  const [activeAppName, setActiveAppName] = useState<string>(\"\")\n  const [showAgentIntegration, setShowAgentIntegration] = useState(false)\n  const [showPhoneCall, setShowPhoneCall] = useState(false)\n  const [showVideoCall, setShowVideoCall] = useState(false)\n  const [showInviteDialog, setShowInviteDialog] = useState(false)\n  const [participantsCount, setParticipantsCount] = useState<number>(1)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n  const contentRef = useRef<HTMLDivElement>(null)\n  const [isAtBottom, setIsAtBottom] = useState(true)\n  const [showJump, setShowJump] = useState(false)\n  const [lastReadAt, setLastReadAt] = useState<Date | null>(null)\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const [isHeadsetView, setIsHeadsetView] = useState<boolean>(false)\n  const [workspaceMode, setWorkspaceMode] = useState<'chat' | 'workspace'>('chat')\n  const isMobile = useIsMobile()\n  const { triggerHaptic } = useHaptics()\n  const { isConnected, messages: wsMessages, joinConversation, sendChatMessage, sendTyping, sendEditMessage, typingUsers: wsTypingUsers } = useWebSocket()\n  const { conversations, inviteParticipants } = useConversations()\n  const [workspaceState, workspaceActions] = useWorkspace(chatId)\n\n  // Restore headset view per chat from localStorage (desktop-only, feature gated)\n  useEffect(() => {\n    const enabled = isFeatureEnabled(FEATURES.IMMERSIVE_CHAT)\n    if (!enabled || isMobile) {\n      setIsHeadsetView(false)\n      return\n    }\n    try {\n      const raw = localStorage.getItem(`chat_immersive_3d_${chatId}`)\n      setIsHeadsetView(raw === '1')\n    } catch {}\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chatId, isMobile])\n\n  const handleToggleHeadsetView = useCallback(() => {\n    const enabled = isFeatureEnabled(FEATURES.IMMERSIVE_CHAT)\n    if (!enabled || isMobile) return\n    setIsHeadsetView((prev: boolean) => {\n      const next = !prev\n      try { localStorage.setItem(`chat_immersive_3d_${chatId}`, next ? '1' : '0') } catch {}\n      trackEvent({ name: 'immersive_chat_toggle', properties: { chatId, enabled: next } })\n      return next\n    })\n  }, [chatId, isMobile])\n\n  const shouldShowHeadset3D = useMemo(\n    () => isHeadsetView && !isMobile && isFeatureEnabled(FEATURES.IMMERSIVE_CHAT),\n    [isHeadsetView, isMobile]\n  )\n\n  const scrollToBottom = useCallback(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n    setIsAtBottom(true)\n    // Mark as read when user jumps to latest\n    const lastTs = messages[messages.length - 1]?.timestamp\n    if (lastTs) {\n      setLastReadAt(lastTs)\n      try {\n        localStorage.setItem(`chat_last_read_${chatId}`, String(lastTs.getTime()))\n      } catch {}\n    }\n  }, [messages, chatId])\n\n  // Persist and restore last read timestamp per chat\n  useEffect(() => {\n    try {\n      const raw = localStorage.getItem(`chat_last_read_${chatId}`)\n      if (raw) {\n        const d = new Date(Number(raw))\n        if (!Number.isNaN(d.valueOf())) setLastReadAt(d)\n      } else if (messages.length) {\n        // Default to latest message to avoid showing old messages as new on first open\n        const lastTs = messages[messages.length - 1].timestamp\n        setLastReadAt(lastTs)\n        localStorage.setItem(`chat_last_read_${chatId}`, String(lastTs.getTime()))\n      }\n    } catch {}\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chatId])\n\n  // Auto-scroll when new messages arrive only if user is near bottom or message is own\n  useEffect(() => {\n    if (messages.length === 0) return\n    const latest = messages[messages.length - 1]\n    if (isAtBottom || latest.isOwn) {\n      scrollToBottom()\n    } else {\n      setShowJump(true)\n    }\n  }, [messages, isAtBottom, scrollToBottom])\n\n  useEffect(() => {\n    // Join the conversation when the component mounts\n    if (isConnected) {\n      joinConversation(chatId)\n    }\n  }, [isConnected, chatId])\n\n  // Load initial messages from backend (Supabase)\n  useEffect(() => {\n    let cancelled = false\n    const run = async () => {\n      setIsLoading(true)\n      try {\n        const { data: auth } = await supabase.auth.getUser()\n        const me = auth?.user?.id ?? null\n        const msgs = await messageService.getMessages(chatId)\n        const mapped: Message[] = msgs.map((m) => ({\n          id: m.id,\n          content: m.content,\n          timestamp: new Date(m.created_at),\n          senderId: m.user_id,\n          senderName: m.role === 'assistant' ? 'AI Assistant' : (m.user_id === me ? 'You' : 'Other'),\n          type: (m.type as Message['type']) || 'text',\n          isOwn: m.user_id === me,\n        }))\n        if (!cancelled) setMessages(mapped)\n      } catch (e) {\n        console.warn('Failed to load messages', e)\n      } finally {\n        if (!cancelled) setIsLoading(false)\n      }\n    }\n    run()\n    return () => { cancelled = true }\n  }, [chatId])\n\n  // Fetch participant count to determine chat type (direct vs group)\n  useEffect(() => {\n    let cancelled = false\n    const run = async () => {\n      try {\n        const { count } = await supabase\n          .from('conversation_participants')\n          .select('user_id', { count: 'exact', head: true })\n          .eq('conversation_id', chatId)\n        if (!cancelled) setParticipantsCount(typeof count === 'number' ? count : 1)\n      } catch (e) {\n        if (!cancelled) setParticipantsCount(1)\n        console.warn('Failed to load participant count', e)\n      }\n    }\n    run()\n    return () => { cancelled = true }\n  }, [chatId])\n\n  useEffect(() => {\n    // Map the latest useWebSocket message (shape: { id, text, sender, senderName?, timestamp, conversationId, type? })\n    if (wsMessages.length === 0) return\n    const latest: any = wsMessages[wsMessages.length - 1]\n    if (latest && typeof latest === 'object' && 'text' in latest) {\n      const mapped: Message = {\n        id: latest.id || Date.now().toString(),\n        content: latest.text || '',\n        timestamp: latest.timestamp instanceof Date ? latest.timestamp : new Date(latest.timestamp || Date.now()),\n        senderId: latest.sender === 'user' ? '1' : latest.sender === 'ai' ? 'ai-assistant' : 'other',\n        senderName: latest.senderName || (latest.sender === 'user' ? 'You' : latest.sender === 'ai' ? 'AI Assistant' : 'Other'),\n        type: latest.type || 'text',\n        isOwn: latest.sender === 'user',\n        mediaUrl: latest.mediaUrl,\n        fileName: latest.fileName,\n        fileSize: latest.fileSize,\n        isPinned: latest.isPinned,\n        isLiked: latest.isLiked,\n        likeCount: latest.likeCount,\n        appData: latest.appData ? { appId: latest.appData.appId, appName: latest.appData.appName } : undefined,\n      }\n      setMessages(prev => (prev.some(m => m.id === mapped.id) ? prev : [...prev, mapped]))\n    }\n  }, [wsMessages])\n\n  // React to edit events sent over WebSocket in mock/real mode\n  useEffect(() => {\n    if (wsMessages.length === 0) return\n    const latest: any = wsMessages[wsMessages.length - 1]\n    if (latest && latest.type === 'message_edited' && latest.id) {\n      const newText = latest.text ?? latest.content\n      if (typeof newText === 'string') {\n        setMessages(prev => prev.map(m => (m.id === latest.id ? { ...m, content: newText } : m)))\n      }\n    }\n  }, [wsMessages])\n\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return\n\n    // Send message via WebSocket\n    // useWebSocket expects (text, conversationId)\n    sendChatMessage(newMessage, chatId)\n    setNewMessage(\"\")\n    // Update last read immediately on send\n    const now = new Date()\n    setLastReadAt(now)\n    try {\n      localStorage.setItem(`chat_last_read_${chatId}`, String(now.getTime()))\n    } catch {}\n  }\n\n  const handleEmojiSelect = (emoji: string) => {\n    setNewMessage((prev) => prev + emoji)\n  }\n\n  const handleFileSelect = (file: File, type: string) => {\n    const fileUrl = URL.createObjectURL(file)\n    const message: Message = {\n      id: Date.now().toString(),\n      content: `Shared a ${type}`,\n      timestamp: new Date(),\n      senderId: \"1\",\n      senderName: \"You\",\n      type: type as Message[\"type\"],\n      isOwn: true,\n      mediaUrl: fileUrl,\n      fileName: file.name,\n      fileSize: `${(file.size / 1024 / 1024).toFixed(1)} MB`,\n    }\n\n    setMessages((prev) => [...prev, message])\n  }\n\n  const handleGifSelect = (gif: {\n    id: string\n    title: string\n    url: string\n    preview_url: string\n    width: number\n    height: number\n  }) => {\n    const message: Message = {\n      id: Date.now().toString(),\n      content: gif.title,\n      timestamp: new Date(),\n      senderId: \"1\",\n      senderName: \"You\",\n      type: \"gif\",\n      isOwn: true,\n      mediaUrl: gif.url,\n      gifData: {\n        id: gif.id,\n        title: gif.title,\n        url: gif.url,\n        preview_url: gif.preview_url,\n        width: gif.width,\n        height: gif.height,\n      },\n    }\n    setMessages((prev) => [...prev, message])\n  }\n\n  const handleRefresh = async () => {\n    await new Promise((resolve) => setTimeout(resolve, 1000))\n    triggerHaptic(\"success\")\n    console.log(\"Refreshed messages\")\n  }\n\n  const handleLaunchApp = (appId: string, appName: string) => {\n    setActiveApp(appId)\n    setActiveAppName(appName)\n  }\n\n  const handleAppShare = (content: string, appId: string, appName: string) => {\n    const message: Message = {\n      id: Date.now().toString(),\n      content,\n      timestamp: new Date(),\n      senderId: \"1\",\n      senderName: \"You\",\n      type: \"app\",\n      isOwn: true,\n      appData: {\n        appId,\n        appName,\n      },\n    }\n\n    setMessages((prev) => [...prev, message])\n    setActiveApp(null)\n    setActiveAppName(\"\")\n  }\n\n  const handleOpenApp = (appId: string) => {\n    // Find app name from the message or use default\n    const appNames: Record<string, string> = {\n      calculator: \"Calculator\",\n      \"tic-tac-toe\": \"Tic Tac Toe\",\n      \"event-planner\": \"Event Planner\",\n    }\n    handleLaunchApp(appId, appNames[appId] || \"App\")\n  }\n\n  const renderActiveApp = () => {\n    switch (activeApp) {\n      case \"calculator\":\n        return <CalculatorApp onShare={(result) => handleAppShare(result, \"calculator\", \"Calculator\")} />\n      case \"tic-tac-toe\":\n        return <TicTacToeApp onShare={(result) => handleAppShare(result, \"tic-tac-toe\", \"Tic Tac Toe\")} />\n      case \"event-planner\":\n        return <EventPlannerApp onShare={(event) => handleAppShare(event, \"event-planner\", \"Event Planner\")} />\n      default:\n        return null\n    }\n  }\n\n  // Optimistic update + persist + broadcast for inline edit\n  const handleUpdateMessage = async (id: string, content: string) => {\n    let previousContent = ''\n    setMessages((prev) => {\n      previousContent = prev.find((m) => m.id === id)?.content || ''\n      return prev.map((m) => (m.id === id ? { ...m, content } : m))\n    })\n    try {\n      await messageService.updateMessage(id, content)\n      // Broadcast edit event so other clients can sync\n      sendEditMessage(id, content, chatId)\n      toast({ title: 'Message updated', description: 'Your edit has been saved.' })\n    } catch (e: any) {\n      // Revert on error\n      setMessages((prev) => prev.map((m) => (m.id === id ? { ...m, content: previousContent } : m)))\n      toast({ title: 'Failed to update message', description: e?.message || 'Please try again.', variant: 'destructive' as any })\n    }\n  }\n\n  const handleAgentMessage = (agentId: string, message: string) => {\n    const agentMessage: Message = {\n      id: Date.now().toString(),\n      content: message,\n      timestamp: new Date(),\n      senderId: agentId,\n      senderName: `Agent ${agentId}`,\n      type: \"text\",\n      isOwn: false,\n    }\n    setMessages((prev) => [...prev, agentMessage])\n  }\n\n  const handleAgentAppLaunch = (appId: string, agentId: string, context?: any) => {\n    const appNames: Record<string, string> = {\n      calculator: \"Calculator\",\n      \"tic-tac-toe\": \"Tic Tac Toe\",\n      \"event-planner\": \"Event Planner\",\n    }\n\n    // Launch app with agent context\n    setActiveApp(appId)\n    setActiveAppName(appNames[appId] || \"App\")\n\n    // Send agent message about app launch\n    handleAgentMessage(agentId, `I've launched ${appNames[appId]} for you based on our conversation.`)\n  }\n\n  const handleWorkflowTrigger = (workflowId: string, agentId: string) => {\n    console.log(`Agent ${agentId} triggered workflow ${workflowId}`)\n    handleAgentMessage(agentId, `I'm running a workflow to help with your request...`)\n  }\n\n  const handlePhoneCall = () => {\n    setShowPhoneCall(true)\n    triggerHaptic(\"medium\")\n  }\n\n  const handleVideoCall = () => {\n    setShowVideoCall(true)\n    triggerHaptic(\"medium\")\n  }\n\n  const handlePopout = () => {\n    try {\n      const origin = typeof window !== 'undefined' ? window.location.origin : ''\n      const url = new URL('/messages', origin || 'http://localhost')\n      url.searchParams.set('c', chatId)\n      url.searchParams.set('popout', '1')\n      window.open(url.toString(), '_blank', 'noopener,noreferrer,width=520,height=720')\n    } catch (e) {\n      console.error('Failed to open popout window', e)\n    }\n  }\n\n  const openAppLauncherDrawer = () => {\n    try {\n      const el = document.querySelector('[aria-label=\"Open apps drawer\"]') as HTMLElement | null\n      el?.click()\n    } catch (e) {\n      // no-op\n    }\n  }\n\n  type InviteUserInput = { id?: string; identifier: string; type: 'email' | 'username' | 'wallet'; name?: string; avatar?: string }\n  const handleInviteUsers = async (users: InviteUserInput[]) => {\n    // Resolve identifiers to user IDs\n    const resolved = await Promise.all(users.map(async (u) => {\n      if (u.id) return u.id\n      if (u.type === 'username') {\n        const uname = u.identifier.startsWith('@') ? u.identifier.slice(1) : u.identifier\n        const prof = await getProfileByUsername(uname)\n        return prof?.user_id\n      }\n      if (u.type === 'email') {\n        const prof = await getProfileByIdentifier(u.identifier)\n        return prof?.user_id\n      }\n      // wallet: attempt lookup by solana_address\n      try {\n        // Debug logging to verify this branch executes in tests\n        // eslint-disable-next-line no-console\n        console.info('[invite] wallet lookup start', u.identifier)\n        const { data, error } = await supabase\n          .from('profiles')\n          .select('user_id')\n          .eq('solana_address', u.identifier)\n          .limit(1)\n        // eslint-disable-next-line no-console\n        console.info('[invite] wallet lookup result', data)\n        // eslint-disable-next-line no-console\n        if (error) console.info('[invite] wallet lookup error', error)\n        const id = Array.isArray(data) ? (data[0]?.user_id ?? null) : (data as any)?.user_id ?? null\n        return id\n      } catch {\n        // eslint-disable-next-line no-console\n        console.error('[invite] wallet lookup error')\n        return null\n      }\n    }))\n    const userIds = Array.from(new Set(resolved.filter((id): id is string => !!id)))\n    if (userIds.length === 0) {\n      throw new Error('No matching users found for invitations')\n    }\n    await inviteParticipants(chatId, userIds)\n  }\n\n  // Scroll observer to toggle Jump button\n  const handleScroll: React.UIEventHandler<HTMLDivElement> = (e) => {\n    const el = e.currentTarget\n    const distanceFromBottom = el.scrollHeight - el.scrollTop - el.clientHeight\n    const atBottom = distanceFromBottom < 40\n    setIsAtBottom(atBottom)\n    setShowJump(!atBottom && messages.length > 0)\n    if (atBottom && messages.length > 0) {\n      const lastTs = messages[messages.length - 1].timestamp\n      if (!lastReadAt || lastTs > lastReadAt) {\n        setLastReadAt(lastTs)\n        try {\n          localStorage.setItem(`chat_last_read_${chatId}`, String(lastTs.getTime()))\n        } catch {}\n      }\n    }\n  }\n\n  // Day divider helpers\n  const dayLabel = (d: Date) => (isToday(d) ? \"Today\" : isYesterday(d) ? \"Yesterday\" : format(d, \"EEEE, MMM d\"))\n\n  const firstUnreadIndex = useMemo(() => {\n    if (!lastReadAt) return -1\n    return messages.findIndex((m) => m.timestamp > lastReadAt)\n  }, [messages, lastReadAt])\n\n  const DateDivider: React.FC<{ label: string }> = ({ label }) => (\n    <div className=\"sticky top-0 z-10 flex items-center justify-center py-1\">\n      <span className=\"text-xs text-gray-600 dark:text-gray-300 bg-white/70 dark:bg-gray-900/70 backdrop-blur px-3 py-0.5 rounded-full border border-gray-200 dark:border-gray-700\">\n        {label}\n      </span>\n    </div>\n  )\n\n  const UnreadDivider: React.FC = () => (\n    <div className=\"sticky top-0 z-20 flex items-center gap-2 my-2\">\n      <div className=\"flex-1 h-px bg-red-300/60\" />\n      <span className=\"text-[11px] tracking-wide uppercase text-red-600 bg-red-50 dark:bg-red-900/20 dark:text-red-300 px-2 py-0.5 rounded-full border border-red-200 dark:border-red-800\">\n        New\n      </span>\n      <div className=\"flex-1 h-px bg-red-300/60\" />\n    </div>\n  )\n\n  // Derive chat info from conversations state using chatId\n  const conversation = conversations.find(c => c.id === chatId)\n  const isGroup = participantsCount > 2\n  const chatInfo = {\n    id: chatId,\n    name: conversation?.title || 'New Chat',\n    email: '',\n    phone: undefined as string | undefined,\n    bio: conversation?.title ? `Conversation • ${conversation.title}` : 'New conversation',\n    status: 'online' as const,\n    customStatus: undefined as string | undefined,\n    avatar: undefined as string | undefined,\n    type: isGroup ? ('group' as const) : ('direct' as const),\n    participants: participantsCount,\n    isAgent: Boolean(conversation?.agent_id),\n  }\n\n  const pinnedForHeader = messages\n    .filter((m) => m.isPinned)\n    .map((m) => ({ id: m.id, content: m.content, sender: m.senderName, timestamp: m.timestamp }))\n\n  const headsetItems = useMemo(() => (\n    messages.map((m) => ({ id: m.id, content: m.content, timestamp: m.timestamp, isOwn: m.isOwn }))\n  ), [messages])\n\n  return (\n    <div className=\"flex flex-col h-full bg-white dark:bg-gray-900\">\n      {/* Workspace Toolbar */}\n      <WorkspaceToolbar\n        mode={workspaceMode}\n        layout={workspaceState.layout}\n        activeTab={workspaceState.activeTab}\n        activeParticipants={participantsCount}\n        isConnected={isConnected}\n        onModeChange={(mode) => {\n          setWorkspaceMode(mode)\n          workspaceActions.setMode(mode)\n        }}\n        onLayoutChange={workspaceActions.setLayout}\n        onTabChange={workspaceActions.setActiveTab}\n        onStartVideoCall={() => {\n          setShowVideoCall(true)\n          workspaceActions.startVideoCall()\n        }}\n        onStartPhoneCall={() => {\n          setShowPhoneCall(true)\n          workspaceActions.startPhoneCall()\n        }}\n        onExecuteTool={(toolType) => workspaceActions.executeToolAction(toolType, {})}\n        onGenerateMedia={(type) => workspaceActions.generateMedia(type, `Generate ${type}`)}\n      />\n\n      {/* Workspace Mode or Traditional Chat */}\n      {workspaceMode === 'workspace' ? (\n        <WorkspaceMode\n          chatId={chatId}\n          messages={messages}\n          onSendMessage={handleSendMessage}\n          onEditMessage={handleUpdateMessage}\n          typingUsers={wsTypingUsers}\n          isConnected={isConnected}\n        />\n      ) : (\n        <>\n          {/* Traditional Chat Header */}\n          <EnhancedChatHeader\n            chatInfo={chatInfo as any}\n            pinnedMessages={pinnedForHeader}\n            onPhoneCall={handlePhoneCall}\n            onVideoCall={handleVideoCall}\n            onOpenAgentSettings={() => setShowAgentIntegration(true)}\n            onPopout={handlePopout}\n            onOpenAppLauncher={openAppLauncherDrawer}\n            onInviteUsers={isGroup ? () => setShowInviteDialog(true) : undefined}\n            isMobile={isMobile}\n            onToggleHeadsetView={handleToggleHeadsetView}\n            isHeadsetView={isHeadsetView}\n          />\n\n          {/* Global App Launcher Drawer and draggable tab */}\n          <AppLauncher onLaunchApp={handleLaunchApp} />\n\n          {/* Messages or Headset 3D View */}\n          {shouldShowHeadset3D ? (\n            <div className=\"flex-1 min-h-0 overflow-hidden relative\">\n              <Headset3DView items={headsetItems} />\n            </div>\n          ) : (\n            <div className=\"flex-1 min-h-0 overflow-hidden relative\">\n              <PullToRefresh onRefresh={handleRefresh} ref={contentRef} onScroll={handleScroll}>\n                <div className={`h-full ${isMobile ? \"px-3 py-2\" : \"p-3 md:p-4 lg:p-6\"}`}>\n                  <div className=\"space-y-4\">\n                    {/* Loading skeletons gated by a real loading flag */}\n                    {isLoading ? (\n                      <div className=\"space-y-4 p-2\">\n                        {Array.from({ length: 6 }).map((_, i) => (\n                          <div key={i} className=\"flex gap-2\">\n                            <Skeleton className=\"h-8 w-8 rounded-full\" />\n                            <div className=\"flex-1 space-y-2\">\n                              <Skeleton className=\"h-4 w-2/3\" />\n                              <Skeleton className=\"h-4 w-1/3\" />\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : null}\n                {/* Empty state when not loading */}\n                {!isLoading && messages.length === 0 && (\n                  <div className=\"py-12 text-center text-sm text-gray-500 dark:text-gray-400\">No messages yet. Say hello!</div>\n                )}\n\n                {messages.map((message, idx) => {\n                  const prev = messages[idx - 1]\n                  const showDay = !prev || prev.timestamp.toDateString() !== message.timestamp.toDateString()\n                  const showUnread = firstUnreadIndex === idx\n                  return (\n                    <div key={message.id}>\n                      {showDay && <DateDivider label={dayLabel(message.timestamp)} />}\n                      {showUnread && <UnreadDivider />}\n                      {message.type === \"app\" ? (\n                        <div className={`flex ${message.isOwn ? \"justify-end\" : \"justify-start\"}`}>\n                          <AppMessage\n                            message={{\n                              appId: message.appData?.appId || \"\",\n                              appName: message.appData?.appName || \"\",\n                              content: message.content,\n                              timestamp: message.timestamp,\n                            }}\n                            onOpenApp={handleOpenApp}\n                          />\n                        </div>\n                      ) : (\n                        <MessageBubble message={message} onUpdateMessage={handleUpdateMessage} />\n                      )}\n                    </div>\n                  )\n                })}\n                {/* Typing Indicators */}\n                {Object.entries(wsTypingUsers).map(([userId, userInfo]) => (\n                  <TypingIndicator \n                    key={userId} \n                    userId={userId} \n                    userName={userInfo.name} \n                  />\n                ))}\n                <div ref={messagesEndRef} />\n              </div>\n            </div>\n          </PullToRefresh>\n          {/* Jump to Latest */}\n          {showJump && (\n            <button\n              onClick={scrollToBottom}\n              className=\"absolute bottom-24 right-4 z-30 bg-blue-600 text-white shadow-lg rounded-full px-3 py-2 flex items-center gap-2 hover:bg-blue-700 focus:outline-none\"\n              aria-label=\"Jump to latest\"\n            >\n              <ChevronDown className=\"h-4 w-4\" />\n              <span className=\"text-xs font-medium\">Jump to latest</span>\n            </button>\n          )}\n        </div>\n      )}\n        </>\n      )}\n\n      {/* Message Input (hidden in Headset view) */}\n      {!shouldShowHeadset3D && (\n        <div className=\"flex-shrink-0\">\n          {isMobile ? (\n            <MobileMessageInput\n              value={newMessage}\n              onChange={setNewMessage}\n              onSend={handleSendMessage}\n              onEmojiSelect={handleEmojiSelect}\n              onFileSelect={handleFileSelect}\n              onGifSelect={handleGifSelect}\n              onLaunchApp={handleLaunchApp}\n              onAgentToggle={() => { /* reserved for parity; no-op */ }}\n            />\n          ) : (\n            <DesktopMessageInput\n              value={newMessage}\n              onChange={setNewMessage}\n              onSend={handleSendMessage}\n              onEmojiSelect={handleEmojiSelect}\n              onFileSelect={handleFileSelect}\n              onGifSelect={handleGifSelect}\n              onLaunchApp={handleLaunchApp}\n              onAgentToggle={() => { /* reserved for parity; no-op */ }}\n            />\n          )}\n        </div>\n      )}\n\n      {/* App Modal */}\n      <Dialog open={!!activeApp} onOpenChange={() => setActiveApp(null)}>\n        <DialogContent className=\"max-w-fit\">\n          <DialogHeader>\n            <DialogTitle>{activeAppName}</DialogTitle>\n          </DialogHeader>\n          {renderActiveApp()}\n        </DialogContent>\n      </Dialog>\n\n      {/* Agent Integration Dialog */}\n      <Dialog open={showAgentIntegration} onOpenChange={setShowAgentIntegration}>\n        <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-hidden\">\n          <DialogHeader>\n            <DialogTitle>Agent Integration</DialogTitle>\n          </DialogHeader>\n          <AgentIntegration\n            chatId={chatId}\n            onAgentMessage={handleAgentMessage}\n            onAppLaunch={handleAgentAppLaunch}\n            onWorkflowTrigger={handleWorkflowTrigger}\n          />\n        </DialogContent>\n      </Dialog>\n\n      {/* Invite Users Dialog */}\n      <InviteUsersDialog\n        isOpen={showInviteDialog}\n        onClose={() => setShowInviteDialog(false)}\n        chatId={chatId}\n        chatName={chatInfo.name}\n        isGroupChat={isGroup}\n        onInviteUsers={handleInviteUsers}\n      />\n\n      {/* Call UI Dialogs */}\n      <PhoneCallUI\n        isOpen={showPhoneCall}\n        onClose={() => setShowPhoneCall(false)}\n        contact={chatInfo}\n        callType=\"outgoing\"\n      />\n\n      <VideoCallUI\n        isOpen={showVideoCall}\n        onClose={() => setShowVideoCall(false)}\n        contact={chatInfo}\n        callType=\"outgoing\"\n      />\n    </div>\n  )\n}\n"],"names":["ChatWindow","AppLauncher","dynamic","then","m","ssr","loading","div","className","AppMessage","CalculatorApp","TicTacToeApp","EventPlannerApp","AgentIntegration","PhoneCallUI","VideoCallUI","mockMessages","id","content","timestamp","Date","now","senderId","senderName","type","isOwn","appData","appId","appName","isLiked","likeCount","chatId","onToggleSidebar","sidebarCollapsed","messages","setMessages","useState","newMessage","setNewMessage","activeApp","setActiveApp","activeAppName","setActiveAppName","showAgentIntegration","setShowAgentIntegration","showPhoneCall","setShowPhoneCall","showVideoCall","setShowVideoCall","showInviteDialog","setShowInviteDialog","participantsCount","setParticipantsCount","messagesEndRef","useRef","contentRef","isAtBottom","setIsAtBottom","showJump","setShowJump","lastReadAt","setLastReadAt","isLoading","setIsLoading","isHeadsetView","setIsHeadsetView","workspaceMode","setWorkspaceMode","isMobile","useIsMobile","triggerHaptic","useHaptics","isConnected","wsMessages","joinConversation","sendChatMessage","sendTyping","sendEditMessage","typingUsers","wsTypingUsers","useWebSocket","conversations","inviteParticipants","useConversations","workspaceState","workspaceActions","useWorkspace","useEffect","enabled","isFeatureEnabled","FEATURES","IMMERSIVE_CHAT","raw","localStorage","getItem","handleToggleHeadsetView","useCallback","prev","next","setItem","trackEvent","name","properties","shouldShowHeadset3D","useMemo","scrollToBottom","current","scrollIntoView","behavior","lastTs","length","String","getTime","d","Number","isNaN","valueOf","latest","cancelled","run","data","auth","supabase","getUser","me","user","msgs","messageService","getMessages","mapped","map","created_at","user_id","role","e","console","warn","count","from","select","head","eq","toString","text","sender","mediaUrl","fileName","fileSize","isPinned","undefined","some","newText","handleSendMessage","trim","handleEmojiSelect","emoji","handleFileSelect","file","fileUrl","URL","createObjectURL","message","size","toFixed","handleGifSelect","gif","title","url","gifData","preview_url","width","height","handleRefresh","Promise","resolve","setTimeout","log","handleLaunchApp","handleAppShare","handleOpenApp","appNames","calculator","renderActiveApp","onShare","result","event","handleUpdateMessage","previousContent","find","updateMessage","toast","description","variant","handleAgentMessage","agentId","agentMessage","handleAgentAppLaunch","context","handleWorkflowTrigger","workflowId","handlePhoneCall","handleVideoCall","handlePopout","origin","window","location","searchParams","set","open","error","openAppLauncherDrawer","el","document","querySelector","click","handleInviteUsers","users","resolved","all","u","uname","identifier","startsWith","slice","prof","getProfileByUsername","getProfileByIdentifier","info","limit","Array","isArray","userIds","Set","filter","Error","handleScroll","currentTarget","distanceFromBottom","scrollHeight","scrollTop","clientHeight","atBottom","dayLabel","isToday","isYesterday","format","firstUnreadIndex","findIndex","DateDivider","label","span","UnreadDivider","conversation","c","isGroup","chatInfo","email","phone","bio","status","customStatus","avatar","participants","isAgent","Boolean","agent_id","pinnedForHeader","headsetItems","WorkspaceToolbar","mode","layout","activeTab","activeParticipants","onModeChange","setMode","onLayoutChange","setLayout","onTabChange","setActiveTab","onStartVideoCall","startVideoCall","onStartPhoneCall","startPhoneCall","onExecuteTool","toolType","executeToolAction","onGenerateMedia","generateMedia","WorkspaceMode","onSendMessage","onEditMessage","EnhancedChatHeader","pinnedMessages","onPhoneCall","onVideoCall","onOpenAgentSettings","onPopout","onOpenAppLauncher","onInviteUsers","onToggleHeadsetView","onLaunchApp","Headset3DView","items","PullToRefresh","onRefresh","ref","onScroll","_","i","Skeleton","idx","showDay","toDateString","showUnread","onOpenApp","MessageBubble","onUpdateMessage","Object","entries","userId","userInfo","TypingIndicator","userName","button","onClick","aria-label","ChevronDown","MobileMessageInput","value","onChange","onSend","onEmojiSelect","onFileSelect","onGifSelect","onAgentToggle","DesktopMessageInput","Dialog","onOpenChange","DialogContent","DialogHeader","DialogTitle","onAgentMessage","onAppLaunch","onWorkflowTrigger","InviteUsersDialog","isOpen","onClose","chatName","isGroupChat","contact","callType"],"mappings":"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"}