{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/hooks/use-workspace.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react'\nimport { trackEvent } from '@/lib/analytics'\n\nexport interface WorkspaceState {\n  mode: 'chat' | 'workspace'\n  layout: 'unified' | 'split'\n  activeTab: 'chat' | 'media' | 'tools'\n  isVideoCallActive: boolean\n  isPhoneCallActive: boolean\n  activeTools: string[]\n  mediaGenerations: any[]\n}\n\nexport interface WorkspaceActions {\n  setMode: (mode: 'chat' | 'workspace') => void\n  setLayout: (layout: 'unified' | 'split') => void\n  setActiveTab: (tab: 'chat' | 'media' | 'tools') => void\n  startVideoCall: () => void\n  endVideoCall: () => void\n  startPhoneCall: () => void\n  endPhoneCall: () => void\n  executeToolAction: (toolType: string, params: any) => Promise<string>\n  generateMedia: (type: 'image' | 'audio' | 'video', prompt: string) => Promise<string>\n}\n\nexport function useWorkspace(chatId: string): [WorkspaceState, WorkspaceActions] {\n  const [state, setState] = useState<WorkspaceState>({\n    mode: 'chat',\n    layout: 'unified',\n    activeTab: 'chat',\n    isVideoCallActive: false,\n    isPhoneCallActive: false,\n    activeTools: [],\n    mediaGenerations: []\n  })\n\n  // Restore workspace state from localStorage\n  useEffect(() => {\n    const savedState = localStorage.getItem(`workspace_state_${chatId}`)\n    if (savedState) {\n      try {\n        const parsed = JSON.parse(savedState)\n        setState(prev => ({ ...prev, ...parsed }))\n      } catch (e) {\n        console.warn('Failed to restore workspace state:', e)\n      }\n    }\n  }, [chatId])\n\n  // Persist workspace state\n  useEffect(() => {\n    localStorage.setItem(`workspace_state_${chatId}`, JSON.stringify(state))\n  }, [chatId, state])\n\n  const setMode = useCallback((mode: 'chat' | 'workspace') => {\n    setState(prev => ({ ...prev, mode }))\n    trackEvent({\n      name: 'workspace_mode_change',\n      properties: { chatId, mode }\n    })\n  }, [chatId])\n\n  const setLayout = useCallback((layout: 'unified' | 'split') => {\n    setState(prev => ({ ...prev, layout }))\n    trackEvent({\n      name: 'workspace_layout_change',\n      properties: { chatId, layout }\n    })\n  }, [chatId])\n\n  const setActiveTab = useCallback((activeTab: 'chat' | 'media' | 'tools') => {\n    setState(prev => ({ ...prev, activeTab }))\n  }, [])\n\n  const startVideoCall = useCallback(() => {\n    setState(prev => ({ ...prev, isVideoCallActive: true }))\n    trackEvent({\n      name: 'workspace_video_call_start',\n      properties: { chatId }\n    })\n  }, [chatId])\n\n  const endVideoCall = useCallback(() => {\n    setState(prev => ({ ...prev, isVideoCallActive: false }))\n    trackEvent({\n      name: 'workspace_video_call_end',\n      properties: { chatId }\n    })\n  }, [chatId])\n\n  const startPhoneCall = useCallback(() => {\n    setState(prev => ({ ...prev, isPhoneCallActive: true }))\n    trackEvent({\n      name: 'workspace_phone_call_start',\n      properties: { chatId }\n    })\n  }, [chatId])\n\n  const endPhoneCall = useCallback(() => {\n    setState(prev => ({ ...prev, isPhoneCallActive: false }))\n    trackEvent({\n      name: 'workspace_phone_call_end',\n      properties: { chatId }\n    })\n  }, [chatId])\n\n  const executeToolAction = useCallback(async (toolType: string, params: any): Promise<string> => {\n    const toolId = `tool_${Date.now()}`\n    \n    setState(prev => ({ \n      ...prev, \n      activeTools: [...prev.activeTools, toolId]\n    }))\n\n    await trackEvent({\n      name: 'workspace_tool_execution',\n      properties: { chatId, toolType, params }\n    })\n\n    // Simulate tool execution - in real implementation, this would call actual APIs\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        setState(prev => ({\n          ...prev,\n          activeTools: prev.activeTools.filter(id => id !== toolId)\n        }))\n        resolve(`Tool ${toolType} executed successfully`)\n      }, 2000)\n    })\n  }, [chatId])\n\n  const generateMedia = useCallback(async (type: 'image' | 'audio' | 'video', prompt: string): Promise<string> => {\n    const mediaId = `media_${Date.now()}`\n    \n    setState(prev => ({\n      ...prev,\n      mediaGenerations: [...prev.mediaGenerations, { id: mediaId, type, prompt, status: 'generating' }]\n    }))\n\n    await trackEvent({\n      name: 'workspace_media_generation',\n      properties: { chatId, type, prompt }\n    })\n\n    // Simulate media generation\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        setState(prev => ({\n          ...prev,\n          mediaGenerations: prev.mediaGenerations.map(item =>\n            item.id === mediaId \n              ? { ...item, status: 'completed', url: `/placeholder-${type}.${type === 'audio' ? 'mp3' : type === 'video' ? 'mp4' : 'jpg'}` }\n              : item\n          )\n        }))\n        resolve(mediaId)\n      }, 3000)\n    })\n  }, [chatId])\n\n  const actions: WorkspaceActions = {\n    setMode,\n    setLayout,\n    setActiveTab,\n    startVideoCall,\n    endVideoCall,\n    startPhoneCall,\n    endPhoneCall,\n    executeToolAction,\n    generateMedia\n  }\n\n  return [state, actions]\n}\n"],"names":["useWorkspace","chatId","state","setState","useState","mode","layout","activeTab","isVideoCallActive","isPhoneCallActive","activeTools","mediaGenerations","useEffect","savedState","localStorage","getItem","parsed","JSON","parse","prev","e","console","warn","setItem","stringify","setMode","useCallback","trackEvent","name","properties","setLayout","setActiveTab","startVideoCall","endVideoCall","startPhoneCall","endPhoneCall","executeToolAction","toolType","params","toolId","Date","now","Promise","resolve","setTimeout","filter","id","generateMedia","type","prompt","mediaId","status","map","item","url","actions"],"mappings":"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"}