{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/components/workspace/workspace-sidebar.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useCallback, useEffect, useMemo } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport { \n  Code, \n  Image as ImageIcon, \n  Music, \n  FileText, \n  Play, \n  Pause, \n  Square,\n  Download,\n  Share2,\n  Copy,\n  Trash2,\n  Eye,\n  Bot,\n  Settings,\n  Terminal,\n  Zap,\n  Palette,\n  Camera,\n  Mic,\n  Users,\n  WifiOff\n} from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { trackEvent } from \"@/lib/analytics\"\nimport { MCPToolsPanel } from \"@/components/mcp/mcp-tools-panel\"\nimport { AIPanelSidebar } from \"@/components/ai/ai-panel-sidebar\"\nimport { messageService, subscribeToMessages } from \"@/services/message-service\"\nimport { profileService, getWorkspaceSettings, setWorkspaceSettings } from \"@/services/profile-service\"\nimport { mcpService } from \"@/services/mcp-service\"\n\ninterface WorkspaceItem {\n  id: string\n  type: 'message' | 'code' | 'image' | 'audio' | 'video' | 'document' | 'tool_execution'\n  content: any\n  timestamp: Date\n  author: string\n  status?: 'generating' | 'completed' | 'error'\n  metadata?: Record<string, any>\n}\n\ninterface WorkspaceSidebarProps {\n  panelState: \"expanded\" | \"minimized\" | \"collapsed\"\n  onSetPanelState: (state: \"expanded\" | \"minimized\" | \"collapsed\") => void\n  selectedAgentId?: string\n  chatId?: string\n  onSelectAgent?: (agentId: string) => void\n  workspaceItems?: WorkspaceItem[]\n  onExecuteTool?: (toolType: string) => void\n  onGenerateMedia?: (type: string) => void\n  activeParticipants?: number\n  isConnected?: boolean\n}\n\nexport function WorkspaceSidebar({\n  panelState,\n  onSetPanelState,\n  selectedAgentId,\n  chatId,\n  onSelectAgent,\n  workspaceItems = [],\n  onExecuteTool,\n  onGenerateMedia,\n  activeParticipants = 0,\n  isConnected = true\n}: WorkspaceSidebarProps) {\n  const [activeTab, setActiveTab] = useState(\"workspace\")\n  const [selectedItems, setSelectedItems] = useState<Set<string>>(new Set())\n\n  // Derived workspace items from real Supabase-backed messages for this chat\n  const [dynamicWorkspaceItems, setDynamicWorkspaceItems] = useState<WorkspaceItem[]>([])\n  // Cache for user profile display enrichment\n  const [profileNames, setProfileNames] = useState<Record<string, { name: string; avatar_url?: string | null }>>({})\n\n  // Local, per-chat settings (persisted). TODO: move to profile-backed prefs when schema supports it\n  const [settings, setSettings] = useState({\n    autoSaveItems: true,\n    showItemPreviews: false,\n    enableRTC: true,\n    showTypingIndicators: true,\n    enableReactions: false,\n    autoScroll: true,\n  })\n\n  // Load settings from localStorage and profile when chatId changes\n  useEffect(() => {\n    if (typeof window === 'undefined') return\n    const key = `ws_settings_${chatId || 'global'}`\n    try {\n      const raw = localStorage.getItem(key)\n      if (raw) {\n        const data = JSON.parse(raw)\n        setSettings((prev) => ({ ...prev, ...data }))\n      }\n    } catch (e) {\n      console.warn('Failed to load workspace settings', e)\n    }\n    // Try loading from profile metadata (non-blocking)\n    ;(async () => {\n      try {\n        const remote = await getWorkspaceSettings(chatId)\n        if (remote && Object.keys(remote).length > 0) {\n          setSettings((prev) => ({ ...prev, ...remote }))\n          // keep localStorage in sync for quick reloads\n          if (typeof window !== 'undefined') {\n            localStorage.setItem(key, JSON.stringify({ ...remote }))\n          }\n        }\n      } catch (err) {\n        // Not authenticated or network error; ignore\n      }\n    })()\n  }, [chatId])\n\n  const updateSetting = useCallback((key: keyof typeof settings, value: boolean) => {\n    setSettings((prev) => {\n      const next = { ...prev, [key]: value }\n      if (typeof window !== 'undefined') {\n        try {\n          localStorage.setItem(`ws_settings_${chatId || 'global'}`, JSON.stringify(next))\n        } catch (_) {\n          // ignore storage errors\n        }\n      }\n      void trackEvent({ name: 'workspace_setting_toggled', properties: { key, value, chatId } })\n      // Persist to profile metadata if available\n      ;(async () => {\n        try {\n          await setWorkspaceSettings(chatId, next)\n        } catch (_) {\n          // ignore if not authenticated or fails\n        }\n      })()\n      return next\n    })\n  }, [chatId])\n\n  // Helper to map API Message to WorkspaceItem\n  const mapApiMessageToItem = (msg: any): WorkspaceItem => ({\n    id: msg.id,\n    type: 'message',\n    content: msg.content,\n    timestamp: new Date(msg.created_at || msg.timestamp || Date.now()),\n    author: (msg.user && msg.user.name) || (msg.is_ai ? 'Assistant' : profileNames[msg.user_id]?.name || msg.user_id || 'User'),\n    metadata: {\n      role: msg.role,\n      is_ai: msg.is_ai,\n      user_id: msg.user_id,\n      type: msg.type,\n      raw: msg,\n    },\n  })\n\n  // Helper to map DB insert payload to WorkspaceItem\n  const mapDbMessageToItem = (dbMsg: any): WorkspaceItem => ({\n    id: dbMsg.id,\n    type: 'message',\n    content: dbMsg.content,\n    timestamp: new Date(dbMsg.timestamp || Date.now()),\n    author: dbMsg.role === 'assistant' ? 'Assistant' : (profileNames[dbMsg.user_id]?.name || dbMsg.user_id || 'User'),\n    metadata: {\n      role: dbMsg.role,\n      is_ai: dbMsg.role === 'assistant',\n      user_id: dbMsg.user_id,\n      raw: dbMsg,\n    },\n  })\n\n  // Fetch initial messages and subscribe for realtime inserts\n  useEffect(() => {\n    let unsubscribe: (() => void) | undefined\n    let isMounted = true\n\n    async function load() {\n      if (!chatId) {\n        setDynamicWorkspaceItems([])\n        return\n      }\n      const msgs = await messageService.getMessages(chatId)\n      if (!isMounted) return\n      const items = (msgs || []).map(mapApiMessageToItem)\n      setDynamicWorkspaceItems(items)\n\n      // Enrich authors by fetching missing profiles (simple caching)\n      const missing = Array.from(new Set((msgs || [])\n        .map((m: any) => m.user_id)\n        .filter((id: string | undefined) => id && !profileNames[id!]) as string[]))\n      if (missing.length > 0) {\n        for (const uid of missing) {\n          try {\n            const prof = await profileService.getProfile(uid)\n            if (prof) {\n              setProfileNames((prev) => ({ ...prev, [uid]: { name: prof.full_name || prof.username, avatar_url: prof.avatar_url } }))\n            }\n          } catch (_) {\n            // ignore\n          }\n        }\n      }\n\n      // Subscribe to realtime inserts\n      unsubscribe = subscribeToMessages(chatId, (dbMsg) => {\n        const item = mapDbMessageToItem(dbMsg)\n        setDynamicWorkspaceItems((prev) => {\n          if (prev.some((p) => p.id === item.id)) return prev\n          return [...prev, item]\n        })\n        // opportunistically fetch profile for new user\n        const uid = (dbMsg as any)?.user_id\n        if (uid && !profileNames[uid]) {\n          ;(async () => {\n            try {\n              const prof = await profileService.getProfile(uid)\n              if (prof) setProfileNames((prev) => ({ ...prev, [uid]: { name: prof.full_name || prof.username, avatar_url: prof.avatar_url } }))\n            } catch (_) {}\n          })()\n        }\n      })\n    }\n\n    void load()\n    return () => {\n      isMounted = false\n      if (unsubscribe) unsubscribe()\n    }\n  }, [chatId])\n\n  // Subscribe to MCP SSE events and add as workspace tool_execution items\n  useEffect(() => {\n    const handler = (eventText: string) => {\n      const id = `${Date.now()}-${Math.random().toString(36).slice(2, 8)}`\n      const status = mcpService.getMcpStatus()\n      const item: WorkspaceItem = {\n        id,\n        type: 'tool_execution',\n        content: eventText,\n        timestamp: new Date(),\n        author: 'MCP',\n        metadata: { source: 'mcp', sessionId: status.sessionId },\n      }\n      setDynamicWorkspaceItems((prev) => [...prev, item])\n    }\n    mcpService.onMcpEvent(handler)\n    return () => {\n      mcpService.offMcpEvent(handler)\n    }\n  }, [])\n\n  // Merge prop-provided items with dynamic items from Supabase\n  const allItems = useMemo(() => {\n    const merged = [...dynamicWorkspaceItems, ...(workspaceItems || [])]\n    return merged.sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime())\n  }, [dynamicWorkspaceItems, workspaceItems])\n\n  const handleItemAction = useCallback((action: string, itemId?: string) => {\n    trackEvent({ name: 'workspace_item_action', properties: { action, itemId } })\n    \n    switch (action) {\n      case 'run':\n        // Handle run action\n        break\n      case 'view':\n        // Handle view action\n        break\n      case 'download':\n        // Handle download action\n        break\n      case 'copy':\n        // Handle copy action\n        break\n      case 'share':\n        // Handle share action\n        break\n      case 'delete':\n        // Handle delete action\n        break\n    }\n  }, [])\n\n  const handleToolExecution = useCallback((toolType: string) => {\n    onExecuteTool?.(toolType)\n    trackEvent({ name: 'workspace_tool_execute', properties: { toolType } })\n  }, [onExecuteTool])\n\n  const handleMediaGeneration = useCallback((type: string) => {\n    onGenerateMedia?.(type)\n    trackEvent({ name: 'workspace_media_generate', properties: { type } })\n  }, [onGenerateMedia])\n\n  if (panelState === \"collapsed\") {\n    return null\n  }\n\n  const isMinimized = panelState === \"minimized\"\n\n  return (\n    <div className=\"h-full min-h-0 bg-white dark:bg-gray-900 border-l border-gray-200 dark:border-gray-700 flex flex-col\">\n      {isMinimized ? (\n        <div className=\"flex flex-col items-center py-4 space-y-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setActiveTab(\"workspace\")}\n            className={cn(\"p-2\", activeTab === \"workspace\" && \"bg-accent\")}\n            aria-label=\"Workspace\"\n            title=\"Workspace\"\n          >\n            <Zap className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setActiveTab(\"ai\")}\n            className={cn(\"p-2\", activeTab === \"ai\" && \"bg-accent\")}\n            aria-label=\"AI Models\"\n            title=\"AI Models\"\n          >\n            <Bot className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setActiveTab(\"mcp\")}\n            className={cn(\"p-2\", activeTab === \"mcp\" && \"bg-accent\")}\n            aria-label=\"MCP\"\n            title=\"MCP\"\n          >\n            <Terminal className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setActiveTab(\"settings\")}\n            className={cn(\"p-2\", activeTab === \"settings\" && \"bg-accent\")}\n            aria-label=\"Settings\"\n            title=\"Settings\"\n          >\n            <Settings className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      ) : (\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"flex-1 flex flex-col min-h-0\">\n          <div className=\"sticky top-0 z-10 border-b border-gray-200 dark:border-gray-700 p-2 sm:p-3 bg-white/80 dark:bg-gray-900/80 backdrop-blur\">\n            <div className=\"flex items-center justify-between mb-2 sm:mb-3\">\n              <div className=\"flex items-center gap-2\">\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  <Users className=\"h-3 w-3 mr-1\" />\n                  {activeParticipants} active\n                </Badge>\n                {!isConnected && (\n                  <Badge variant=\"destructive\" className=\"text-xs\">\n                    <WifiOff className=\"h-3 w-3 mr-1\" />\n                    Disconnected\n                  </Badge>\n                )}\n              </div>\n            </div>\n            <TabsList className=\"grid w-full grid-cols-4 gap-1 sm:gap-2 rounded-xl bg-gray-50 dark:bg-gray-800/50 p-1 ring-1 ring-gray-200 dark:ring-gray-700\">\n              <TabsTrigger value=\"workspace\" className=\"text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm\" aria-label=\"Workspace\" title=\"Workspace\">\n                <Zap className=\"h-3 w-3 mr-1\" />\n                <span className=\"hidden sm:inline\">Workspace</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"ai\" className=\"text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm\" aria-label=\"AI Models\" title=\"AI Models\">\n                <Bot className=\"h-3 w-3 mr-1\" />\n                <span className=\"hidden sm:inline\">AI Models</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"mcp\" className=\"text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm\" aria-label=\"MCP\" title=\"MCP\">\n                <Terminal className=\"h-3 w-3 mr-1\" />\n                <span className=\"hidden sm:inline\">MCP</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"settings\" className=\"text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm\" aria-label=\"Settings\" title=\"Settings\">\n                <Settings className=\"h-3 w-3 mr-1\" />\n                <span className=\"hidden sm:inline\">Settings</span>\n              </TabsTrigger>\n            </TabsList>\n          </div>\n\n          <TabsContent value=\"workspace\" className=\"flex-1 flex flex-col m-0 min-h-0\">\n            <div className=\"p-2 sm:p-3 border-b border-gray-200 dark:border-gray-700\">\n              <h3 className=\"font-medium text-sm mb-2 sm:mb-3\">Quick Tools</h3>\n              <div className=\"rounded-lg border border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900/40 p-2 sm:p-3\">\n                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-2 sm:gap-3\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleToolExecution('code_interpreter')}\n                    className=\"text-xs justify-center\"\n                  >\n                    <Code className=\"h-3 w-3 mr-1\" />\n                    Code\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleMediaGeneration('image')}\n                    className=\"text-xs justify-center\"\n                  >\n                    <Camera className=\"h-3 w-3 mr-1\" />\n                    Image\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleMediaGeneration('audio')}\n                    className=\"text-xs justify-center\"\n                  >\n                    <Mic className=\"h-3 w-3 mr-1\" />\n                    Audio\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleToolExecution('web_search')}\n                    className=\"text-xs justify-center\"\n                  >\n                    <FileText className=\"h-3 w-3 mr-1\" />\n                    Search\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex-1 flex flex-col min-h-0 overflow-hidden\">\n              <div className=\"p-2 sm:p-3 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h3 className=\"font-medium text-sm\">Workspace Items</h3>\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    {allItems.length}\n                  </Badge>\n                </div>\n                {selectedItems.size > 0 && (\n                  <div className=\"flex gap-1 mb-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleItemAction('copy')}\n                      className=\"text-xs px-2 py-1\"\n                    >\n                      <Copy className=\"h-3 w-3\" />\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleItemAction('share')}\n                      className=\"text-xs px-2 py-1\"\n                    >\n                      <Share2 className=\"h-3 w-3\" />\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleItemAction('delete')}\n                      className=\"text-xs px-2 py-1 text-red-600 hover:text-red-700\"\n                    >\n                      <Trash2 className=\"h-3 w-3\" />\n                    </Button>\n                  </div>\n                )}\n              </div>\n\n              <ScrollArea className=\"flex-1 pb-24 sm:pb-8\">\n                <div className=\"p-2 sm:p-3 space-y-2\">\n                  {allItems.length === 0 ? (\n                    <div className=\"text-center py-6 sm:py-8 text-sm text-gray-500 dark:text-gray-400\">\n                      <Zap className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                      <p>No workspace items yet</p>\n                      <p className=\"text-xs mt-1\">Use tools and generate media to see items here</p>\n                    </div>\n                  ) : (\n                    allItems.map((item) => (\n                      <WorkspaceItemCard\n                        key={item.id}\n                        item={item}\n                        isSelected={selectedItems.has(item.id)}\n                        onSelect={(selected) => {\n                          const newSelected = new Set(selectedItems)\n                          if (selected) {\n                            newSelected.add(item.id)\n                          } else {\n                            newSelected.delete(item.id)\n                          }\n                          setSelectedItems(newSelected)\n                        }}\n                        onAction={handleItemAction}\n                      />\n                    ))\n                  )}\n                </div>\n              </ScrollArea>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"ai\" className=\"flex-1 flex flex-col m-0 min-h-0\">\n            <div className=\"flex-1\">\n              <AIPanelSidebar\n                chatId={chatId || \"\"}\n                isCollapsed={false}\n                onToggle={() => onSetPanelState(\"minimized\")}\n              />\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"mcp\" className=\"flex-1 flex flex-col m-0 min-h-0\">\n            <div className=\"flex-1 p-2 sm:p-3\">\n              <MCPToolsPanel chatId={chatId || \"\"} />\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"settings\" className=\"flex-1 flex flex-col m-0 min-h-0\">\n            <ScrollArea className=\"flex-1 pb-24 sm:pb-8\">\n              <div className=\"p-2 sm:p-3 space-y-4\">\n                <div className=\"rounded-lg border border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900/40 p-2 sm:p-3\">\n                  <h3 className=\"font-medium text-sm mb-2 sm:mb-3\">Workspace Settings</h3>\n                  <div className=\"space-y-2\">\n                    <label className=\"flex items-center space-x-2 text-sm\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"rounded\"\n                        aria-label=\"Auto-save workspace items\"\n                        checked={settings.autoSaveItems}\n                        onChange={(e) => updateSetting('autoSaveItems', e.target.checked)}\n                      />\n                      <span>Auto-save workspace items</span>\n                    </label>\n                    <label className=\"flex items-center space-x-2 text-sm\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"rounded\"\n                        aria-label=\"Show item previews\"\n                        checked={settings.showItemPreviews}\n                        onChange={(e) => updateSetting('showItemPreviews', e.target.checked)}\n                      />\n                      <span>Show item previews</span>\n                    </label>\n                    <label className=\"flex items-center space-x-2 text-sm\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"rounded\"\n                        aria-label=\"Enable real-time collaboration\"\n                        checked={settings.enableRTC}\n                        onChange={(e) => updateSetting('enableRTC', e.target.checked)}\n                      />\n                      <span>Enable real-time collaboration</span>\n                    </label>\n                  </div>\n                </div>\n\n                <div className=\"rounded-lg border border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900/40 p-2 sm:p-3\">\n                  <h3 className=\"font-medium text-sm mb-2 sm:mb-3\">Chat Settings</h3>\n                  <div className=\"space-y-2\">\n                    <label className=\"flex items-center space-x-2 text-sm\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"rounded\"\n                        aria-label=\"Show typing indicators\"\n                        checked={settings.showTypingIndicators}\n                        onChange={(e) => updateSetting('showTypingIndicators', e.target.checked)}\n                      />\n                      <span>Show typing indicators</span>\n                    </label>\n                    <label className=\"flex items-center space-x-2 text-sm\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"rounded\"\n                        aria-label=\"Enable message reactions\"\n                        checked={settings.enableReactions}\n                        onChange={(e) => updateSetting('enableReactions', e.target.checked)}\n                      />\n                      <span>Enable message reactions</span>\n                    </label>\n                    <label className=\"flex items-center space-x-2 text-sm\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"rounded\"\n                        aria-label=\"Auto-scroll to new messages\"\n                        checked={settings.autoScroll}\n                        onChange={(e) => updateSetting('autoScroll', e.target.checked)}\n                      />\n                      <span>Auto-scroll to new messages</span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </ScrollArea>\n          </TabsContent>\n        </Tabs>\n      )}\n    </div>\n  )\n}\n\ninterface WorkspaceItemCardProps {\n  item: WorkspaceItem\n  isSelected: boolean\n  onSelect: (selected: boolean) => void\n  onAction: (action: string, itemId: string) => void\n}\n\nfunction WorkspaceItemCard({ item, isSelected, onSelect, onAction }: WorkspaceItemCardProps) {\n  const getItemIcon = () => {\n    switch (item.type) {\n      case 'code':\n        return <Code className=\"h-4 w-4\" />\n      case 'image':\n        return <ImageIcon className=\"h-4 w-4\" />\n      case 'audio':\n        return <Music className=\"h-4 w-4\" />\n      case 'video':\n        return <Play className=\"h-4 w-4\" />\n      case 'document':\n        return <FileText className=\"h-4 w-4\" />\n      case 'tool_execution':\n        return <Zap className=\"h-4 w-4\" />\n      default:\n        return <FileText className=\"h-4 w-4\" />\n    }\n  }\n\n  const getStatusColor = () => {\n    switch (item.status) {\n      case 'generating':\n        return 'text-blue-600 dark:text-blue-400'\n      case 'completed':\n        return 'text-green-600 dark:text-green-400'\n      case 'error':\n        return 'text-red-600 dark:text-red-400'\n      default:\n        return 'text-gray-600 dark:text-gray-400'\n    }\n  }\n\n  return (\n    <div className={cn(\n              \"p-2 sm:p-3 border border-gray-200 dark:border-gray-800 rounded-xl bg-white dark:bg-gray-900/40 cursor-pointer transition-colors hover:bg-accent/40\",\n              isSelected && \"bg-blue-50 dark:bg-blue-900/20 border-blue-300 dark:border-blue-600\"\n            )}>\n      <div className=\"flex items-start space-x-2\">\n        <input\n          type=\"checkbox\"\n          checked={isSelected}\n          onChange={(e) => onSelect(e.target.checked)}\n          className=\"mt-1 rounded\"\n        />\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center space-x-2 mb-1\">\n            <span className={getStatusColor()}>\n              {getItemIcon()}\n            </span>\n            <span className=\"text-xs font-medium truncate\">\n              {item.type.replace('_', ' ').toUpperCase()}\n            </span>\n            <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {item.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n            </span>\n          </div>\n          <p className=\"text-xs text-gray-600 dark:text-gray-400 line-clamp-2\">\n            {typeof item.content === 'string' ? item.content : JSON.stringify(item.content).slice(0, 100)}\n          </p>\n          <div className=\"flex items-center space-x-1 mt-2\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => onAction('view', item.id)}\n              className=\"text-xs px-1 py-0.5 h-auto\"\n            >\n              <Eye className=\"h-3 w-3\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => onAction('download', item.id)}\n              className=\"text-xs px-1 py-0.5 h-auto\"\n            >\n              <Download className=\"h-3 w-3\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":["WorkspaceSidebar","panelState","onSetPanelState","selectedAgentId","chatId","onSelectAgent","workspaceItems","onExecuteTool","onGenerateMedia","activeParticipants","isConnected","activeTab","setActiveTab","useState","selectedItems","setSelectedItems","Set","dynamicWorkspaceItems","setDynamicWorkspaceItems","profileNames","setProfileNames","settings","setSettings","autoSaveItems","showItemPreviews","enableRTC","showTypingIndicators","enableReactions","autoScroll","useEffect","window","key","raw","localStorage","getItem","data","JSON","parse","prev","e","console","warn","remote","getWorkspaceSettings","Object","keys","length","setItem","stringify","err","updateSetting","useCallback","value","next","_","trackEvent","name","properties","setWorkspaceSettings","mapApiMessageToItem","msg","id","type","content","timestamp","Date","created_at","now","author","user","is_ai","user_id","metadata","role","mapDbMessageToItem","dbMsg","unsubscribe","isMounted","load","msgs","messageService","getMessages","items","map","missing","Array","from","m","filter","uid","prof","profileService","getProfile","full_name","username","avatar_url","subscribeToMessages","item","some","p","handler","eventText","Math","random","toString","slice","status","mcpService","getMcpStatus","source","sessionId","onMcpEvent","offMcpEvent","allItems","useMemo","merged","sort","a","b","getTime","handleItemAction","action","itemId","handleToolExecution","toolType","handleMediaGeneration","isMinimized","div","className","Button","variant","size","onClick","cn","aria-label","title","Zap","Bot","Terminal","Settings","Tabs","onValueChange","Badge","Users","WifiOff","TabsList","TabsTrigger","span","TabsContent","h3","Code","Camera","Mic","FileText","Copy","Share2","Trash2","ScrollArea","WorkspaceItemCard","isSelected","has","onSelect","selected","newSelected","add","delete","onAction","AIPanelSidebar","isCollapsed","onToggle","MCPToolsPanel","label","input","checked","onChange","target","getItemIcon","ImageIcon","Music","Play","getStatusColor","replace","toUpperCase","toLocaleTimeString","hour","minute","Eye","Download"],"mappings":"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"}