d2b603e387f2abcfe5beb002e9dff178
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "WorkspaceSidebar", {
    enumerable: true,
    get: function() {
        return WorkspaceSidebar;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _button = require("../ui/button");
const _badge = require("../ui/badge");
const _tabs = require("../ui/tabs");
const _scrollarea = require("../ui/scroll-area");
const _lucidereact = require("lucide-react");
const _utils = require("../../lib/utils");
const _analytics = require("../../lib/analytics");
const _mcptoolspanel = require("../mcp/mcp-tools-panel");
const _aipanelsidebar = require("../ai/ai-panel-sidebar");
const _messageservice = require("../../services/message-service");
const _profileservice = require("../../services/profile-service");
const _mcpservice = require("../../services/mcp-service");
function WorkspaceSidebar({ panelState, onSetPanelState, selectedAgentId, chatId, onSelectAgent, workspaceItems = [], onExecuteTool, onGenerateMedia, activeParticipants = 0, isConnected = true }) {
    const [activeTab, setActiveTab] = (0, _react.useState)("workspace");
    const [selectedItems, setSelectedItems] = (0, _react.useState)(new Set());
    // Derived workspace items from real Supabase-backed messages for this chat
    const [dynamicWorkspaceItems, setDynamicWorkspaceItems] = (0, _react.useState)([]);
    // Cache for user profile display enrichment
    const [profileNames, setProfileNames] = (0, _react.useState)({});
    // Local, per-chat settings (persisted). TODO: move to profile-backed prefs when schema supports it
    const [settings, setSettings] = (0, _react.useState)({
        autoSaveItems: true,
        showItemPreviews: false,
        enableRTC: true,
        showTypingIndicators: true,
        enableReactions: false,
        autoScroll: true
    });
    // Load settings from localStorage and profile when chatId changes
    (0, _react.useEffect)(()=>{
        if (typeof window === "undefined") return;
        const key = `ws_settings_${chatId || "global"}`;
        try {
            const raw = localStorage.getItem(key);
            if (raw) {
                const data = JSON.parse(raw);
                setSettings((prev)=>({
                        ...prev,
                        ...data
                    }));
            }
        } catch (e) {
            console.warn("Failed to load workspace settings", e);
        }
        (async ()=>{
            try {
                const remote = await (0, _profileservice.getWorkspaceSettings)(chatId);
                if (remote && Object.keys(remote).length > 0) {
                    setSettings((prev)=>({
                            ...prev,
                            ...remote
                        }));
                    // keep localStorage in sync for quick reloads
                    if (typeof window !== "undefined") {
                        localStorage.setItem(key, JSON.stringify({
                            ...remote
                        }));
                    }
                }
            } catch (err) {
            // Not authenticated or network error; ignore
            }
        })();
    }, [
        chatId
    ]);
    const updateSetting = (0, _react.useCallback)((key, value)=>{
        setSettings((prev)=>{
            const next = {
                ...prev,
                [key]: value
            };
            if (typeof window !== "undefined") {
                try {
                    localStorage.setItem(`ws_settings_${chatId || "global"}`, JSON.stringify(next));
                } catch (_) {
                // ignore storage errors
                }
            }
            void (0, _analytics.trackEvent)({
                name: "workspace_setting_toggled",
                properties: {
                    key,
                    value,
                    chatId
                }
            });
            (async ()=>{
                try {
                    await (0, _profileservice.setWorkspaceSettings)(chatId, next);
                } catch (_) {
                // ignore if not authenticated or fails
                }
            })();
            return next;
        });
    }, [
        chatId
    ]);
    // Helper to map API Message to WorkspaceItem
    const mapApiMessageToItem = (msg)=>({
            id: msg.id,
            type: "message",
            content: msg.content,
            timestamp: new Date(msg.created_at || msg.timestamp || Date.now()),
            author: msg.user && msg.user.name || (msg.is_ai ? "Assistant" : profileNames[msg.user_id]?.name || msg.user_id || "User"),
            metadata: {
                role: msg.role,
                is_ai: msg.is_ai,
                user_id: msg.user_id,
                type: msg.type,
                raw: msg
            }
        });
    // Helper to map DB insert payload to WorkspaceItem
    const mapDbMessageToItem = (dbMsg)=>({
            id: dbMsg.id,
            type: "message",
            content: dbMsg.content,
            timestamp: new Date(dbMsg.timestamp || Date.now()),
            author: dbMsg.role === "assistant" ? "Assistant" : profileNames[dbMsg.user_id]?.name || dbMsg.user_id || "User",
            metadata: {
                role: dbMsg.role,
                is_ai: dbMsg.role === "assistant",
                user_id: dbMsg.user_id,
                raw: dbMsg
            }
        });
    // Fetch initial messages and subscribe for realtime inserts
    (0, _react.useEffect)(()=>{
        let unsubscribe;
        let isMounted = true;
        async function load() {
            if (!chatId) {
                setDynamicWorkspaceItems([]);
                return;
            }
            const msgs = await _messageservice.messageService.getMessages(chatId);
            if (!isMounted) return;
            const items = (msgs || []).map(mapApiMessageToItem);
            setDynamicWorkspaceItems(items);
            // Enrich authors by fetching missing profiles (simple caching)
            const missing = Array.from(new Set((msgs || []).map((m)=>m.user_id).filter((id)=>id && !profileNames[id])));
            if (missing.length > 0) {
                for (const uid of missing){
                    try {
                        const prof = await _profileservice.profileService.getProfile(uid);
                        if (prof) {
                            setProfileNames((prev)=>({
                                    ...prev,
                                    [uid]: {
                                        name: prof.full_name || prof.username,
                                        avatar_url: prof.avatar_url
                                    }
                                }));
                        }
                    } catch (_) {
                    // ignore
                    }
                }
            }
            // Subscribe to realtime inserts
            unsubscribe = (0, _messageservice.subscribeToMessages)(chatId, (dbMsg)=>{
                const item = mapDbMessageToItem(dbMsg);
                setDynamicWorkspaceItems((prev)=>{
                    if (prev.some((p)=>p.id === item.id)) return prev;
                    return [
                        ...prev,
                        item
                    ];
                });
                // opportunistically fetch profile for new user
                const uid = dbMsg?.user_id;
                if (uid && !profileNames[uid]) {
                    (async ()=>{
                        try {
                            const prof = await _profileservice.profileService.getProfile(uid);
                            if (prof) setProfileNames((prev)=>({
                                    ...prev,
                                    [uid]: {
                                        name: prof.full_name || prof.username,
                                        avatar_url: prof.avatar_url
                                    }
                                }));
                        } catch (_) {}
                    })();
                }
            });
        }
        void load();
        return ()=>{
            isMounted = false;
            if (unsubscribe) unsubscribe();
        };
    }, [
        chatId
    ]);
    // Subscribe to MCP SSE events and add as workspace tool_execution items
    (0, _react.useEffect)(()=>{
        const handler = (eventText)=>{
            const id = `${Date.now()}-${Math.random().toString(36).slice(2, 8)}`;
            const status = _mcpservice.mcpService.getMcpStatus();
            const item = {
                id,
                type: "tool_execution",
                content: eventText,
                timestamp: new Date(),
                author: "MCP",
                metadata: {
                    source: "mcp",
                    sessionId: status.sessionId
                }
            };
            setDynamicWorkspaceItems((prev)=>[
                    ...prev,
                    item
                ]);
        };
        _mcpservice.mcpService.onMcpEvent(handler);
        return ()=>{
            _mcpservice.mcpService.offMcpEvent(handler);
        };
    }, []);
    // Merge prop-provided items with dynamic items from Supabase
    const allItems = (0, _react.useMemo)(()=>{
        const merged = [
            ...dynamicWorkspaceItems,
            ...workspaceItems || []
        ];
        return merged.sort((a, b)=>a.timestamp.getTime() - b.timestamp.getTime());
    }, [
        dynamicWorkspaceItems,
        workspaceItems
    ]);
    const handleItemAction = (0, _react.useCallback)((action, itemId)=>{
        (0, _analytics.trackEvent)({
            name: "workspace_item_action",
            properties: {
                action,
                itemId
            }
        });
        switch(action){
            case "run":
                break;
            case "view":
                break;
            case "download":
                break;
            case "copy":
                break;
            case "share":
                break;
            case "delete":
                break;
        }
    }, []);
    const handleToolExecution = (0, _react.useCallback)((toolType)=>{
        onExecuteTool?.(toolType);
        (0, _analytics.trackEvent)({
            name: "workspace_tool_execute",
            properties: {
                toolType
            }
        });
    }, [
        onExecuteTool
    ]);
    const handleMediaGeneration = (0, _react.useCallback)((type)=>{
        onGenerateMedia?.(type);
        (0, _analytics.trackEvent)({
            name: "workspace_media_generate",
            properties: {
                type
            }
        });
    }, [
        onGenerateMedia
    ]);
    if (panelState === "collapsed") {
        return null;
    }
    const isMinimized = panelState === "minimized";
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: "h-full min-h-0 bg-white dark:bg-gray-900 border-l border-gray-200 dark:border-gray-700 flex flex-col",
        children: isMinimized ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "flex flex-col items-center py-4 space-y-4",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                    variant: "ghost",
                    size: "sm",
                    onClick: ()=>setActiveTab("workspace"),
                    className: (0, _utils.cn)("p-2", activeTab === "workspace" && "bg-accent"),
                    "aria-label": "Workspace",
                    title: "Workspace",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Zap, {
                        className: "h-4 w-4"
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                    variant: "ghost",
                    size: "sm",
                    onClick: ()=>setActiveTab("ai"),
                    className: (0, _utils.cn)("p-2", activeTab === "ai" && "bg-accent"),
                    "aria-label": "AI Models",
                    title: "AI Models",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Bot, {
                        className: "h-4 w-4"
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                    variant: "ghost",
                    size: "sm",
                    onClick: ()=>setActiveTab("mcp"),
                    className: (0, _utils.cn)("p-2", activeTab === "mcp" && "bg-accent"),
                    "aria-label": "MCP",
                    title: "MCP",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Terminal, {
                        className: "h-4 w-4"
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                    variant: "ghost",
                    size: "sm",
                    onClick: ()=>setActiveTab("settings"),
                    className: (0, _utils.cn)("p-2", activeTab === "settings" && "bg-accent"),
                    "aria-label": "Settings",
                    title: "Settings",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Settings, {
                        className: "h-4 w-4"
                    })
                })
            ]
        }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.Tabs, {
            value: activeTab,
            onValueChange: setActiveTab,
            className: "flex-1 flex flex-col min-h-0",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "sticky top-0 z-10 border-b border-gray-200 dark:border-gray-700 p-2 sm:p-3 bg-white/80 dark:bg-gray-900/80 backdrop-blur",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "flex items-center justify-between mb-2 sm:mb-3",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                        variant: "outline",
                                        className: "text-xs",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Users, {
                                                className: "h-3 w-3 mr-1"
                                            }),
                                            activeParticipants,
                                            " active"
                                        ]
                                    }),
                                    !isConnected && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                        variant: "destructive",
                                        className: "text-xs",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.WifiOff, {
                                                className: "h-3 w-3 mr-1"
                                            }),
                                            "Disconnected"
                                        ]
                                    })
                                ]
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsList, {
                            className: "grid w-full grid-cols-4 gap-1 sm:gap-2 rounded-xl bg-gray-50 dark:bg-gray-800/50 p-1 ring-1 ring-gray-200 dark:ring-gray-700",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsTrigger, {
                                    value: "workspace",
                                    className: "text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm",
                                    "aria-label": "Workspace",
                                    title: "Workspace",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Zap, {
                                            className: "h-3 w-3 mr-1"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "hidden sm:inline",
                                            children: "Workspace"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsTrigger, {
                                    value: "ai",
                                    className: "text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm",
                                    "aria-label": "AI Models",
                                    title: "AI Models",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Bot, {
                                            className: "h-3 w-3 mr-1"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "hidden sm:inline",
                                            children: "AI Models"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsTrigger, {
                                    value: "mcp",
                                    className: "text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm",
                                    "aria-label": "MCP",
                                    title: "MCP",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Terminal, {
                                            className: "h-3 w-3 mr-1"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "hidden sm:inline",
                                            children: "MCP"
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsTrigger, {
                                    value: "settings",
                                    className: "text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm",
                                    "aria-label": "Settings",
                                    title: "Settings",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Settings, {
                                            className: "h-3 w-3 mr-1"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "hidden sm:inline",
                                            children: "Settings"
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsContent, {
                    value: "workspace",
                    className: "flex-1 flex flex-col m-0 min-h-0",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "p-2 sm:p-3 border-b border-gray-200 dark:border-gray-700",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                    className: "font-medium text-sm mb-2 sm:mb-3",
                                    children: "Quick Tools"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "rounded-lg border border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900/40 p-2 sm:p-3",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "grid grid-cols-2 sm:grid-cols-4 gap-2 sm:gap-3",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                variant: "outline",
                                                size: "sm",
                                                onClick: ()=>handleToolExecution("code_interpreter"),
                                                className: "text-xs justify-center",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Code, {
                                                        className: "h-3 w-3 mr-1"
                                                    }),
                                                    "Code"
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                variant: "outline",
                                                size: "sm",
                                                onClick: ()=>handleMediaGeneration("image"),
                                                className: "text-xs justify-center",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Camera, {
                                                        className: "h-3 w-3 mr-1"
                                                    }),
                                                    "Image"
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                variant: "outline",
                                                size: "sm",
                                                onClick: ()=>handleMediaGeneration("audio"),
                                                className: "text-xs justify-center",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Mic, {
                                                        className: "h-3 w-3 mr-1"
                                                    }),
                                                    "Audio"
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                variant: "outline",
                                                size: "sm",
                                                onClick: ()=>handleToolExecution("web_search"),
                                                className: "text-xs justify-center",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.FileText, {
                                                        className: "h-3 w-3 mr-1"
                                                    }),
                                                    "Search"
                                                ]
                                            })
                                        ]
                                    })
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex-1 flex flex-col min-h-0 overflow-hidden",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "p-2 sm:p-3 border-b border-gray-200 dark:border-gray-700",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center justify-between mb-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                                    className: "font-medium text-sm",
                                                    children: "Workspace Items"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                    variant: "secondary",
                                                    className: "text-xs",
                                                    children: allItems.length
                                                })
                                            ]
                                        }),
                                        selectedItems.size > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex gap-1 mb-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                    variant: "outline",
                                                    size: "sm",
                                                    onClick: ()=>handleItemAction("copy"),
                                                    className: "text-xs px-2 py-1",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Copy, {
                                                        className: "h-3 w-3"
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                    variant: "outline",
                                                    size: "sm",
                                                    onClick: ()=>handleItemAction("share"),
                                                    className: "text-xs px-2 py-1",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Share2, {
                                                        className: "h-3 w-3"
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                    variant: "outline",
                                                    size: "sm",
                                                    onClick: ()=>handleItemAction("delete"),
                                                    className: "text-xs px-2 py-1 text-red-600 hover:text-red-700",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Trash2, {
                                                        className: "h-3 w-3"
                                                    })
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
                                    className: "flex-1 pb-24 sm:pb-8",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "p-2 sm:p-3 space-y-2",
                                        children: allItems.length === 0 ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "text-center py-6 sm:py-8 text-sm text-gray-500 dark:text-gray-400",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Zap, {
                                                    className: "h-8 w-8 mx-auto mb-2 opacity-50"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    children: "No workspace items yet"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "text-xs mt-1",
                                                    children: "Use tools and generate media to see items here"
                                                })
                                            ]
                                        }) : allItems.map((item)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(WorkspaceItemCard, {
                                                item: item,
                                                isSelected: selectedItems.has(item.id),
                                                onSelect: (selected)=>{
                                                    const newSelected = new Set(selectedItems);
                                                    if (selected) {
                                                        newSelected.add(item.id);
                                                    } else {
                                                        newSelected.delete(item.id);
                                                    }
                                                    setSelectedItems(newSelected);
                                                },
                                                onAction: handleItemAction
                                            }, item.id))
                                    })
                                })
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsContent, {
                    value: "ai",
                    className: "flex-1 flex flex-col m-0 min-h-0",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "flex-1",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_aipanelsidebar.AIPanelSidebar, {
                            chatId: chatId || "",
                            isCollapsed: false,
                            onToggle: ()=>onSetPanelState("minimized")
                        })
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsContent, {
                    value: "mcp",
                    className: "flex-1 flex flex-col m-0 min-h-0",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "flex-1 p-2 sm:p-3",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_mcptoolspanel.MCPToolsPanel, {
                            chatId: chatId || ""
                        })
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsContent, {
                    value: "settings",
                    className: "flex-1 flex flex-col m-0 min-h-0",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
                        className: "flex-1 pb-24 sm:pb-8",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "p-2 sm:p-3 space-y-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "rounded-lg border border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900/40 p-2 sm:p-3",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                            className: "font-medium text-sm mb-2 sm:mb-3",
                                            children: "Workspace Settings"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "space-y-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                    className: "flex items-center space-x-2 text-sm",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                            type: "checkbox",
                                                            className: "rounded",
                                                            "aria-label": "Auto-save workspace items",
                                                            checked: settings.autoSaveItems,
                                                            onChange: (e)=>updateSetting("autoSaveItems", e.target.checked)
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                            children: "Auto-save workspace items"
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                    className: "flex items-center space-x-2 text-sm",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                            type: "checkbox",
                                                            className: "rounded",
                                                            "aria-label": "Show item previews",
                                                            checked: settings.showItemPreviews,
                                                            onChange: (e)=>updateSetting("showItemPreviews", e.target.checked)
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                            children: "Show item previews"
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                    className: "flex items-center space-x-2 text-sm",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                            type: "checkbox",
                                                            className: "rounded",
                                                            "aria-label": "Enable real-time collaboration",
                                                            checked: settings.enableRTC,
                                                            onChange: (e)=>updateSetting("enableRTC", e.target.checked)
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                            children: "Enable real-time collaboration"
                                                        })
                                                    ]
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "rounded-lg border border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900/40 p-2 sm:p-3",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                            className: "font-medium text-sm mb-2 sm:mb-3",
                                            children: "Chat Settings"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "space-y-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                    className: "flex items-center space-x-2 text-sm",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                            type: "checkbox",
                                                            className: "rounded",
                                                            "aria-label": "Show typing indicators",
                                                            checked: settings.showTypingIndicators,
                                                            onChange: (e)=>updateSetting("showTypingIndicators", e.target.checked)
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                            children: "Show typing indicators"
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                    className: "flex items-center space-x-2 text-sm",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                            type: "checkbox",
                                                            className: "rounded",
                                                            "aria-label": "Enable message reactions",
                                                            checked: settings.enableReactions,
                                                            onChange: (e)=>updateSetting("enableReactions", e.target.checked)
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                            children: "Enable message reactions"
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                    className: "flex items-center space-x-2 text-sm",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                            type: "checkbox",
                                                            className: "rounded",
                                                            "aria-label": "Auto-scroll to new messages",
                                                            checked: settings.autoScroll,
                                                            onChange: (e)=>updateSetting("autoScroll", e.target.checked)
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                            children: "Auto-scroll to new messages"
                                                        })
                                                    ]
                                                })
                                            ]
                                        })
                                    ]
                                })
                            ]
                        })
                    })
                })
            ]
        })
    });
}
function WorkspaceItemCard({ item, isSelected, onSelect, onAction }) {
    const getItemIcon = ()=>{
        switch(item.type){
            case "code":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Code, {
                    className: "h-4 w-4"
                });
            case "image":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Image, {
                    className: "h-4 w-4"
                });
            case "audio":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Music, {
                    className: "h-4 w-4"
                });
            case "video":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Play, {
                    className: "h-4 w-4"
                });
            case "document":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.FileText, {
                    className: "h-4 w-4"
                });
            case "tool_execution":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Zap, {
                    className: "h-4 w-4"
                });
            default:
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.FileText, {
                    className: "h-4 w-4"
                });
        }
    };
    const getStatusColor = ()=>{
        switch(item.status){
            case "generating":
                return "text-blue-600 dark:text-blue-400";
            case "completed":
                return "text-green-600 dark:text-green-400";
            case "error":
                return "text-red-600 dark:text-red-400";
            default:
                return "text-gray-600 dark:text-gray-400";
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: (0, _utils.cn)("p-2 sm:p-3 border border-gray-200 dark:border-gray-800 rounded-xl bg-white dark:bg-gray-900/40 cursor-pointer transition-colors hover:bg-accent/40", isSelected && "bg-blue-50 dark:bg-blue-900/20 border-blue-300 dark:border-blue-600"),
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "flex items-start space-x-2",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                    type: "checkbox",
                    checked: isSelected,
                    onChange: (e)=>onSelect(e.target.checked),
                    className: "mt-1 rounded"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex-1 min-w-0",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center space-x-2 mb-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: getStatusColor(),
                                    children: getItemIcon()
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "text-xs font-medium truncate",
                                    children: item.type.replace("_", " ").toUpperCase()
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "text-xs text-gray-500 dark:text-gray-400",
                                    children: item.timestamp.toLocaleTimeString([], {
                                        hour: "2-digit",
                                        minute: "2-digit"
                                    })
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                            className: "text-xs text-gray-600 dark:text-gray-400 line-clamp-2",
                            children: typeof item.content === "string" ? item.content : JSON.stringify(item.content).slice(0, 100)
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center space-x-1 mt-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                    variant: "ghost",
                                    size: "sm",
                                    onClick: ()=>onAction("view", item.id),
                                    className: "text-xs px-1 py-0.5 h-auto",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Eye, {
                                        className: "h-3 w-3"
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                    variant: "ghost",
                                    size: "sm",
                                    onClick: ()=>onAction("download", item.id),
                                    className: "text-xs px-1 py-0.5 h-auto",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Download, {
                                        className: "h-3 w-3"
                                    })
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,