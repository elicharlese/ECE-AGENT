70284106fcbb66b3213a27a60a667b65
"use strict";
// Mock the child components
jest.mock("@/components/profile/CheckInOverview", ()=>({
        CheckInOverview: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "checkin-overview",
                children: "Check In Overview"
            })
    }));
jest.mock("@/components/profile/RecentMessages", ()=>({
        RecentMessages: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "recent-messages",
                children: "Recent Messages"
            })
    }));
jest.mock("@/components/profile/DocsSection", ()=>({
        DocsSection: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "docs-section",
                children: "Docs Section"
            })
    }));
jest.mock("@/components/profile/MentionsSection", ()=>({
        MentionsSection: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "mentions-section",
                children: "Mentions Section"
            })
    }));
jest.mock("@/components/profile/CalendarSync", ()=>({
        CalendarSync: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "calendar-sync",
                children: "Calendar Sync"
            })
    }));
jest.mock("@/components/profile/ClickUpIntegration", ()=>({
        ClickUpIntegration: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "clickup-integration",
                children: "ClickUp Integration"
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("@testing-library/react");
const _ProfileDashboard = require("../../components/profile/ProfileDashboard");
describe("ProfileDashboard", ()=>{
    it("renders dashboard header", ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProfileDashboard.ProfileDashboard, {}));
        expect(_react.screen.getByText("Profile Dashboard")).toBeInTheDocument();
        expect(_react.screen.getByText("Your personalized workspace overview and integrations")).toBeInTheDocument();
    });
    it("renders all tab triggers", ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProfileDashboard.ProfileDashboard, {}));
        expect(_react.screen.getByRole("tab", {
            name: /check in/i
        })).toBeInTheDocument();
        expect(_react.screen.getByRole("tab", {
            name: /messages/i
        })).toBeInTheDocument();
        expect(_react.screen.getByRole("tab", {
            name: /documents/i
        })).toBeInTheDocument();
        expect(_react.screen.getByRole("tab", {
            name: /mentions/i
        })).toBeInTheDocument();
        expect(_react.screen.getByRole("tab", {
            name: /calendar/i
        })).toBeInTheDocument();
        expect(_react.screen.getByRole("tab", {
            name: /tasks/i
        })).toBeInTheDocument();
        expect(_react.screen.getByRole("tab", {
            name: /settings/i
        })).toBeInTheDocument();
    });
    it("shows check in overview by default", ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProfileDashboard.ProfileDashboard, {}));
        expect(_react.screen.getByTestId("checkin-overview")).toBeInTheDocument();
        expect(_react.screen.queryByTestId("recent-messages")).not.toBeInTheDocument();
    });
    it("switches tabs correctly", ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProfileDashboard.ProfileDashboard, {}));
        // Click messages tab
        _react.fireEvent.click(_react.screen.getByRole("tab", {
            name: /messages/i
        }));
        expect(_react.screen.getByTestId("recent-messages")).toBeInTheDocument();
        expect(_react.screen.queryByTestId("checkin-overview")).not.toBeInTheDocument();
        // Click docs tab
        _react.fireEvent.click(_react.screen.getByRole("tab", {
            name: /documents/i
        }));
        expect(_react.screen.getByTestId("docs-section")).toBeInTheDocument();
        expect(_react.screen.queryByTestId("recent-messages")).not.toBeInTheDocument();
        // Click mentions tab
        _react.fireEvent.click(_react.screen.getByRole("tab", {
            name: /mentions/i
        }));
        expect(_react.screen.getByTestId("mentions-section")).toBeInTheDocument();
        // Click calendar tab
        _react.fireEvent.click(_react.screen.getByRole("tab", {
            name: /calendar/i
        }));
        expect(_react.screen.getByTestId("calendar-sync")).toBeInTheDocument();
        // Click tasks tab
        _react.fireEvent.click(_react.screen.getByRole("tab", {
            name: /tasks/i
        }));
        expect(_react.screen.getByTestId("clickup-integration")).toBeInTheDocument();
    });
    it("has proper responsive layout classes", ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProfileDashboard.ProfileDashboard, {}));
        const container = _react.screen.getByText("Profile Dashboard").closest("div")?.parentElement;
        expect(container).toHaveClass("w-full", "max-w-7xl", "mx-auto", "space-y-6");
    });
    it("wraps components in error boundaries", ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProfileDashboard.ProfileDashboard, {}));
        // All tab content should be wrapped in ErrorBoundary components
        // This is tested by ensuring the components render without throwing
        expect(_react.screen.getByTestId("checkin-overview")).toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,