3fe3aadbfe933efed00767ba190efc0d
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "MCPToolsPanel", {
    enumerable: true,
    get: function() {
        return MCPToolsPanel;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _lucidereact = require("lucide-react");
const _mcpservice = require("../../services/mcp-service");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function MCPToolsPanel({ chatId }) {
    const [expandedCategory, setExpandedCategory] = (0, _react.useState)("database");
    const [executingTool, setExecutingTool] = (0, _react.useState)(null);
    const [results, setResults] = (0, _react.useState)({});
    const [tools, setTools] = (0, _react.useState)(_mcpservice.mcpService.getTools());
    const [gateways, setGateways] = (0, _react.useState)(_mcpservice.mcpService.getGateways());
    const [githubToken, setGithubToken] = (0, _react.useState)("");
    const [isConnecting, setIsConnecting] = (0, _react.useState)(false);
    const [mcpEvents, setMcpEvents] = (0, _react.useState)([]);
    const [mcpStatus, setMcpStatus] = (0, _react.useState)(()=>_mcpservice.mcpService.getMcpStatus?.() ?? {
            connected: false,
            sessionId: null,
            streaming: false,
            lastEventAt: null
        });
    const [presetInputs, setPresetInputs] = (0, _react.useState)({
        owner: "",
        repo: "",
        base: "main",
        head: "",
        title: "",
        body: "",
        filePath: "",
        ref: "main"
    });
    (0, _react.useEffect)(()=>{
        // Refresh tools and gateways
        setTools(_mcpservice.mcpService.getTools());
        setGateways(_mcpservice.mcpService.getGateways());
        setMcpStatus((prev)=>_mcpservice.mcpService.getMcpStatus?.() ?? prev);
        // Subscribe to MCP streaming events
        const handler = (evt)=>{
            setMcpEvents((prev)=>[
                    ...prev,
                    evt
                ].slice(-200));
            // Update status with last event time
            setMcpStatus((prev)=>_mcpservice.mcpService.getMcpStatus?.() ?? prev);
        };
        _mcpservice.mcpService.onMcpEvent(handler);
        const interval = setInterval(()=>{
            setMcpStatus((prev)=>_mcpservice.mcpService.getMcpStatus?.() ?? prev);
        }, 5000);
        return ()=>{
            _mcpservice.mcpService.offMcpEvent(handler);
            clearInterval(interval);
        };
    }, []);
    const categories = [
        {
            id: "database",
            name: "Database",
            count: tools.filter((t)=>t.category === "database").length
        },
        {
            id: "web",
            name: "Web",
            count: tools.filter((t)=>t.category === "web").length
        },
        {
            id: "git",
            name: "Git",
            count: tools.filter((t)=>t.category === "git").length
        },
        {
            id: "file",
            name: "File",
            count: tools.filter((t)=>t.category === "file").length
        },
        {
            id: "terminal",
            name: "Terminal",
            count: tools.filter((t)=>t.category === "terminal").length
        },
        {
            id: "math",
            name: "Math",
            count: tools.filter((t)=>t.category === "math").length
        },
        {
            id: "github",
            name: "GitHub",
            count: tools.filter((t)=>t.category === "github").length
        }
    ];
    const getToolIcon = (category)=>{
        switch(category){
            case "database":
                return _lucidereact.Database;
            case "web":
                return _lucidereact.Globe;
            case "git":
                return _lucidereact.GitBranch;
            case "file":
                return _lucidereact.FileSearch;
            case "terminal":
                return _lucidereact.Terminal;
            case "math":
                return _lucidereact.Calculator;
            case "github":
                return _lucidereact.Github;
            default:
                return _lucidereact.Globe;
        }
    };
    const filteredTools = tools.filter((tool)=>!expandedCategory || tool.category === expandedCategory);
    const executeTool = async (toolId)=>{
        setExecutingTool(toolId);
        try {
            // Get appropriate params based on tool
            let params = {};
            if (toolId === "calculator") {
                params = {
                    expression: "2 + 2"
                } // Demo expression
                ;
            } else if (toolId === "web-search") {
                params = {
                    query: "latest AI news"
                } // Demo query
                ;
            } else if (toolId === "github-api") {
                params = {
                    endpoint: "/user",
                    method: "GET"
                } // Demo API call
                ;
            } else if (toolId === "github-mcp") {
                params = {
                    request: {
                        type: "ping",
                        ts: Date.now()
                    }
                };
            }
            const result = await _mcpservice.mcpService.executeTool(toolId, params);
            setResults((prev)=>({
                    ...prev,
                    [toolId]: result
                }));
        } catch (error) {
            setResults((prev)=>({
                    ...prev,
                    [toolId]: {
                        success: false,
                        error: error instanceof Error ? error.message : "Execution failed"
                    }
                }));
        } finally{
            setExecutingTool(null);
        }
    };
    const execPreset = async (action)=>{
        const request = (()=>{
            switch(action){
                case "list_repos":
                    return {
                        action: "list_repos"
                    };
                case "open_pr":
                    return {
                        action: "open_pr",
                        params: {
                            owner: presetInputs.owner,
                            repo: presetInputs.repo,
                            base: presetInputs.base,
                            head: presetInputs.head,
                            title: presetInputs.title,
                            body: presetInputs.body
                        }
                    };
                case "review_file":
                    return {
                        action: "review_file",
                        params: {
                            owner: presetInputs.owner,
                            repo: presetInputs.repo,
                            path: presetInputs.filePath,
                            ref: presetInputs.ref
                        }
                    };
            }
        })();
        setExecutingTool("github-mcp");
        try {
            const result = await _mcpservice.mcpService.executeTool("github-mcp", {
                request
            });
            setResults((prev)=>({
                    ...prev,
                    ["github-mcp"]: result
                }));
        } catch (error) {
            setResults((prev)=>({
                    ...prev,
                    ["github-mcp"]: {
                        success: false,
                        error: error instanceof Error ? error.message : "Preset failed"
                    }
                }));
        } finally{
            setExecutingTool(null);
        }
    };
    const formatLastEvent = (ts)=>{
        if (!ts) return "â€”";
        const diff = Date.now() - ts;
        const s = Math.floor(diff / 1000);
        if (s < 60) return `${s}s ago`;
        const m = Math.floor(s / 60);
        if (m < 60) return `${m}m ago`;
        const h = Math.floor(m / 60);
        return `${h}h ago`;
    };
    const toggleTool = (toolId, enabled)=>{
        _mcpservice.mcpService.toggleTool(toolId, enabled);
        setTools(_mcpservice.mcpService.getTools());
    };
    const connectGitHub = async ()=>{
        if (!githubToken.trim()) return;
        setIsConnecting(true);
        try {
            await _mcpservice.mcpService.connectGitHub(githubToken);
            setGateways(_mcpservice.mcpService.getGateways());
            setTools(_mcpservice.mcpService.getTools());
            setGithubToken("");
        } catch (error) {
            console.error("Failed to connect GitHub:", error);
            alert("Failed to connect GitHub. Please check your token.");
        } finally{
            setIsConnecting(false);
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "h-full flex flex-col",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2 mb-4",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Settings, {
                        className: "w-5 h-5 text-blue-600"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                        className: "text-lg font-semibold",
                        children: "MCP Tools"
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex gap-2 mb-4 overflow-x-auto",
                children: categories.map((category)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                        onClick: ()=>setExpandedCategory(category.id),
                        className: `px-3 py-1.5 rounded-lg text-sm font-medium whitespace-nowrap transition-colors ${expandedCategory === category.id ? "bg-blue-100 text-blue-700" : "bg-gray-100 text-gray-600 hover:bg-gray-200"}`,
                        children: [
                            category.name,
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                className: "ml-1 text-xs opacity-70",
                                children: [
                                    "(",
                                    category.count,
                                    ")"
                                ]
                            })
                        ]
                    }, category.id))
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "mb-4 p-3 bg-gray-50 rounded-lg",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                        className: "text-sm font-medium mb-2 flex items-center gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Github, {
                                className: "w-4 h-4"
                            }),
                            "GitHub Gateway"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                        className: "text-xs text-gray-500 mb-2",
                        children: [
                            "Tip: For presets like Open PR or Review File, use a PAT with ",
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "font-medium",
                                children: "repo"
                            }),
                            " scope. Read-only actions may work with minimal scopes."
                        ]
                    }),
                    gateways.find((g)=>g.type === "github" && g.status === "connected") ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center justify-between",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                        className: "text-xs text-green-600 flex items-center gap-1",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Check, {
                                                className: "w-3 h-3"
                                            }),
                                            " Connected"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        onClick: ()=>{
                                            _mcpservice.mcpService.disconnectGitHub();
                                            setGateways(_mcpservice.mcpService.getGateways());
                                            setTools(_mcpservice.mcpService.getTools());
                                            setMcpStatus((prev)=>_mcpservice.mcpService.getMcpStatus?.() ?? prev);
                                        },
                                        className: "text-xs text-red-600 hover:underline",
                                        children: "Disconnect"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "grid grid-cols-2 gap-2 text-xs text-gray-600",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: "font-medium",
                                                children: "Session:"
                                            }),
                                            " ",
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: "font-mono",
                                                children: mcpStatus.sessionId ? String(mcpStatus.sessionId).slice(0, 8) + "â€¦" : "â€”"
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: "font-medium",
                                                children: "Streaming:"
                                            }),
                                            " ",
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: mcpStatus.streaming ? "text-green-700" : "text-gray-600",
                                                children: mcpStatus.streaming ? "Yes" : "No"
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: "font-medium",
                                                children: "Last Event:"
                                            }),
                                            " ",
                                            formatLastEvent(mcpStatus.lastEventAt ?? null)
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2 pt-1",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                        onClick: async ()=>{
                                            try {
                                                await _mcpservice.mcpService.startMcpStreaming?.();
                                            } finally{
                                                setMcpStatus((prev)=>_mcpservice.mcpService.getMcpStatus?.() ?? prev);
                                            }
                                        },
                                        disabled: !!mcpStatus.streaming,
                                        className: "px-2 py-1 text-xs rounded bg-blue-600 text-white disabled:bg-gray-300 flex items-center gap-1",
                                        title: "Start MCP stream",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Play, {
                                                className: "w-3 h-3"
                                            }),
                                            " Start Stream"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                        onClick: ()=>{
                                            _mcpservice.mcpService.stopMcpStreaming?.();
                                            setMcpStatus((prev)=>_mcpservice.mcpService.getMcpStatus?.() ?? prev);
                                        },
                                        disabled: !mcpStatus.streaming,
                                        className: "px-2 py-1 text-xs rounded bg-gray-200 text-gray-800 disabled:bg-gray-100 flex items-center gap-1",
                                        title: "Stop MCP stream (session persists)",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                                className: "w-3 h-3"
                                            }),
                                            " Stop Stream"
                                        ]
                                    })
                                ]
                            })
                        ]
                    }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                type: "password",
                                value: githubToken,
                                onChange: (e)=>setGithubToken(e.target.value),
                                placeholder: "Enter GitHub personal access token",
                                className: "w-full px-2 py-1 text-xs border rounded",
                                disabled: isConnecting
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                onClick: connectGitHub,
                                disabled: !githubToken.trim() || isConnecting,
                                className: "w-full px-2 py-1 text-xs bg-black text-white rounded hover:bg-gray-800 disabled:bg-gray-400",
                                children: isConnecting ? "Connecting..." : "Connect GitHub"
                            })
                        ]
                    })
                ]
            }),
            mcpStatus.connected && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "mb-4 p-3 bg-gray-50 rounded-lg",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                        className: "text-sm font-medium mb-2 flex items-center gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Github, {
                                className: "w-4 h-4"
                            }),
                            " GitHub MCP Presets"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "grid grid-cols-1 gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        onClick: ()=>execPreset("list_repos"),
                                        className: "px-2 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700",
                                        children: "List My Repos"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        className: "text-xs text-gray-500",
                                        children: "Reads your repositories (no write)"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "p-2 bg-white border rounded",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-xs font-medium mb-2",
                                        children: "Open Pull Request"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "grid grid-cols-2 gap-2 mb-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                className: "px-2 py-1 text-xs border rounded",
                                                placeholder: "owner",
                                                value: presetInputs.owner,
                                                onChange: (e)=>setPresetInputs({
                                                        ...presetInputs,
                                                        owner: e.target.value
                                                    })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                className: "px-2 py-1 text-xs border rounded",
                                                placeholder: "repo",
                                                value: presetInputs.repo,
                                                onChange: (e)=>setPresetInputs({
                                                        ...presetInputs,
                                                        repo: e.target.value
                                                    })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                className: "px-2 py-1 text-xs border rounded",
                                                placeholder: "base (default main)",
                                                value: presetInputs.base,
                                                onChange: (e)=>setPresetInputs({
                                                        ...presetInputs,
                                                        base: e.target.value
                                                    })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                className: "px-2 py-1 text-xs border rounded",
                                                placeholder: "head (branch)",
                                                value: presetInputs.head,
                                                onChange: (e)=>setPresetInputs({
                                                        ...presetInputs,
                                                        head: e.target.value
                                                    })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                className: "px-2 py-1 text-xs border rounded col-span-2",
                                                placeholder: "title",
                                                value: presetInputs.title,
                                                onChange: (e)=>setPresetInputs({
                                                        ...presetInputs,
                                                        title: e.target.value
                                                    })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                className: "px-2 py-1 text-xs border rounded col-span-2",
                                                placeholder: "body (optional)",
                                                value: presetInputs.body,
                                                onChange: (e)=>setPresetInputs({
                                                        ...presetInputs,
                                                        body: e.target.value
                                                    })
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        onClick: ()=>execPreset("open_pr"),
                                        disabled: !presetInputs.owner || !presetInputs.repo || !presetInputs.head || !presetInputs.title,
                                        className: "px-2 py-1 text-xs bg-emerald-600 text-white rounded hover:bg-emerald-700 disabled:bg-gray-300",
                                        children: "Open PR"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "p-2 bg-white border rounded",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-xs font-medium mb-2",
                                        children: "Review File"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "grid grid-cols-2 gap-2 mb-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                className: "px-2 py-1 text-xs border rounded",
                                                placeholder: "owner",
                                                value: presetInputs.owner,
                                                onChange: (e)=>setPresetInputs({
                                                        ...presetInputs,
                                                        owner: e.target.value
                                                    })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                className: "px-2 py-1 text-xs border rounded",
                                                placeholder: "repo",
                                                value: presetInputs.repo,
                                                onChange: (e)=>setPresetInputs({
                                                        ...presetInputs,
                                                        repo: e.target.value
                                                    })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                className: "px-2 py-1 text-xs border rounded col-span-2",
                                                placeholder: "path (e.g., src/index.ts)",
                                                value: presetInputs.filePath,
                                                onChange: (e)=>setPresetInputs({
                                                        ...presetInputs,
                                                        filePath: e.target.value
                                                    })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                className: "px-2 py-1 text-xs border rounded col-span-2",
                                                placeholder: "ref (branch/tag/sha)",
                                                value: presetInputs.ref,
                                                onChange: (e)=>setPresetInputs({
                                                        ...presetInputs,
                                                        ref: e.target.value
                                                    })
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        onClick: ()=>execPreset("review_file"),
                                        disabled: !presetInputs.owner || !presetInputs.repo || !presetInputs.filePath,
                                        className: "px-2 py-1 text-xs bg-indigo-600 text-white rounded hover:bg-indigo-700 disabled:bg-gray-300",
                                        children: "Review File"
                                    })
                                ]
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex-1 overflow-y-auto",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "space-y-2",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                                    className: "text-sm font-medium mb-2 flex items-center gap-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Github, {
                                            className: "w-4 h-4"
                                        }),
                                        " Tools"
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "grid grid-cols-2 gap-3",
                                    children: filteredTools.map((tool)=>{
                                        const Icon = getToolIcon(tool.category);
                                        const isDisabled = !tool.enabled;
                                        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            onClick: ()=>!isDisabled && executeTool(tool.id),
                                            className: `p-3 rounded-lg border transition-all ${isDisabled ? "border-gray-200 bg-gray-50 opacity-50 cursor-not-allowed" : "border-gray-200 hover:border-gray-300 hover:bg-gray-50 cursor-pointer"}`,
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex flex-col items-center text-center",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                        className: "p-2 rounded-lg mb-2 bg-gray-100",
                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(Icon, {
                                                            className: `w-6 h-6 ${isDisabled ? "text-gray-400" : "text-gray-600"}`
                                                        })
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                                        className: "text-sm font-medium text-gray-900",
                                                        children: tool.name
                                                    })
                                                ]
                                            })
                                        }, tool.id);
                                    })
                                })
                            ]
                        })
                    }),
                    executingTool && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "mt-4 p-3 bg-blue-50 rounded-lg border border-blue-200",
                        children: (()=>{
                            const tool = tools.find((t)=>t.id === executingTool);
                            if (!tool) return null;
                            const Icon = getToolIcon(tool.category);
                            return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center gap-2 mb-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(Icon, {
                                                className: "w-5 h-5 text-blue-600"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                                className: "font-medium text-gray-900",
                                                children: tool.name
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-sm text-gray-600 mb-3",
                                        children: tool.description
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        className: "w-full px-3 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 transition-colors",
                                        children: "Use Tool"
                                    })
                                ]
                            });
                        })()
                    }),
                    mcpEvents.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "mt-4 p-3 bg-gray-50 rounded-lg border border-gray-200",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2 mb-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Github, {
                                        className: "w-4 h-4 text-gray-700"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                        className: "text-sm font-medium",
                                        children: "GitHub MCP Stream"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        onClick: ()=>setMcpEvents([]),
                                        className: "ml-auto text-xs px-2 py-1 rounded bg-gray-200 hover:bg-gray-300",
                                        children: "Clear"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("pre", {
                                className: "text-xs whitespace-pre-wrap max-h-56 overflow-auto bg-white p-2 rounded border",
                                children: mcpEvents.join("\n\n")
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "mt-4 pt-4 border-t border-gray-200",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "text-xs text-gray-500 mb-2",
                        children: "Connected MCP Servers: 3"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        className: "w-full px-4 py-2 bg-gray-100 text-gray-700 text-sm rounded-lg hover:bg-gray-200 transition-colors",
                        children: "Configure MCP Tools"
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,