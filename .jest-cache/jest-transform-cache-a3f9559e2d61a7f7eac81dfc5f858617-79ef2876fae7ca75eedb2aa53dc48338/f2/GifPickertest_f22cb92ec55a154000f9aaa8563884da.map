{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/__tests__/components/GifPicker.test.tsx"],"sourcesContent":["import React from 'react'\nimport { screen, fireEvent, waitFor, act } from '@testing-library/react'\nimport { GifPicker } from '@/components/chat/gif-picker'\nimport { renderWithAct, advanceTimersBy } from '../utils/test-utils'\n\n// Popover relies on layout; jsdom is fine with clicking the trigger to render content\n\ndescribe('GifPicker', () => {\n  beforeEach(() => {\n    jest.useFakeTimers()\n  })\n\n  afterEach(() => {\n    jest.useRealTimers()\n  })\n\n  test('loads trending on open, then switches category to Reactions', async () => {\n    const onGifSelect = jest.fn()\n    await renderWithAct(<GifPicker onGifSelect={onGifSelect} />)\n\n    // Open the GIF picker popover\n    fireEvent.click(screen.getByRole('button', { name: /open gif picker/i }))\n\n    // Initial mount triggers loading\n    expect(await screen.findByText(/loading gifs/i)).toBeInTheDocument()\n    await act(async () => {\n      jest.advanceTimersByTime(500)\n    })\n\n    // After initial load, some trending GIFs present (e.g., Happy Dance)\n    expect(await screen.findByTitle('Happy Dance')).toBeInTheDocument()\n\n    // Switch to Reactions category\n    fireEvent.click(screen.getByRole('button', { name: /reactions/i }))\n\n    // Should show loading again for category fetch\n    expect(await screen.findByText(/loading gifs/i)).toBeInTheDocument()\n    await act(async () => {\n      jest.advanceTimersByTime(500)\n    })\n\n    // Reactions should include Thumbs Up, High Five, Mind Blown, Celebration\n    expect(await screen.findByTitle('Thumbs Up')).toBeInTheDocument()\n    expect(screen.getByTitle('High Five')).toBeInTheDocument()\n    expect(screen.getByTitle('Mind Blown')).toBeInTheDocument()\n    expect(screen.getByTitle('Celebration')).toBeInTheDocument()\n\n    // A non-reaction like \"Happy Dance\" should generally be filtered out\n    expect(screen.queryByTitle('Happy Dance')).not.toBeInTheDocument()\n  })\n\n  test('debounces search input (300ms) then loads results (500ms)', async () => {\n    const onGifSelect = jest.fn()\n    await renderWithAct(<GifPicker onGifSelect={onGifSelect} />)\n\n    // Open\n    fireEvent.click(screen.getByRole('button', { name: /open gif picker/i }))\n\n    // Initial load\n    expect(await screen.findByText(/loading gifs/i)).toBeInTheDocument()\n    await advanceTimersBy(500)\n\n    // Type a query that should match \"Laughing\"\n    const input = await screen.findByPlaceholderText(/search gifs/i)\n    fireEvent.change(input, { target: { value: 'laugh' } })\n\n    // Before 300ms debounce, grid from initial load still present\n    await advanceTimersBy(299)\n    expect(screen.getByTitle('Happy Dance')).toBeInTheDocument()\n\n    // Cross debounce and also complete the simulated network delay\n    await advanceTimersBy(1) // complete 300ms debounce\n    await advanceTimersBy(500) // complete 500ms API delay\n\n    // Expect matching GIF(s) for 'laugh'\n    expect(await screen.findByTitle('Laughing')).toBeInTheDocument()\n\n    // Common non-matching GIF should be gone\n    expect(screen.queryByTitle('Thumbs Up')).not.toBeInTheDocument()\n  })\n})\n"],"names":["describe","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","test","onGifSelect","fn","renderWithAct","GifPicker","fireEvent","click","screen","getByRole","name","expect","findByText","toBeInTheDocument","act","advanceTimersByTime","findByTitle","getByTitle","queryByTitle","not","advanceTimersBy","input","findByPlaceholderText","change","target","value"],"mappings":";;;;;8DAAkB;wBAC8B;2BACtB;2BACqB;;;;;;AAE/C,sFAAsF;AAEtFA,SAAS,aAAa;IACpBC,WAAW;QACTC,KAAKC,aAAa;IACpB;IAEAC,UAAU;QACRF,KAAKG,aAAa;IACpB;IAEAC,KAAK,+DAA+D;QAClE,MAAMC,cAAcL,KAAKM,EAAE;QAC3B,MAAMC,IAAAA,wBAAa,gBAAC,qBAACC,oBAAS;YAACH,aAAaA;;QAE5C,8BAA8B;QAC9BI,iBAAS,CAACC,KAAK,CAACC,cAAM,CAACC,SAAS,CAAC,UAAU;YAAEC,MAAM;QAAmB;QAEtE,iCAAiC;QACjCC,OAAO,MAAMH,cAAM,CAACI,UAAU,CAAC,kBAAkBC,iBAAiB;QAClE,MAAMC,IAAAA,WAAG,EAAC;YACRjB,KAAKkB,mBAAmB,CAAC;QAC3B;QAEA,qEAAqE;QACrEJ,OAAO,MAAMH,cAAM,CAACQ,WAAW,CAAC,gBAAgBH,iBAAiB;QAEjE,+BAA+B;QAC/BP,iBAAS,CAACC,KAAK,CAACC,cAAM,CAACC,SAAS,CAAC,UAAU;YAAEC,MAAM;QAAa;QAEhE,+CAA+C;QAC/CC,OAAO,MAAMH,cAAM,CAACI,UAAU,CAAC,kBAAkBC,iBAAiB;QAClE,MAAMC,IAAAA,WAAG,EAAC;YACRjB,KAAKkB,mBAAmB,CAAC;QAC3B;QAEA,yEAAyE;QACzEJ,OAAO,MAAMH,cAAM,CAACQ,WAAW,CAAC,cAAcH,iBAAiB;QAC/DF,OAAOH,cAAM,CAACS,UAAU,CAAC,cAAcJ,iBAAiB;QACxDF,OAAOH,cAAM,CAACS,UAAU,CAAC,eAAeJ,iBAAiB;QACzDF,OAAOH,cAAM,CAACS,UAAU,CAAC,gBAAgBJ,iBAAiB;QAE1D,qEAAqE;QACrEF,OAAOH,cAAM,CAACU,YAAY,CAAC,gBAAgBC,GAAG,CAACN,iBAAiB;IAClE;IAEAZ,KAAK,6DAA6D;QAChE,MAAMC,cAAcL,KAAKM,EAAE;QAC3B,MAAMC,IAAAA,wBAAa,gBAAC,qBAACC,oBAAS;YAACH,aAAaA;;QAE5C,OAAO;QACPI,iBAAS,CAACC,KAAK,CAACC,cAAM,CAACC,SAAS,CAAC,UAAU;YAAEC,MAAM;QAAmB;QAEtE,eAAe;QACfC,OAAO,MAAMH,cAAM,CAACI,UAAU,CAAC,kBAAkBC,iBAAiB;QAClE,MAAMO,IAAAA,0BAAe,EAAC;QAEtB,4CAA4C;QAC5C,MAAMC,QAAQ,MAAMb,cAAM,CAACc,qBAAqB,CAAC;QACjDhB,iBAAS,CAACiB,MAAM,CAACF,OAAO;YAAEG,QAAQ;gBAAEC,OAAO;YAAQ;QAAE;QAErD,8DAA8D;QAC9D,MAAML,IAAAA,0BAAe,EAAC;QACtBT,OAAOH,cAAM,CAACS,UAAU,CAAC,gBAAgBJ,iBAAiB;QAE1D,+DAA+D;QAC/D,MAAMO,IAAAA,0BAAe,EAAC,GAAG,0BAA0B;;QACnD,MAAMA,IAAAA,0BAAe,EAAC,KAAK,2BAA2B;;QAEtD,qCAAqC;QACrCT,OAAO,MAAMH,cAAM,CAACQ,WAAW,CAAC,aAAaH,iBAAiB;QAE9D,yCAAyC;QACzCF,OAAOH,cAAM,CAACU,YAAY,CAAC,cAAcC,GAAG,CAACN,iBAAiB;IAChE;AACF"}