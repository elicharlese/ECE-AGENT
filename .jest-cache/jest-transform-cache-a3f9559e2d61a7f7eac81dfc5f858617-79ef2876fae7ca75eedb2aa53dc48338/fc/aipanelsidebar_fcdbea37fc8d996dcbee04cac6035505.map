{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/components/ai/ai-panel-sidebar.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { \n  Bot, \n  StickyNote, \n  MessageSquare, \n  Settings, \n  Pin,\n  Hash,\n  Users,\n  Sparkles,\n  ChevronRight,\n  ChevronLeft,\n  FileText,\n  GitBranch,\n  Bug,\n  CheckSquare,\n  AlertCircle\n} from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { cn } from \"@/lib/utils\"\n\ninterface AIPanelSidebarProps {\n  chatId: string\n  isCollapsed: boolean\n  onToggle: () => void\n}\n\ninterface Patch {\n  id: string\n  number: number\n  title: string\n  status: \"draft\" | \"in-progress\" | \"review\" | \"completed\"\n  checklist: string[]\n  completedItems: string[]\n  summary: string\n  timestamp: Date\n}\n\ninterface Note {\n  id: string\n  content: string\n  type: \"feature\" | \"bug\" | \"task\" | \"reminder\"\n  isPinned: boolean\n  timestamp: Date\n  linkedPatchId?: string\n}\n\nexport function AiToolsSidebar({ activeTab }: { activeTab: 'agents' | 'mcp' }) {\n  return (\n    <div className=\"p-4\">\n      {activeTab === 'agents' ? (\n        <div>\n          <h3 className=\"font-semibold mb-4\">AI Agents</h3>\n          <p className=\"text-sm text-gray-600\">Agent management coming soon...</p>\n        </div>\n      ) : (\n        <div>\n          <h3 className=\"font-semibold mb-4\">MCP Tools</h3>\n          <p className=\"text-sm text-gray-600\">MCP tools coming soon...</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport function AIPanelSidebar({ chatId, isCollapsed, onToggle }: AIPanelSidebarProps) {\n  const [activeTab, setActiveTab] = useState(\"patches\")\n  const [patches, setPatches] = useState<Patch[]>([])\n  const [notes, setNotes] = useState<Note[]>([])\n  const [aiMode, setAIMode] = useState<\"standard\" | \"enhanced\" | \"autonomous\">(\"enhanced\")\n  const [combinationChatEnabled, setCombinationChatEnabled] = useState(true)\n  const [newNote, setNewNote] = useState(\"\")\n\n  useEffect(() => {\n    // Load patches from workspace\n    const mockPatches: Patch[] = [\n      {\n        id: \"patch-1\",\n        number: 1,\n        title: \"UI Enhancement\",\n        status: \"in-progress\",\n        checklist: [\n          \"Build AI Panel sidebar\",\n          \"Add patches management\",\n          \"Implement notes system\",\n          \"Add pinned messages\"\n        ],\n        completedItems: [\"Build AI Panel sidebar\"],\n        summary: \"Implementing comprehensive UI improvements for messaging application\",\n        timestamp: new Date()\n      },\n      {\n        id: \"patch-2\",\n        number: 2,\n        title: \"Mobile Support\",\n        status: \"draft\",\n        checklist: [\n          \"Setup Expo for mobile\",\n          \"Build iOS app\",\n          \"Build Android app\",\n          \"Implement watch app\"\n        ],\n        completedItems: [],\n        summary: \"Adding cross-platform mobile support with Expo\",\n        timestamp: new Date()\n      }\n    ]\n    setPatches(mockPatches)\n\n    // Load notes\n    const mockNotes: Note[] = [\n      {\n        id: \"note-1\",\n        content: \"Remember to implement WebSocket for real-time updates\",\n        type: \"reminder\",\n        isPinned: true,\n        timestamp: new Date()\n      },\n      {\n        id: \"note-2\",\n        content: \"Group chat functionality needs message threading\",\n        type: \"feature\",\n        isPinned: false,\n        timestamp: new Date(),\n        linkedPatchId: \"patch-1\"\n      }\n    ]\n    setNotes(mockNotes)\n  }, [])\n\n  const addNote = () => {\n    if (!newNote.trim()) return\n    \n    const note: Note = {\n      id: `note-${Date.now()}`,\n      content: newNote,\n      type: \"task\",\n      isPinned: false,\n      timestamp: new Date()\n    }\n    \n    setNotes(prev => [note, ...prev])\n    setNewNote(\"\")\n  }\n\n  const toggleNotePin = (noteId: string) => {\n    setNotes(prev => \n      prev.map(note => \n        note.id === noteId \n          ? { ...note, isPinned: !note.isPinned }\n          : note\n      )\n    )\n  }\n\n  const getStatusColor = (status: Patch[\"status\"]) => {\n    const colors = {\n      draft: \"bg-gray-500\",\n      \"in-progress\": \"bg-blue-500\",\n      review: \"bg-yellow-500\",\n      completed: \"bg-green-500\"\n    }\n    return colors[status]\n  }\n\n  const getNoteIcon = (type: Note[\"type\"]) => {\n    const icons = {\n      feature: <Sparkles className=\"h-3 w-3\" />,\n      bug: <Bug className=\"h-3 w-3\" />,\n      task: <CheckSquare className=\"h-3 w-3\" />,\n      reminder: <AlertCircle className=\"h-3 w-3\" />\n    }\n    return icons[type]\n  }\n\n  if (isCollapsed) {\n    return (\n      <div className=\"h-full bg-white dark:bg-gray-800 border-l border-transparent w-12 flex flex-col items-center py-3\">\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={onToggle}\n          className=\"mb-4\"\n        >\n          <ChevronLeft className=\"h-4 w-4\" />\n        </Button>\n        <div className=\"flex flex-col gap-2\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"w-9 h-9 p-0\"\n            onClick={() => {\n              onToggle()\n              setActiveTab(\"patches\")\n            }}\n          >\n            <GitBranch className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"w-9 h-9 p-0\"\n            onClick={() => {\n              onToggle()\n              setActiveTab(\"notes\")\n            }}\n          >\n            <StickyNote className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"w-9 h-9 p-0\"\n            onClick={() => {\n              onToggle()\n              setActiveTab(\"messages\")\n            }}\n          >\n            <MessageSquare className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"w-9 h-9 p-0\"\n            onClick={() => {\n              onToggle()\n              setActiveTab(\"settings\")\n            }}\n          >\n            <Settings className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"h-full bg-white dark:bg-gray-800 border-l border-transparent flex flex-col w-80\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-transparent flex items-center justify-between\">\n        <div className=\"flex items-center gap-2\">\n          <Bot className=\"h-5 w-5 text-blue-500\" />\n          <h2 className=\"font-semibold\">AI Panel</h2>\n        </div>\n        <Button variant=\"ghost\" size=\"sm\" onClick={onToggle}>\n          <ChevronRight className=\"h-4 w-4\" />\n        </Button>\n      </div>\n\n      {/* Tabs */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"flex-1 flex flex-col\">\n        <TabsList className=\"grid w-full grid-cols-4 gap-1 sm:gap-2 rounded-xl bg-gray-50 dark:bg-gray-800/50 p-1 ring-1 ring-gray-200 dark:ring-gray-700 px-4\">\n          <TabsTrigger value=\"patches\" aria-label=\"Patches\" title=\"Patches\" className=\"text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm\">Patches</TabsTrigger>\n          <TabsTrigger value=\"notes\" aria-label=\"Notes\" title=\"Notes\" className=\"text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm\">Notes</TabsTrigger>\n          <TabsTrigger value=\"messages\" aria-label=\"Messages\" title=\"Messages\" className=\"text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm\">Messages</TabsTrigger>\n          <TabsTrigger value=\"settings\" aria-label=\"Settings\" title=\"Settings\" className=\"text-xs truncate min-h-11 rounded-lg px-2 sm:px-3 transition-colors motion-reduce:transition-none hover:bg-white/60 dark:hover:bg-gray-900/60 data-[state=active]:bg-white dark:data-[state=active]:bg-gray-900 data-[state=active]:shadow-sm\">Settings</TabsTrigger>\n        </TabsList>\n\n        <ScrollArea className=\"flex-1 pb-24 sm:pb-8\">\n          {/* Patches Tab */}\n          <TabsContent value=\"patches\" className=\"px-4 space-y-3\">\n            <div className=\"space-y-3\">\n              {patches.map(patch => (\n                <Card key={patch.id} className=\"p-3\">\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        Patch {patch.number}\n                      </Badge>\n                      <div className={cn(\"w-2 h-2 rounded-full\", getStatusColor(patch.status))} />\n                    </div>\n                    <span className=\"text-xs text-gray-500\">\n                      {patch.timestamp.toLocaleDateString()}\n                    </span>\n                  </div>\n                  <h4 className=\"font-medium text-sm mb-1\">{patch.title}</h4>\n                  <p className=\"text-xs text-gray-600 dark:text-gray-400 mb-2\">\n                    {patch.summary}\n                  </p>\n                  <div className=\"space-y-1\">\n                    {patch.checklist.slice(0, 3).map((item, idx) => (\n                      <div key={idx} className=\"flex items-center gap-2 text-xs\">\n                        <CheckSquare \n                          className={cn(\n                            \"h-3 w-3\",\n                            patch.completedItems.includes(item) \n                              ? \"text-green-500\" \n                              : \"text-gray-400\"\n                          )}\n                        />\n                        <span className={cn(\n                          patch.completedItems.includes(item) && \"line-through text-gray-500\"\n                        )}>\n                          {item}\n                        </span>\n                      </div>\n                    ))}\n                    {patch.checklist.length > 3 && (\n                      <span className=\"text-xs text-gray-500\">\n                        +{patch.checklist.length - 3} more items\n                      </span>\n                    )}\n                  </div>\n                </Card>\n              ))}\n            </div>\n            <Button size=\"sm\" variant=\"outline\" className=\"w-full\">\n              View All Patches\n            </Button>\n          </TabsContent>\n\n          {/* Notes Tab */}\n          <TabsContent value=\"notes\" className=\"px-4 space-y-3\">\n            <div className=\"space-y-2\">\n              <Textarea\n                value={newNote}\n                onChange={(e) => setNewNote(e.target.value)}\n                placeholder=\"Add a quick note...\"\n                className=\"min-h-[80px] text-sm\"\n              />\n              <Button \n                size=\"sm\" \n                onClick={addNote}\n                disabled={!newNote.trim()}\n                className=\"w-full\"\n              >\n                Add Note\n              </Button>\n            </div>\n            <Separator />\n            <div className=\"space-y-2\">\n              {notes\n                .sort((a, b) => (b.isPinned ? 1 : 0) - (a.isPinned ? 1 : 0))\n                .map(note => (\n                  <Card key={note.id} className=\"p-3\">\n                    <div className=\"flex items-start justify-between mb-1\">\n                      <div className=\"flex items-center gap-2\">\n                        {getNoteIcon(note.type)}\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {note.type}\n                        </Badge>\n                        {note.isPinned && <Pin className=\"h-3 w-3 text-yellow-500\" />}\n                      </div>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"h-6 w-6 p-0\"\n                        onClick={() => toggleNotePin(note.id)}\n                      >\n                        <Pin className={cn(\n                          \"h-3 w-3\",\n                          note.isPinned ? \"text-yellow-500\" : \"text-gray-400\"\n                        )} />\n                      </Button>\n                    </div>\n                    <p className=\"text-sm mb-1\">{note.content}</p>\n                    {note.linkedPatchId && (\n                      <Badge variant=\"secondary\" className=\"text-xs\">\n                        Linked to {note.linkedPatchId}\n                      </Badge>\n                    )}\n                    <span className=\"text-xs text-gray-500 block mt-1\">\n                      {note.timestamp.toLocaleTimeString()}\n                    </span>\n                  </Card>\n                ))}\n            </div>\n          </TabsContent>\n\n          {/* Messages Tab */}\n          <TabsContent value=\"messages\" className=\"px-4 space-y-3\">\n            <Card className=\"p-3\">\n              <h4 className=\"font-medium text-sm mb-2 flex items-center gap-2\">\n                <Pin className=\"h-3 w-3\" />\n                Pinned Messages\n              </h4>\n              <div className=\"space-y-2\">\n                <div className=\"text-sm p-2 bg-gray-50 dark:bg-gray-700 rounded\">\n                  <p className=\"font-medium text-xs mb-1\">Sarah Wilson</p>\n                  <p className=\"text-xs\">Don&apos;t forget about the team meeting at 2 PM!</p>\n                </div>\n                <div className=\"text-sm p-2 bg-gray-50 dark:bg-gray-700 rounded\">\n                  <p className=\"font-medium text-xs mb-1\">You</p>\n                  <p className=\"text-xs\">Project repository link: github.com/example/repo</p>\n                </div>\n              </div>\n            </Card>\n            \n            <Card className=\"p-3\">\n              <h4 className=\"font-medium text-sm mb-2 flex items-center gap-2\">\n                <Hash className=\"h-3 w-3\" />\n                Group Chats\n              </h4>\n              <div className=\"space-y-2\">\n                <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\">\n                  <Users className=\"h-3 w-3 mr-2\" />\n                  Development Team\n                  <Badge variant=\"secondary\" className=\"ml-auto\">12</Badge>\n                </Button>\n                <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\">\n                  <Users className=\"h-3 w-3 mr-2\" />\n                  Design Sprint\n                  <Badge variant=\"secondary\" className=\"ml-auto\">5</Badge>\n                </Button>\n              </div>\n            </Card>\n          </TabsContent>\n\n          {/* Settings Tab */}\n          <TabsContent value=\"settings\" className=\"px-4 space-y-3\">\n            <Card className=\"p-3\">\n              <h4 className=\"font-medium text-sm mb-3\">AI Mode</h4>\n              <div className=\"space-y-2\">\n                <label className=\"flex items-center justify-between\">\n                  <span className=\"text-sm\">Standard</span>\n                  <input\n                    type=\"radio\"\n                    name=\"aiMode\"\n                    checked={aiMode === \"standard\"}\n                    onChange={() => setAIMode(\"standard\")}\n                    className=\"h-4 w-4\"\n                  />\n                </label>\n                <label className=\"flex items-center justify-between\">\n                  <span className=\"text-sm\">Enhanced</span>\n                  <input\n                    type=\"radio\"\n                    name=\"aiMode\"\n                    checked={aiMode === \"enhanced\"}\n                    onChange={() => setAIMode(\"enhanced\")}\n                    className=\"h-4 w-4\"\n                  />\n                </label>\n                <label className=\"flex items-center justify-between\">\n                  <span className=\"text-sm\">Autonomous</span>\n                  <input\n                    type=\"radio\"\n                    name=\"aiMode\"\n                    checked={aiMode === \"autonomous\"}\n                    onChange={() => setAIMode(\"autonomous\")}\n                    className=\"h-4 w-4\"\n                  />\n                </label>\n              </div>\n            </Card>\n\n            <Card className=\"p-3\">\n              <h4 className=\"font-medium text-sm mb-3\">Chat Features</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm\">Combination Chats</span>\n                  <Switch\n                    checked={combinationChatEnabled}\n                    onCheckedChange={setCombinationChatEnabled}\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm\">Tool Integration</span>\n                  <Switch defaultChecked />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm\">Agent Collaboration</span>\n                  <Switch defaultChecked />\n                </div>\n              </div>\n            </Card>\n\n            <Card className=\"p-3\">\n              <h4 className=\"font-medium text-sm mb-3\">Agent Settings</h4>\n              <div className=\"space-y-2\">\n                <Input placeholder=\"Agent Response Timeout\" type=\"number\" defaultValue=\"30\" />\n                <Input placeholder=\"Max Agents per Chat\" type=\"number\" defaultValue=\"5\" />\n                <Button size=\"sm\" variant=\"outline\" className=\"w-full\">\n                  Configure Agent Permissions\n                </Button>\n              </div>\n            </Card>\n          </TabsContent>\n        </ScrollArea>\n      </Tabs>\n    </div>\n  )\n}\n"],"names":["AIPanelSidebar","AiToolsSidebar","activeTab","div","className","h3","p","chatId","isCollapsed","onToggle","setActiveTab","useState","patches","setPatches","notes","setNotes","aiMode","setAIMode","combinationChatEnabled","setCombinationChatEnabled","newNote","setNewNote","useEffect","mockPatches","id","number","title","status","checklist","completedItems","summary","timestamp","Date","mockNotes","content","type","isPinned","linkedPatchId","addNote","trim","note","now","prev","toggleNotePin","noteId","map","getStatusColor","colors","draft","review","completed","getNoteIcon","icons","feature","Sparkles","bug","Bug","task","CheckSquare","reminder","AlertCircle","Button","variant","size","onClick","ChevronLeft","GitBranch","StickyNote","MessageSquare","Settings","Bot","h2","ChevronRight","Tabs","value","onValueChange","TabsList","TabsTrigger","aria-label","ScrollArea","TabsContent","patch","Card","Badge","cn","span","toLocaleDateString","h4","slice","item","idx","includes","length","Textarea","onChange","e","target","placeholder","disabled","Separator","sort","a","b","Pin","toLocaleTimeString","Hash","Users","label","input","name","checked","Switch","onCheckedChange","defaultChecked","Input","defaultValue"],"mappings":"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"}