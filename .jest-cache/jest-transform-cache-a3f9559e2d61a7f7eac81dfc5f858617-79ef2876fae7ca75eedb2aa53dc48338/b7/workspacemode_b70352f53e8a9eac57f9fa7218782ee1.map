{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/components/workspace/workspace-mode.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useCallback, useMemo } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Panel, PanelGroup, PanelResizeHandle } from \"react-resizable-panels\"\nimport { \n  MessageSquare, \n  Video, \n  Phone, \n  Code, \n  Image, \n  Music, \n  FileText, \n  Play, \n  Pause, \n  Square,\n  Maximize2,\n  Minimize2,\n  Users,\n  Bot,\n  Zap,\n  Eye,\n  Download,\n  Share2\n} from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { useWebSocket } from \"@/hooks/use-websocket\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { trackEvent } from \"@/lib/analytics\"\n\n// Import existing components\nimport { MessageBubble } from \"../chat/message-bubble\"\nimport { DesktopMessageInput } from \"../chat/DesktopMessageInput\"\nimport { MobileMessageInput } from \"../chat/mobile-message-input\"\nimport { PhoneCallUI } from \"../calls/phone-call-ui\"\nimport { VideoCallUI } from \"../calls/video-call-ui\"\nimport { TypingIndicator } from \"../chat/typing-indicator\"\n\ninterface WorkspaceItem {\n  id: string\n  type: 'message' | 'code' | 'image' | 'audio' | 'video' | 'document' | 'tool_execution'\n  content: any\n  timestamp: Date\n  author: string\n  status?: 'generating' | 'completed' | 'error'\n  metadata?: Record<string, any>\n}\n\ninterface WorkspaceModeProps {\n  chatId: string\n  messages: any[]\n  onSendMessage: () => void\n  onEditMessage: (id: string, content: string) => void\n  typingUsers: Record<string, { name: string; timestamp: number }>\n  isConnected: boolean\n}\n\nexport function WorkspaceMode({\n  chatId,\n  messages,\n  onSendMessage,\n  onEditMessage,\n  typingUsers,\n  isConnected\n}: WorkspaceModeProps) {\n  const [activeMode, setActiveMode] = useState<'unified' | 'split'>('unified')\n  const [activeTab, setActiveTab] = useState<'chat' | 'media' | 'tools'>('chat')\n  const [isVideoCallOpen, setIsVideoCallOpen] = useState(false)\n  const [isPhoneCallOpen, setIsPhoneCallOpen] = useState(false)\n  const [workspaceItems, setWorkspaceItems] = useState<WorkspaceItem[]>([])\n  const [activeTools, setActiveTools] = useState<string[]>([])\n  const [mediaGenerations, setMediaGenerations] = useState<any[]>([])\n  const isMobile = useIsMobile()\n\n  // Convert messages to workspace items\n  const workspaceData = useMemo(() => {\n    const items: WorkspaceItem[] = messages.map(msg => ({\n      id: msg.id,\n      type: 'message',\n      content: msg.content,\n      timestamp: new Date(msg.timestamp),\n      author: msg.senderName || (msg.isOwn ? 'You' : 'Other'),\n      metadata: {\n        isOwn: !!msg.isOwn,\n        senderId: msg.senderId,\n        senderName: msg.senderName,\n        type: msg.type,\n        mediaUrl: msg.mediaUrl,\n        fileName: msg.fileName,\n        fileSize: msg.fileSize,\n        isPinned: msg.isPinned,\n        isLiked: msg.isLiked,\n        likeCount: msg.likeCount,\n        gifData: msg.gifData,\n      }\n    }))\n\n    // Add media generations and tool executions\n    return [...items, ...workspaceItems].sort((a, b) => \n      a.timestamp.getTime() - b.timestamp.getTime()\n    )\n  }, [messages, workspaceItems])\n\n  // Handle tool execution simulation\n  const executeToolAction = useCallback(async (toolType: string, params: any) => {\n    const toolId = `tool_${Date.now()}`\n    \n    // Add generating item\n    const generatingItem: WorkspaceItem = {\n      id: toolId,\n      type: 'tool_execution',\n      content: { toolType, params, output: null },\n      timestamp: new Date(),\n      author: 'system',\n      status: 'generating'\n    }\n    \n    setWorkspaceItems(prev => [...prev, generatingItem])\n    setActiveTools(prev => [...prev, toolId])\n\n    // Track analytics\n    await trackEvent({\n      name: 'workspace_tool_execution',\n      properties: { chatId, toolType, params }\n    })\n\n    // Simulate tool execution\n    setTimeout(() => {\n      setWorkspaceItems(prev => prev.map(item => \n        item.id === toolId \n          ? { ...item, status: 'completed', content: { ...item.content, output: `Generated ${toolType} result` }}\n          : item\n      ))\n      setActiveTools(prev => prev.filter(id => id !== toolId))\n    }, 2000)\n  }, [chatId])\n\n  // Handle media generation\n  const generateMedia = useCallback(async (mediaType: 'image' | 'audio' | 'video', prompt: string) => {\n    const mediaId = `media_${Date.now()}`\n    \n    const mediaItem: WorkspaceItem = {\n      id: mediaId,\n      type: mediaType,\n      content: { prompt, url: null },\n      timestamp: new Date(),\n      author: 'ai',\n      status: 'generating'\n    }\n    \n    setWorkspaceItems(prev => [...prev, mediaItem])\n\n    await trackEvent({\n      name: 'workspace_media_generation',\n      properties: { chatId, mediaType, prompt }\n    })\n\n    // Simulate media generation\n    setTimeout(() => {\n      setWorkspaceItems(prev => prev.map(item => \n        item.id === mediaId \n          ? { \n              ...item, \n              status: 'completed', \n              content: { \n                ...item.content, \n                url: `/placeholder-${mediaType}.${mediaType === 'audio' ? 'mp3' : mediaType === 'video' ? 'mp4' : 'jpg'}`\n              }\n            }\n          : item\n      ))\n    }, 3000)\n  }, [chatId])\n\n  const renderWorkspaceItem = (item: WorkspaceItem) => {\n    switch (item.type) {\n      case 'message':\n        return (\n          <MessageBubble\n            key={item.id}\n            message={{\n              id: item.id,\n              content: item.content,\n              timestamp: item.timestamp,\n              senderId: (item.metadata as any)?.senderId ?? 'unknown',\n              senderName: (item.metadata as any)?.senderName ?? item.author ?? 'User',\n              type: (item.metadata as any)?.type ?? 'text',\n              isOwn: !!(item.metadata as any)?.isOwn,\n              mediaUrl: (item.metadata as any)?.mediaUrl,\n              fileName: (item.metadata as any)?.fileName,\n              fileSize: (item.metadata as any)?.fileSize,\n              isPinned: (item.metadata as any)?.isPinned,\n              isLiked: (item.metadata as any)?.isLiked,\n              likeCount: (item.metadata as any)?.likeCount,\n              gifData: (item.metadata as any)?.gifData,\n            }}\n            onUpdateMessage={onEditMessage}\n          />\n        )\n\n      case 'code':\n        return (\n          <div key={item.id} className=\"bg-gray-900 rounded-lg p-4 my-2\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n                <Code className=\"h-3 w-3\" />\n                Code Execution\n              </Badge>\n              <div className=\"flex gap-2\">\n                <Button size=\"sm\" variant=\"ghost\">\n                  <Play className=\"h-3 w-3\" />\n                </Button>\n                <Button size=\"sm\" variant=\"ghost\">\n                  <Download className=\"h-3 w-3\" />\n                </Button>\n              </div>\n            </div>\n            <pre className=\"text-sm text-green-400 overflow-x-auto\">\n              <code>{item.content}</code>\n            </pre>\n          </div>\n        )\n\n      case 'image':\n        return (\n          <div key={item.id} className=\"bg-white dark:bg-gray-800 rounded-lg p-4 my-2\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n                <Image className=\"h-3 w-3\" />\n                {item.status === 'generating' ? 'Generating Image...' : 'Generated Image'}\n              </Badge>\n              {item.status === 'completed' && (\n                <div className=\"flex gap-2\">\n                  <Button size=\"sm\" variant=\"ghost\">\n                    <Eye className=\"h-3 w-3\" />\n                  </Button>\n                  <Button size=\"sm\" variant=\"ghost\">\n                    <Download className=\"h-3 w-3\" />\n                  </Button>\n                  <Button size=\"sm\" variant=\"ghost\">\n                    <Share2 className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              )}\n            </div>\n            {item.status === 'generating' ? (\n              <div className=\"h-48 bg-gray-200 dark:bg-gray-700 rounded animate-pulse flex items-center justify-center\">\n                <span className=\"text-sm text-gray-500\">Generating...</span>\n              </div>\n            ) : (\n              <img \n                src={item.content.url} \n                alt={item.content?.prompt || 'Generated image'}\n                className=\"w-full h-48 object-cover rounded\"\n              />\n            )}\n            <p className=\"text-xs text-gray-500 mt-2\">Prompt: {item.content.prompt}</p>\n          </div>\n        )\n\n      case 'audio':\n        return (\n          <div key={item.id} className=\"bg-white dark:bg-gray-800 rounded-lg p-4 my-2\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n                <Music className=\"h-3 w-3\" />\n                {item.status === 'generating' ? 'Generating Audio...' : 'Generated Audio'}\n              </Badge>\n              {item.status === 'completed' && (\n                <div className=\"flex gap-2\">\n                  <Button size=\"sm\" variant=\"ghost\">\n                    <Play className=\"h-3 w-3\" />\n                  </Button>\n                  <Button size=\"sm\" variant=\"ghost\">\n                    <Download className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              )}\n            </div>\n            {item.status === 'generating' ? (\n              <div className=\"h-16 bg-gray-200 dark:bg-gray-700 rounded animate-pulse flex items-center justify-center\">\n                <span className=\"text-sm text-gray-500\">Generating audio...</span>\n              </div>\n            ) : (\n              <audio controls className=\"w-full\">\n                <source src={item.content.url} type=\"audio/mpeg\" />\n              </audio>\n            )}\n            <p className=\"text-xs text-gray-500 mt-2\">Prompt: {item.content.prompt}</p>\n          </div>\n        )\n\n      case 'tool_execution':\n        return (\n          <div key={item.id} className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4 my-2\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n                <Zap className=\"h-3 w-3\" />\n                Tool: {item.content.toolType}\n              </Badge>\n              {item.status === 'generating' && (\n                <div className=\"animate-spin h-4 w-4 border-2 border-blue-500 border-t-transparent rounded-full\" />\n              )}\n            </div>\n            <div className=\"text-sm\">\n              <p><strong>Input:</strong> {JSON.stringify(item.content.params)}</p>\n              {item.content.output && (\n                <p className=\"mt-2\"><strong>Output:</strong> {item.content.output}</p>\n              )}\n            </div>\n          </div>\n        )\n\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col h-full bg-white dark:bg-gray-900\">\n      {/* Workspace Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center gap-4\">\n          <h2 className=\"text-lg font-semibold\">Active Workspace</h2>\n          <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n            <Users className=\"h-3 w-3\" />\n            {Object.keys(typingUsers).length + 1} active\n          </Badge>\n          {!isConnected && (\n            <Badge variant=\"destructive\">Disconnected</Badge>\n          )}\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          {/* Communication Controls */}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setIsPhoneCallOpen(true)}\n            className=\"flex items-center gap-1\"\n          >\n            <Phone className=\"h-4 w-4\" />\n            {!isMobile && \"Voice\"}\n          </Button>\n          \n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setIsVideoCallOpen(true)}\n            className=\"flex items-center gap-1\"\n          >\n            <Video className=\"h-4 w-4\" />\n            {!isMobile && \"Video\"}\n          </Button>\n\n          {/* Mode Toggle */}\n          <Button\n            variant={activeMode === 'unified' ? 'default' : 'ghost'}\n            size=\"sm\"\n            onClick={() => setActiveMode(activeMode === 'unified' ? 'split' : 'unified')}\n          >\n            {activeMode === 'unified' ? <Maximize2 className=\"h-4 w-4\" /> : <Minimize2 className=\"h-4 w-4\" />}\n          </Button>\n        </div>\n      </div>\n\n      {/* Workspace Content */}\n      {activeMode === 'unified' ? (\n        <div className=\"flex-1 flex flex-col\">\n            <Tabs value={activeTab} onValueChange={(value) => setActiveTab(value as 'chat' | 'media' | 'tools')} className=\"flex-1 flex flex-col\">\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"chat\" className=\"flex items-center gap-2\">\n                <MessageSquare className=\"h-4 w-4\" />\n                Chat & Tools\n              </TabsTrigger>\n              <TabsTrigger value=\"media\" className=\"flex items-center gap-2\">\n                <Image className=\"h-4 w-4\" />\n                Media\n              </TabsTrigger>\n              <TabsTrigger value=\"tools\" className=\"flex items-center gap-2\">\n                <Bot className=\"h-4 w-4\" />\n                AI Tools\n              </TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"chat\" className=\"flex-1 flex flex-col\">\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-2\">\n                {workspaceData.map(renderWorkspaceItem)}\n                {Object.entries(typingUsers).map(([userId, info]) => (\n                  <TypingIndicator\n                    key={userId}\n                    userId={userId}\n                    userName={info.name}\n                  />\n                ))}\n              </div>\n              \n              {isMobile ? (\n                <MobileMessageInput\n                  value=\"\"\n                  onChange={(_v) => {}}\n                  onSend={onSendMessage}\n                  onEmojiSelect={(_emoji) => {}}\n                  onFileSelect={(_file, _type) => {}}\n                  placeholder=\"Type a message or describe what you want to create...\"\n                />\n              ) : (\n                <DesktopMessageInput\n                  value=\"\"\n                  onChange={(_v) => {}}\n                  onSend={onSendMessage}\n                  placeholder=\"Type a message or describe what you want to create...\"\n                />\n              )}\n            </TabsContent>\n\n            <TabsContent value=\"media\" className=\"flex-1 p-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                <Button\n                  onClick={() => generateMedia('image', 'A beautiful landscape')}\n                  className=\"flex items-center gap-2\"\n                >\n                  <Image className=\"h-4 w-4\" />\n                  Generate Image\n                </Button>\n                <Button\n                  onClick={() => generateMedia('audio', 'Relaxing ambient music')}\n                  className=\"flex items-center gap-2\"\n                >\n                  <Music className=\"h-4 w-4\" />\n                  Generate Audio\n                </Button>\n                <Button\n                  onClick={() => generateMedia('video', 'Short animation')}\n                  className=\"flex items-center gap-2\"\n                >\n                  <Video className=\"h-4 w-4\" />\n                  Generate Video\n                </Button>\n              </div>\n              \n              <div className=\"space-y-2\">\n                {workspaceData\n                  .filter(item => ['image', 'audio', 'video'].includes(item.type))\n                  .map(renderWorkspaceItem)}\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"tools\" className=\"flex-1 p-4\">\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-4\">\n                <Button\n                  onClick={() => executeToolAction('code_interpreter', { code: 'print(\"Hello World\")' })}\n                  className=\"flex items-center gap-2\"\n                >\n                  <Code className=\"h-4 w-4\" />\n                  Run Code\n                </Button>\n                <Button\n                  onClick={() => executeToolAction('web_search', { query: 'latest AI news' })}\n                  className=\"flex items-center gap-2\"\n                >\n                  <Zap className=\"h-4 w-4\" />\n                  Web Search\n                </Button>\n                <Button\n                  onClick={() => executeToolAction('data_analysis', { dataset: 'sample.csv' })}\n                  className=\"flex items-center gap-2\"\n                >\n                  <FileText className=\"h-4 w-4\" />\n                  Analyze Data\n                </Button>\n                <Button\n                  onClick={() => executeToolAction('3d_modeling', { prompt: 'simple cube' })}\n                  className=\"flex items-center gap-2\"\n                >\n                  <Bot className=\"h-4 w-4\" />\n                  3D Model\n                </Button>\n              </div>\n              \n              <div className=\"space-y-2\">\n                {workspaceData\n                  .filter(item => item.type === 'tool_execution')\n                  .map(renderWorkspaceItem)}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      ) : (\n        <PanelGroup direction=\"horizontal\" className=\"flex-1\">\n          <Panel defaultSize={50} minSize={30}>\n            <div className=\"h-full flex flex-col\">\n              <div className=\"p-2 border-b border-gray-200 dark:border-gray-700\">\n                <h3 className=\"font-medium\">Messages</h3>\n              </div>\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-2\">\n                {workspaceData\n                  .filter(item => item.type === 'message')\n                  .map(renderWorkspaceItem)}\n                {Object.entries(typingUsers).map(([userId, info]) => (\n                  <TypingIndicator\n                    key={userId}\n                    userId={userId}\n                    userName={info.name}\n                  />\n                ))}\n              </div>\n              {isMobile ? (\n                <MobileMessageInput\n                  value=\"\"\n                  onChange={(_v) => {}}\n                  onSend={onSendMessage}\n                  onEmojiSelect={(_emoji) => {}}\n                  onFileSelect={(_file, _type) => {}}\n                  placeholder=\"Type a message...\"\n                />\n              ) : (\n                <DesktopMessageInput\n                  value=\"\"\n                  onChange={(_v) => {}}\n                  onSend={onSendMessage}\n                  placeholder=\"Type a message...\"\n                />\n              )}\n            </div>\n          </Panel>\n          \n          <PanelResizeHandle />\n          \n          <Panel defaultSize={50} minSize={30}>\n            <div className=\"h-full flex flex-col\">\n              <div className=\"p-2 border-b border-gray-200 dark:border-gray-700\">\n                <h3 className=\"font-medium\">Workspace</h3>\n              </div>\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-2\">\n                {workspaceData\n                  .filter(item => item.type !== 'message')\n                  .map(renderWorkspaceItem)}\n              </div>\n            </div>\n          </Panel>\n        </PanelGroup>\n      )}\n\n      {/* Call UIs */}\n      <PhoneCallUI\n        isOpen={isPhoneCallOpen}\n        onClose={() => setIsPhoneCallOpen(false)}\n        contact={{ id: chatId, name: \"Workspace Call\" }}\n        callType=\"outgoing\"\n      />\n      \n      <VideoCallUI\n        isOpen={isVideoCallOpen}\n        onClose={() => setIsVideoCallOpen(false)}\n        contact={{ id: chatId, name: \"Workspace Call\" }}\n        callType=\"outgoing\"\n      />\n    </div>\n  )\n}\n"],"names":["WorkspaceMode","chatId","messages","onSendMessage","onEditMessage","typingUsers","isConnected","activeMode","setActiveMode","useState","activeTab","setActiveTab","isVideoCallOpen","setIsVideoCallOpen","isPhoneCallOpen","setIsPhoneCallOpen","workspaceItems","setWorkspaceItems","activeTools","setActiveTools","mediaGenerations","setMediaGenerations","isMobile","useIsMobile","workspaceData","useMemo","items","map","msg","id","type","content","timestamp","Date","author","senderName","isOwn","metadata","senderId","mediaUrl","fileName","fileSize","isPinned","isLiked","likeCount","gifData","sort","a","b","getTime","executeToolAction","useCallback","toolType","params","toolId","now","generatingItem","output","status","prev","trackEvent","name","properties","setTimeout","item","filter","generateMedia","mediaType","prompt","mediaId","mediaItem","url","renderWorkspaceItem","MessageBubble","message","onUpdateMessage","div","className","Badge","variant","Code","Button","size","Play","Download","pre","code","Image","Eye","Share2","span","img","src","alt","p","Music","audio","controls","source","Zap","strong","JSON","stringify","h2","Users","Object","keys","length","onClick","Phone","Video","Maximize2","Minimize2","Tabs","value","onValueChange","TabsList","TabsTrigger","MessageSquare","Bot","TabsContent","entries","userId","info","TypingIndicator","userName","MobileMessageInput","onChange","_v","onSend","onEmojiSelect","_emoji","onFileSelect","_file","_type","placeholder","DesktopMessageInput","includes","query","dataset","FileText","PanelGroup","direction","Panel","defaultSize","minSize","h3","PanelResizeHandle","PhoneCallUI","isOpen","onClose","contact","callType","VideoCallUI"],"mappings":"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"}