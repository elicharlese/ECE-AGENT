{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/lib/feature-flags.ts"],"sourcesContent":["\nexport const FEATURES = {\n  VIRTUAL_SCROLLING: 'virtual_scrolling',\n  E2E_ENCRYPTION: 'e2e_encryption',\n  MULTI_AGENT: 'multi_agent',\n  ADVANCED_SEARCH: 'advanced_search',\n  PERFORMANCE_MONITORING: 'performance_monitoring',\n  LAZY_LOADING: 'lazy_loading',\n  REALTIME_PRESENCE: 'realtime_presence',\n  VOICE_MESSAGES: 'voice_messages',\n  FILE_SHARING: 'file_sharing',\n  MESSAGE_REACTIONS: 'message_reactions',\n  IMMERSIVE_CHAT: 'immersive_chat',\n} as const\n\ntype FeatureFlag = keyof typeof FEATURES\n\ninterface FeatureFlagConfig {\n  enabled: boolean\n  rolloutPercentage?: number\n  userGroups?: string[]\n  metadata?: Record<string, unknown>\n}\n\nclass FeatureFlagsManager {\n  private static instance: FeatureFlagsManager\n  private flags: Map<string, FeatureFlagConfig> = new Map()\n  private userId?: string\n\n  private constructor() {\n    this.loadFlags()\n  }\n\n  static getInstance(): FeatureFlagsManager {\n    if (!FeatureFlagsManager.instance) {\n      FeatureFlagsManager.instance = new FeatureFlagsManager()\n    }\n    return FeatureFlagsManager.instance\n  }\n\n  private loadFlags() {\n    // Load from environment variables for now\n    // In production, this would fetch from a feature flag service\n    const defaultFlags: Record<string, FeatureFlagConfig> = {\n      [FEATURES.VIRTUAL_SCROLLING]: { \n        enabled: process.env.NEXT_PUBLIC_FF_VIRTUAL_SCROLLING === 'true',\n        rolloutPercentage: 100 \n      },\n      [FEATURES.E2E_ENCRYPTION]: { \n        enabled: process.env.NEXT_PUBLIC_FF_E2E_ENCRYPTION === 'true',\n        rolloutPercentage: 0 \n      },\n      [FEATURES.MULTI_AGENT]: { \n        enabled: process.env.NEXT_PUBLIC_FF_MULTI_AGENT === 'true',\n        rolloutPercentage: 50 \n      },\n      [FEATURES.ADVANCED_SEARCH]: { \n        enabled: process.env.NEXT_PUBLIC_FF_ADVANCED_SEARCH === 'true',\n        rolloutPercentage: 100 \n      },\n      [FEATURES.PERFORMANCE_MONITORING]: { \n        enabled: process.env.NEXT_PUBLIC_FF_PERFORMANCE_MONITORING === 'true',\n        rolloutPercentage: 100 \n      },\n      [FEATURES.LAZY_LOADING]: { \n        enabled: true,\n        rolloutPercentage: 100 \n      },\n      [FEATURES.REALTIME_PRESENCE]: { \n        enabled: false,\n        rolloutPercentage: 0 \n      },\n      [FEATURES.VOICE_MESSAGES]: { \n        enabled: false,\n        rolloutPercentage: 0 \n      },\n      [FEATURES.FILE_SHARING]: { \n        enabled: true,\n        rolloutPercentage: 100 \n      },\n      [FEATURES.MESSAGE_REACTIONS]: { \n        enabled: true,\n        rolloutPercentage: 100 \n      },\n      [FEATURES.IMMERSIVE_CHAT]: {\n        enabled: process.env.NEXT_PUBLIC_FF_IMMERSIVE_CHAT_ENABLED === 'true',\n        rolloutPercentage: 100,\n      },\n    }\n\n    Object.entries(defaultFlags).forEach(([key, config]) => {\n      this.flags.set(key, config)\n    })\n  }\n\n  setUserId(userId: string) {\n    this.userId = userId\n  }\n\n  isEnabled(feature: string): boolean {\n    const config = this.flags.get(feature)\n    if (!config || !config.enabled) return false\n\n    // Check rollout percentage\n    if (config.rolloutPercentage !== undefined && config.rolloutPercentage < 100) {\n      if (!this.userId) return false\n      \n      // Simple hash-based rollout\n      const hash = this.hashString(this.userId + feature)\n      const percentage = (hash % 100) + 1\n      return percentage <= config.rolloutPercentage\n    }\n\n    return true\n  }\n\n  private hashString(str: string): number {\n    let hash = 0\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i)\n      hash = ((hash << 5) - hash) + char\n      hash = hash & hash // Convert to 32-bit integer\n    }\n    return Math.abs(hash)\n  }\n\n  async updateFlag(feature: string, config: Partial<FeatureFlagConfig>) {\n    const existing = this.flags.get(feature) || { enabled: false }\n    this.flags.set(feature, { ...existing, ...config })\n  }\n\n  getAllFlags(): Record<string, FeatureFlagConfig> {\n    const result: Record<string, FeatureFlagConfig> = {}\n    this.flags.forEach((value, key) => {\n      result[key] = value\n    })\n    return result\n  }\n}\n\n// Export singleton instance methods\nconst manager = FeatureFlagsManager.getInstance()\n\nexport function isFeatureEnabled(feature: string): boolean {\n  return manager.isEnabled(feature)\n}\n\nexport function setFeatureFlagUserId(userId: string) {\n  manager.setUserId(userId)\n}\n\nexport function getAllFeatureFlags() {\n  return manager.getAllFlags()\n}\n\nexport async function updateFeatureFlag(feature: string, config: Partial<FeatureFlagConfig>) {\n  return manager.updateFlag(feature, config)\n}\n"],"names":["FEATURES","getAllFeatureFlags","isFeatureEnabled","setFeatureFlagUserId","updateFeatureFlag","VIRTUAL_SCROLLING","E2E_ENCRYPTION","MULTI_AGENT","ADVANCED_SEARCH","PERFORMANCE_MONITORING","LAZY_LOADING","REALTIME_PRESENCE","VOICE_MESSAGES","FILE_SHARING","MESSAGE_REACTIONS","IMMERSIVE_CHAT","FeatureFlagsManager","flags","Map","loadFlags","getInstance","instance","defaultFlags","enabled","process","env","NEXT_PUBLIC_FF_VIRTUAL_SCROLLING","rolloutPercentage","NEXT_PUBLIC_FF_E2E_ENCRYPTION","NEXT_PUBLIC_FF_MULTI_AGENT","NEXT_PUBLIC_FF_ADVANCED_SEARCH","NEXT_PUBLIC_FF_PERFORMANCE_MONITORING","NEXT_PUBLIC_FF_IMMERSIVE_CHAT_ENABLED","Object","entries","forEach","key","config","set","setUserId","userId","isEnabled","feature","get","undefined","hash","hashString","percentage","str","i","length","char","charCodeAt","Math","abs","updateFlag","existing","getAllFlags","result","value","manager"],"mappings":";;;;;;;;;;;IACaA,QAAQ;eAARA;;IAsJGC,kBAAkB;eAAlBA;;IARAC,gBAAgB;eAAhBA;;IAIAC,oBAAoB;eAApBA;;IAQMC,iBAAiB;eAAjBA;;;AA1Jf,MAAMJ,WAAW;IACtBK,mBAAmB;IACnBC,gBAAgB;IAChBC,aAAa;IACbC,iBAAiB;IACjBC,wBAAwB;IACxBC,cAAc;IACdC,mBAAmB;IACnBC,gBAAgB;IAChBC,cAAc;IACdC,mBAAmB;IACnBC,gBAAgB;AAClB;AAWA,MAAMC;IAKJ,aAAsB;aAHdC,QAAwC,IAAIC;QAIlD,IAAI,CAACC,SAAS;IAChB;IAEA,OAAOC,cAAmC;QACxC,IAAI,CAACJ,oBAAoBK,QAAQ,EAAE;YACjCL,oBAAoBK,QAAQ,GAAG,IAAIL;QACrC;QACA,OAAOA,oBAAoBK,QAAQ;IACrC;IAEQF,YAAY;QAClB,0CAA0C;QAC1C,8DAA8D;QAC9D,MAAMG,eAAkD;YACtD,CAACtB,SAASK,iBAAiB,CAAC,EAAE;gBAC5BkB,SAASC,QAAQC,GAAG,CAACC,gCAAgC,KAAK;gBAC1DC,mBAAmB;YACrB;YACA,CAAC3B,SAASM,cAAc,CAAC,EAAE;gBACzBiB,SAASC,QAAQC,GAAG,CAACG,6BAA6B,KAAK;gBACvDD,mBAAmB;YACrB;YACA,CAAC3B,SAASO,WAAW,CAAC,EAAE;gBACtBgB,SAASC,QAAQC,GAAG,CAACI,0BAA0B,KAAK;gBACpDF,mBAAmB;YACrB;YACA,CAAC3B,SAASQ,eAAe,CAAC,EAAE;gBAC1Be,SAASC,QAAQC,GAAG,CAACK,8BAA8B,KAAK;gBACxDH,mBAAmB;YACrB;YACA,CAAC3B,SAASS,sBAAsB,CAAC,EAAE;gBACjCc,SAASC,QAAQC,GAAG,CAACM,qCAAqC,KAAK;gBAC/DJ,mBAAmB;YACrB;YACA,CAAC3B,SAASU,YAAY,CAAC,EAAE;gBACvBa,SAAS;gBACTI,mBAAmB;YACrB;YACA,CAAC3B,SAASW,iBAAiB,CAAC,EAAE;gBAC5BY,SAAS;gBACTI,mBAAmB;YACrB;YACA,CAAC3B,SAASY,cAAc,CAAC,EAAE;gBACzBW,SAAS;gBACTI,mBAAmB;YACrB;YACA,CAAC3B,SAASa,YAAY,CAAC,EAAE;gBACvBU,SAAS;gBACTI,mBAAmB;YACrB;YACA,CAAC3B,SAASc,iBAAiB,CAAC,EAAE;gBAC5BS,SAAS;gBACTI,mBAAmB;YACrB;YACA,CAAC3B,SAASe,cAAc,CAAC,EAAE;gBACzBQ,SAASC,QAAQC,GAAG,CAACO,qCAAqC,KAAK;gBAC/DL,mBAAmB;YACrB;QACF;QAEAM,OAAOC,OAAO,CAACZ,cAAca,OAAO,CAAC,CAAC,CAACC,KAAKC,OAAO;YACjD,IAAI,CAACpB,KAAK,CAACqB,GAAG,CAACF,KAAKC;QACtB;IACF;IAEAE,UAAUC,MAAc,EAAE;QACxB,IAAI,CAACA,MAAM,GAAGA;IAChB;IAEAC,UAAUC,OAAe,EAAW;QAClC,MAAML,SAAS,IAAI,CAACpB,KAAK,CAAC0B,GAAG,CAACD;QAC9B,IAAI,CAACL,UAAU,CAACA,OAAOd,OAAO,EAAE,OAAO;QAEvC,2BAA2B;QAC3B,IAAIc,OAAOV,iBAAiB,KAAKiB,aAAaP,OAAOV,iBAAiB,GAAG,KAAK;YAC5E,IAAI,CAAC,IAAI,CAACa,MAAM,EAAE,OAAO;YAEzB,4BAA4B;YAC5B,MAAMK,OAAO,IAAI,CAACC,UAAU,CAAC,IAAI,CAACN,MAAM,GAAGE;YAC3C,MAAMK,aAAa,AAACF,OAAO,MAAO;YAClC,OAAOE,cAAcV,OAAOV,iBAAiB;QAC/C;QAEA,OAAO;IACT;IAEQmB,WAAWE,GAAW,EAAU;QACtC,IAAIH,OAAO;QACX,IAAK,IAAII,IAAI,GAAGA,IAAID,IAAIE,MAAM,EAAED,IAAK;YACnC,MAAME,OAAOH,IAAII,UAAU,CAACH;YAC5BJ,OAAO,AAAEA,CAAAA,QAAQ,CAAA,IAAKA,OAAQM;YAC9BN,OAAOA,OAAOA,KAAK,4BAA4B;;QACjD;QACA,OAAOQ,KAAKC,GAAG,CAACT;IAClB;IAEA,MAAMU,WAAWb,OAAe,EAAEL,MAAkC,EAAE;QACpE,MAAMmB,WAAW,IAAI,CAACvC,KAAK,CAAC0B,GAAG,CAACD,YAAY;YAAEnB,SAAS;QAAM;QAC7D,IAAI,CAACN,KAAK,CAACqB,GAAG,CAACI,SAAS;YAAE,GAAGc,QAAQ;YAAE,GAAGnB,MAAM;QAAC;IACnD;IAEAoB,cAAiD;QAC/C,MAAMC,SAA4C,CAAC;QACnD,IAAI,CAACzC,KAAK,CAACkB,OAAO,CAAC,CAACwB,OAAOvB;YACzBsB,MAAM,CAACtB,IAAI,GAAGuB;QAChB;QACA,OAAOD;IACT;AACF;AAEA,oCAAoC;AACpC,MAAME,UAAU5C,oBAAoBI,WAAW;AAExC,SAASlB,iBAAiBwC,OAAe;IAC9C,OAAOkB,QAAQnB,SAAS,CAACC;AAC3B;AAEO,SAASvC,qBAAqBqC,MAAc;IACjDoB,QAAQrB,SAAS,CAACC;AACpB;AAEO,SAASvC;IACd,OAAO2D,QAAQH,WAAW;AAC5B;AAEO,eAAerD,kBAAkBsC,OAAe,EAAEL,MAAkC;IACzF,OAAOuB,QAAQL,UAAU,CAACb,SAASL;AACrC"}