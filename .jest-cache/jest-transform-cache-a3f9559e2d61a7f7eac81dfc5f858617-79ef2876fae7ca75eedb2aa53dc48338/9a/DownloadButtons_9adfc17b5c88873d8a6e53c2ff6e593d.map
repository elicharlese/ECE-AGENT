{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/components/ui/DownloadButtons.tsx"],"sourcesContent":["\"use client\"\n\nimport React from 'react'\nimport { AnimatedButton } from '@/components/ui/AnimatedButton'\n\nfunction getPlatform(): 'mac' | 'windows' | 'linux' | 'other' {\n  if (typeof navigator === 'undefined') return 'other'\n  const ua = navigator.userAgent\n  if (/Macintosh|Mac OS X/i.test(ua)) return 'mac'\n  if (/Windows/i.test(ua)) return 'windows'\n  if (/Linux/i.test(ua)) return 'linux'\n  return 'other'\n}\n\nexport function DownloadButtons({ className }: { className?: string }) {\n  // Default to 'other' to match SSR, then detect on mount to avoid hydration mismatch\n  const [platform, setPlatform] = React.useState<'mac' | 'windows' | 'linux' | 'other'>('other')\n  React.useEffect(() => {\n    setPlatform(getPlatform())\n  }, [])\n\n  const macUrl = process.env.NEXT_PUBLIC_DESKTOP_DOWNLOAD_MAC || ''\n  const winUrl = process.env.NEXT_PUBLIC_DESKTOP_DOWNLOAD_WIN || ''\n  const linuxUrl = process.env.NEXT_PUBLIC_DESKTOP_DOWNLOAD_LINUX || ''\n\n  // Fallback to Releases page if specific URLs are not configured\n  const desktopReleaseUrl =\n    process.env.NEXT_PUBLIC_DESKTOP_RELEASE_URL || 'https://github.com/elicharlese/AGENT/releases/latest'\n\n  const iosUrl = process.env.NEXT_PUBLIC_MOBILE_APPSTORE_URL || process.env.NEXT_PUBLIC_MOBILE_TESTFLIGHT_URL || ''\n  const androidUrl = process.env.NEXT_PUBLIC_MOBILE_PLAY_URL || ''\n\n  const desktopHref =\n    (platform === 'mac' && macUrl) ||\n    (platform === 'windows' && winUrl) ||\n    (platform === 'linux' && linuxUrl) ||\n    macUrl ||\n    winUrl ||\n    linuxUrl ||\n    desktopReleaseUrl\n\n  const desktopLabel = React.useMemo(() => {\n    switch (platform) {\n      case 'mac':\n        return 'Download for macOS'\n      case 'windows':\n        return 'Download for Windows'\n      case 'linux':\n        return 'Download for Linux'\n      default:\n        return 'Download Desktop'\n    }\n  }, [platform])\n\n  const mobileHref =\n    (platform === 'mac' && iosUrl) ||\n    (platform === 'windows' && androidUrl) ||\n    (platform === 'linux' && androidUrl) ||\n    iosUrl ||\n    androidUrl ||\n    '#'\n\n  const mobileLabel = React.useMemo(() => {\n    if (mobileHref === iosUrl && iosUrl) return 'Get on App Store'\n    if (mobileHref === androidUrl && androidUrl) return 'Get on Google Play'\n    return 'Get Mobile App'\n  }, [mobileHref, iosUrl, androidUrl])\n\n  return (\n    <div className={className}>\n      <div className=\"mt-4 flex flex-col items-start gap-3 sm:flex-row sm:items-center\">\n        <AnimatedButton\n          href={desktopHref}\n          variant=\"primary\"\n          aria-label={desktopLabel}\n          className=\"pointer-events-auto\"\n        >\n          {desktopLabel}\n        </AnimatedButton>\n        <AnimatedButton\n          href={mobileHref}\n          variant=\"secondary\"\n          aria-label={mobileLabel}\n          className=\"pointer-events-auto\"\n        >\n          {mobileLabel}\n        </AnimatedButton>\n      </div>\n    </div>\n  )\n}\n"],"names":["DownloadButtons","getPlatform","navigator","ua","userAgent","test","className","platform","setPlatform","React","useState","useEffect","macUrl","process","env","NEXT_PUBLIC_DESKTOP_DOWNLOAD_MAC","winUrl","NEXT_PUBLIC_DESKTOP_DOWNLOAD_WIN","linuxUrl","NEXT_PUBLIC_DESKTOP_DOWNLOAD_LINUX","desktopReleaseUrl","NEXT_PUBLIC_DESKTOP_RELEASE_URL","iosUrl","NEXT_PUBLIC_MOBILE_APPSTORE_URL","NEXT_PUBLIC_MOBILE_TESTFLIGHT_URL","androidUrl","NEXT_PUBLIC_MOBILE_PLAY_URL","desktopHref","desktopLabel","useMemo","mobileHref","mobileLabel","div","AnimatedButton","href","variant","aria-label"],"mappings":"AAAA;;;;;+BAcgBA;;;eAAAA;;;;8DAZE;gCACa;;;;;;AAE/B,SAASC;IACP,IAAI,OAAOC,cAAc,aAAa,OAAO;IAC7C,MAAMC,KAAKD,UAAUE,SAAS;IAC9B,IAAI,sBAAsBC,IAAI,CAACF,KAAK,OAAO;IAC3C,IAAI,WAAWE,IAAI,CAACF,KAAK,OAAO;IAChC,IAAI,SAASE,IAAI,CAACF,KAAK,OAAO;IAC9B,OAAO;AACT;AAEO,SAASH,gBAAgB,EAAEM,SAAS,EAA0B;IACnE,oFAAoF;IACpF,MAAM,CAACC,UAAUC,YAAY,GAAGC,cAAK,CAACC,QAAQ,CAAwC;IACtFD,cAAK,CAACE,SAAS,CAAC;QACdH,YAAYP;IACd,GAAG,EAAE;IAEL,MAAMW,SAASC,QAAQC,GAAG,CAACC,gCAAgC,IAAI;IAC/D,MAAMC,SAASH,QAAQC,GAAG,CAACG,gCAAgC,IAAI;IAC/D,MAAMC,WAAWL,QAAQC,GAAG,CAACK,kCAAkC,IAAI;IAEnE,gEAAgE;IAChE,MAAMC,oBACJP,QAAQC,GAAG,CAACO,+BAA+B,IAAI;IAEjD,MAAMC,SAAST,QAAQC,GAAG,CAACS,+BAA+B,IAAIV,QAAQC,GAAG,CAACU,iCAAiC,IAAI;IAC/G,MAAMC,aAAaZ,QAAQC,GAAG,CAACY,2BAA2B,IAAI;IAE9D,MAAMC,cACJ,AAACpB,aAAa,SAASK,UACtBL,aAAa,aAAaS,UAC1BT,aAAa,WAAWW,YACzBN,UACAI,UACAE,YACAE;IAEF,MAAMQ,eAAenB,cAAK,CAACoB,OAAO,CAAC;QACjC,OAAQtB;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF,GAAG;QAACA;KAAS;IAEb,MAAMuB,aACJ,AAACvB,aAAa,SAASe,UACtBf,aAAa,aAAakB,cAC1BlB,aAAa,WAAWkB,cACzBH,UACAG,cACA;IAEF,MAAMM,cAActB,cAAK,CAACoB,OAAO,CAAC;QAChC,IAAIC,eAAeR,UAAUA,QAAQ,OAAO;QAC5C,IAAIQ,eAAeL,cAAcA,YAAY,OAAO;QACpD,OAAO;IACT,GAAG;QAACK;QAAYR;QAAQG;KAAW;IAEnC,qBACE,qBAACO;QAAI1B,WAAWA;kBACd,cAAA,sBAAC0B;YAAI1B,WAAU;;8BACb,qBAAC2B,8BAAc;oBACbC,MAAMP;oBACNQ,SAAQ;oBACRC,cAAYR;oBACZtB,WAAU;8BAETsB;;8BAEH,qBAACK,8BAAc;oBACbC,MAAMJ;oBACNK,SAAQ;oBACRC,cAAYL;oBACZzB,WAAU;8BAETyB;;;;;AAKX"}