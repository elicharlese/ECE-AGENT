{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/__tests__/components/ChatWindow.invite.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react'\n\n// Mock next/dynamic to avoid loading heavy components during tests\njest.mock('next/dynamic', () => () => (props: any) => null)\n\n// Mock Next.js navigation to satisfy components that call useRouter/usePathname\njest.mock('next/navigation', () => ({\n  useRouter: () => ({ push: jest.fn(), replace: jest.fn(), prefetch: jest.fn(), back: jest.fn() }),\n  usePathname: () => '/messages',\n  useSearchParams: () => ({ get: () => null }),\n}))\n\n// Mock hooks used by ChatWindow\nconst mockInviteParticipants = jest.fn()\njest.mock('@/hooks/use-conversations', () => ({\n  useConversations: () => ({\n    conversations: [\n      { id: 'abc', title: 'Test Conversation', created_at: '', updated_at: '', user_id: 'user-1' },\n    ],\n    loading: false,\n    error: null,\n    inviteParticipants: mockInviteParticipants,\n  }),\n}))\n\njest.mock('@/hooks/use-websocket', () => ({\n  useWebSocket: () => ({\n    isConnected: true,\n    messages: [],\n    typingUsers: {},\n    joinConversation: jest.fn(),\n    sendChatMessage: jest.fn(),\n    sendTyping: jest.fn(),\n  }),\n}))\n\njest.mock('@/hooks/use-mobile', () => ({ useIsMobile: () => false }))\njest.mock('@/hooks/use-haptics', () => ({ useHaptics: () => ({ triggerHaptic: () => undefined }) }))\n\n// Mock InviteUsersDialog to immediately invoke onInviteUsers when opened\njest.mock('@/components/chat/invite-users-dialog', () => ({\n  InviteUsersDialog: ({ isOpen, onClose, onInviteUsers }: any) => {\n    if (isOpen) {\n      // Trigger a mixed set: username, email, wallet\n      const users = [\n        { identifier: '@alice', type: 'username' },\n        { identifier: 'bob@example.com', type: 'email' },\n        { identifier: 'SoL1111111111111111111111111111111111111', type: 'wallet' },\n      ]\n      // Fire and close once\n      onInviteUsers(users)\n      onClose?.()\n    }\n    return null\n  },\n}))\n\n// Mock profile-service resolvers used by handleInviteUsers\nimport { getProfileByUsername, getProfileByIdentifier } from '@/services/profile-service'\njest.mock('@/services/profile-service', () => ({\n  getProfileByUsername: jest.fn(),\n  getProfileByIdentifier: jest.fn(),\n}))\n\n// Mock Supabase client used by ChatWindow for this test\njest.mock('@/lib/supabase/client', () => {\n  const supabase = {\n    from: (table: string) => ({\n      select: (_sel: string, _opts?: any) => ({\n        eq: (col: string, _val: string) => {\n          // Participant count head:true path\n          if (table === 'conversation_participants' && col === 'conversation_id') {\n            return Promise.resolve({ count: 3 })\n          }\n          // Wallet lookup path\n          if (table === 'profiles' && col === 'solana_address') {\n            return {\n              limit: async (_n: number) => ({ data: [{ user_id: 'user-wallet' }], error: null }),\n            }\n          }\n          return {\n            limit: async (_n: number) => ({ data: null, error: null }),\n          }\n        },\n      }),\n    }),\n  }\n  return { supabase }\n})\n\nimport { ChatWindow } from '@/components/chat/chat-window'\n\ndescribe('ChatWindow invite flow', () => {\n  beforeEach(() => {\n    mockInviteParticipants.mockReset()\n    ;(getProfileByUsername as jest.Mock).mockReset()\n    ;(getProfileByIdentifier as jest.Mock).mockReset()\n\n    // Resolve username '@alice' -> 'user-alice'\n    ;(getProfileByUsername as jest.Mock).mockImplementation(async (uname: string) => {\n      if (uname.replace(/^@/, '') === 'alice' || uname === 'alice') {\n        return { user_id: 'user-alice' }\n      }\n      return null\n    })\n\n    // Resolve email 'bob@example.com' -> 'user-bob'\n    ;(getProfileByIdentifier as jest.Mock).mockImplementation(async (identifier: string) => {\n      if (identifier === 'bob@example.com') {\n        return { user_id: 'user-bob' }\n      }\n      return null\n    })\n  })\n\n  const baseProps = {\n    chatId: 'abc',\n    onToggleSidebar: () => {},\n    sidebarCollapsed: false,\n  }\n\n  test('resolves identifiers and calls inviteParticipants with user IDs', async () => {\n    render(<ChatWindow {...baseProps} />)\n\n    // Wait until group detection enables the Invite button\n    const inviteBtn = await screen.findByTitle(/invite users/i)\n    fireEvent.click(inviteBtn)\n\n    await waitFor(() => {\n      expect(mockInviteParticipants).toHaveBeenCalledTimes(1)\n      expect(mockInviteParticipants).toHaveBeenCalledWith('abc', expect.arrayContaining([\n        'user-alice', // from username\n        'user-bob',   // from email\n        'user-wallet' // from wallet MSW handler\n      ]))\n    })\n  })\n})\n"],"names":["jest","mock","props","useRouter","push","fn","replace","prefetch","back","usePathname","useSearchParams","get","useConversations","conversations","id","title","created_at","updated_at","user_id","loading","error","inviteParticipants","mockInviteParticipants","useWebSocket","isConnected","messages","typingUsers","joinConversation","sendChatMessage","sendTyping","useIsMobile","useHaptics","triggerHaptic","undefined","InviteUsersDialog","isOpen","onClose","onInviteUsers","users","identifier","type","getProfileByUsername","getProfileByIdentifier","supabase","from","table","select","_sel","_opts","eq","col","_val","Promise","resolve","count","limit","_n","data","describe","beforeEach","mockReset","mockImplementation","uname","baseProps","chatId","onToggleSidebar","sidebarCollapsed","test","render","ChatWindow","inviteBtn","screen","findByTitle","fireEvent","click","waitFor","expect","toHaveBeenCalledTimes","toHaveBeenCalledWith","arrayContaining"],"mappings":"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"}