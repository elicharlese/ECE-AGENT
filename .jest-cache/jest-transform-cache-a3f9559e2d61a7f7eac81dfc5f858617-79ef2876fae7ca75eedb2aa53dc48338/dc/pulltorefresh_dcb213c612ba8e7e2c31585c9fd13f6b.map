{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/components/chat/pull-to-refresh.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useRef, forwardRef } from \"react\"\nimport { RefreshCw } from \"lucide-react\"\nimport { useHaptics } from \"@/hooks/use-haptics\"\n\ninterface PullToRefreshProps {\n  children: React.ReactNode\n  onRefresh: () => Promise<void>\n  threshold?: number\n  onScroll?: (e: React.UIEvent<HTMLDivElement>) => void\n}\n\nexport const PullToRefresh = forwardRef<HTMLDivElement, PullToRefreshProps>(function PullToRefresh(\n  { children, onRefresh, threshold = 80, onScroll }: PullToRefreshProps,\n  contentRef,\n) {\n  const [pullDistance, setPullDistance] = useState(0)\n  const [isRefreshing, setIsRefreshing] = useState(false)\n  const [canRefresh, setCanRefresh] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const { triggerHaptic } = useHaptics()\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    const container = containerRef.current\n    if (!container || container.scrollTop > 0) return\n\n    const touch = e.touches[0]\n    const startY = touch.clientY\n\n    const handleTouchMove = (e: TouchEvent) => {\n      const touch = e.touches[0]\n      const currentY = touch.clientY\n      const distance = Math.max(0, currentY - startY)\n\n      if (distance > 0 && container.scrollTop === 0) {\n        e.preventDefault()\n        setPullDistance(Math.min(distance * 0.5, threshold * 1.5))\n\n        if (distance > threshold && !canRefresh) {\n          setCanRefresh(true)\n          triggerHaptic(\"medium\")\n        } else if (distance <= threshold && canRefresh) {\n          setCanRefresh(false)\n        }\n      }\n    }\n\n    const handleTouchEnd = async () => {\n      if (canRefresh && !isRefreshing) {\n        setIsRefreshing(true)\n        triggerHaptic(\"heavy\")\n        try {\n          await onRefresh()\n        } finally {\n          setIsRefreshing(false)\n        }\n      }\n\n      setPullDistance(0)\n      setCanRefresh(false)\n      document.removeEventListener(\"touchmove\", handleTouchMove)\n      document.removeEventListener(\"touchend\", handleTouchEnd)\n    }\n\n    document.addEventListener(\"touchmove\", handleTouchMove, { passive: false })\n    document.addEventListener(\"touchend\", handleTouchEnd)\n  }\n\n  return (\n    <div ref={containerRef} className=\"relative h-full flex flex-col\" onTouchStart={handleTouchStart}>\n      {/* Pull indicator */}\n      <div\n        className=\"absolute top-0 left-0 right-0 flex items-center justify-center transition-transform duration-200 ease-out z-10\"\n        style={{\n          transform: `translateY(${pullDistance - 60}px)`,\n          opacity: pullDistance > 20 ? 1 : 0,\n        }}\n      >\n        <div className=\"bg-white dark:bg-gray-800 rounded-full p-3 shadow-lg border border-gray-200 dark:border-gray-700\">\n          <RefreshCw\n            className={`h-5 w-5 text-gray-600 dark:text-gray-300 ${\n              isRefreshing ? \"animate-spin\" : canRefresh ? \"text-blue-500\" : \"\"\n            }`}\n          />\n        </div>\n      </div>\n\n      {/* Content */}\n      <div\n        ref={contentRef}\n        onScroll={onScroll}\n        className=\"flex-1 overflow-y-auto hide-scrollbar pr-4 -mr-4 transition-transform duration-200 ease-out\"\n        style={{ transform: `translateY(${pullDistance}px)` }}\n      >\n        {children}\n      </div>\n    </div>\n  )\n})\n\n"],"names":["PullToRefresh","forwardRef","children","onRefresh","threshold","onScroll","contentRef","pullDistance","setPullDistance","useState","isRefreshing","setIsRefreshing","canRefresh","setCanRefresh","containerRef","useRef","triggerHaptic","useHaptics","handleTouchStart","e","container","current","scrollTop","touch","touches","startY","clientY","handleTouchMove","currentY","distance","Math","max","preventDefault","min","handleTouchEnd","document","removeEventListener","addEventListener","passive","div","ref","className","onTouchStart","style","transform","opacity","RefreshCw"],"mappings":"AAAA;;;;;+BAeaA;;;eAAAA;;;;uBAXgC;6BACnB;4BACC;AASpB,MAAMA,8BAAgBC,IAAAA,iBAAU,EAAqC,SAASD,cACnF,EAAEE,QAAQ,EAAEC,SAAS,EAAEC,YAAY,EAAE,EAAEC,QAAQ,EAAsB,EACrEC,UAAU;IAEV,MAAM,CAACC,cAAcC,gBAAgB,GAAGC,IAAAA,eAAQ,EAAC;IACjD,MAAM,CAACC,cAAcC,gBAAgB,GAAGF,IAAAA,eAAQ,EAAC;IACjD,MAAM,CAACG,YAAYC,cAAc,GAAGJ,IAAAA,eAAQ,EAAC;IAC7C,MAAMK,eAAeC,IAAAA,aAAM,EAAiB;IAC5C,MAAM,EAAEC,aAAa,EAAE,GAAGC,IAAAA,sBAAU;IAEpC,MAAMC,mBAAmB,CAACC;QACxB,MAAMC,YAAYN,aAAaO,OAAO;QACtC,IAAI,CAACD,aAAaA,UAAUE,SAAS,GAAG,GAAG;QAE3C,MAAMC,QAAQJ,EAAEK,OAAO,CAAC,EAAE;QAC1B,MAAMC,SAASF,MAAMG,OAAO;QAE5B,MAAMC,kBAAkB,CAACR;YACvB,MAAMI,QAAQJ,EAAEK,OAAO,CAAC,EAAE;YAC1B,MAAMI,WAAWL,MAAMG,OAAO;YAC9B,MAAMG,WAAWC,KAAKC,GAAG,CAAC,GAAGH,WAAWH;YAExC,IAAII,WAAW,KAAKT,UAAUE,SAAS,KAAK,GAAG;gBAC7CH,EAAEa,cAAc;gBAChBxB,gBAAgBsB,KAAKG,GAAG,CAACJ,WAAW,KAAKzB,YAAY;gBAErD,IAAIyB,WAAWzB,aAAa,CAACQ,YAAY;oBACvCC,cAAc;oBACdG,cAAc;gBAChB,OAAO,IAAIa,YAAYzB,aAAaQ,YAAY;oBAC9CC,cAAc;gBAChB;YACF;QACF;QAEA,MAAMqB,iBAAiB;YACrB,IAAItB,cAAc,CAACF,cAAc;gBAC/BC,gBAAgB;gBAChBK,cAAc;gBACd,IAAI;oBACF,MAAMb;gBACR,SAAU;oBACRQ,gBAAgB;gBAClB;YACF;YAEAH,gBAAgB;YAChBK,cAAc;YACdsB,SAASC,mBAAmB,CAAC,aAAaT;YAC1CQ,SAASC,mBAAmB,CAAC,YAAYF;QAC3C;QAEAC,SAASE,gBAAgB,CAAC,aAAaV,iBAAiB;YAAEW,SAAS;QAAM;QACzEH,SAASE,gBAAgB,CAAC,YAAYH;IACxC;IAEA,qBACE,sBAACK;QAAIC,KAAK1B;QAAc2B,WAAU;QAAgCC,cAAcxB;;0BAE9E,qBAACqB;gBACCE,WAAU;gBACVE,OAAO;oBACLC,WAAW,CAAC,WAAW,EAAErC,eAAe,GAAG,GAAG,CAAC;oBAC/CsC,SAAStC,eAAe,KAAK,IAAI;gBACnC;0BAEA,cAAA,qBAACgC;oBAAIE,WAAU;8BACb,cAAA,qBAACK,sBAAS;wBACRL,WAAW,CAAC,yCAAyC,EACnD/B,eAAe,iBAAiBE,aAAa,kBAAkB,GAChE,CAAC;;;;0BAMR,qBAAC2B;gBACCC,KAAKlC;gBACLD,UAAUA;gBACVoC,WAAU;gBACVE,OAAO;oBAAEC,WAAW,CAAC,WAAW,EAAErC,aAAa,GAAG,CAAC;gBAAC;0BAEnDL;;;;AAIT"}