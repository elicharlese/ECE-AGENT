{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/jest.setup.ts"],"sourcesContent":["import '@testing-library/jest-dom';\nimport 'whatwg-fetch';\n\n// Polyfill TextEncoder/TextDecoder for libraries expecting them in JSDOM/Node\n// Must be before importing MSW server\n// @ts-ignore\nif (typeof (global as any).TextEncoder === 'undefined') {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const { TextEncoder } = require('util')\n  // @ts-ignore\n  ;(global as any).TextEncoder = TextEncoder\n}\n// @ts-ignore\nif (typeof (global as any).TextDecoder === 'undefined') {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const { TextDecoder } = require('util')\n  // @ts-ignore\n  ;(global as any).TextDecoder = TextDecoder\n}\n\n// MSW: set up conditionally to avoid hard failure if subpath exports are unavailable\n// in certain package manager or Node environments. We'll require at runtime.\nlet __mswServer: { listen: () => void; resetHandlers: () => void; close: () => void } | null = null\ntry {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const { setupServer } = require('msw/node')\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const { handlers } = require('./__tests__/msw/handlers')\n  __mswServer = setupServer(...handlers)\n} catch (err) {\n  // eslint-disable-next-line no-console\n  console.warn('[jest.setup] MSW not available, continuing without request interception')\n}\n\n// Ensure fetch API classes exist on global for modules that reference them at import time\n// Next's next/server defines classes extending global Request/Response during import\n// which can fail if not set up first in JSDOM.\n// @ts-ignore\nif (typeof globalThis.Request === 'undefined' && typeof window !== 'undefined') {\n  // @ts-ignore\n  globalThis.Request = (window as any).Request\n}\n// @ts-ignore\nif (typeof globalThis.Response === 'undefined' && typeof window !== 'undefined') {\n  // @ts-ignore\n  globalThis.Response = (window as any).Response\n}\n// @ts-ignore\nif (typeof globalThis.Headers === 'undefined' && typeof window !== 'undefined') {\n  // @ts-ignore\n  globalThis.Headers = (window as any).Headers\n}\n\n// Add static Response.json if missing (NextResponse.json relies on it)\n// @ts-ignore\nif (typeof globalThis.Response !== 'undefined' && typeof (globalThis.Response as any).json !== 'function') {\n  // @ts-ignore\n  ;(globalThis.Response as any).json = (data: any, init?: ResponseInit) => {\n    const headers = new Headers(init?.headers || {})\n    if (!headers.has('content-type')) headers.set('content-type', 'application/json')\n    return new Response(JSON.stringify(data), { ...init, headers })\n  }\n}\n\n// Polyfill ResizeObserver for Radix UI components in tests\nclass MockResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n}\n// @ts-ignore\nif (typeof (global as any).ResizeObserver === 'undefined') {\n  // @ts-ignore\n  ;(global as any).ResizeObserver = MockResizeObserver\n}\n\n// Polyfill scrollIntoView for JSDOM elements used in tests\n// @ts-ignore\nif (typeof window !== 'undefined') {\n  const proto = (window.HTMLElement && window.HTMLElement.prototype) || undefined\n  // @ts-ignore\n  if (proto && typeof proto.scrollIntoView !== 'function') {\n    // @ts-ignore\n    proto.scrollIntoView = function (_options?: ScrollIntoViewOptions) { /* no-op for tests */ }\n  }\n}\n\n// Start MSW before all tests, reset after each, and close after all\nif (__mswServer) {\n  beforeAll(() => __mswServer!.listen())\n  afterEach(() => __mswServer!.resetHandlers())\n  afterAll(() => __mswServer!.close())\n}\n\n// Mock 'vaul' drawer primitives used by components/ui/drawer.tsx so tests\n// don't require the real dependency or DOM behaviors.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\njest.mock('vaul', () => {\n  // Use require to avoid ESM interop issues in Jest\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const React = require('react') as typeof import('react')\n  const passthrough = (tag: any) => (props: any) => React.createElement(tag || 'div', props)\n  return {\n    Drawer: {\n      Root: passthrough('div'),\n      Trigger: passthrough('button'),\n      Portal: passthrough('div'),\n      Close: passthrough('button'),\n      Overlay: passthrough('div'),\n      Content: passthrough('div'),\n      Title: passthrough('div'),\n      Description: passthrough('div'),\n    },\n  }\n}, { virtual: true })\n\n// Mock CreditsPopover to avoid act() warnings from fetch calls\njest.mock('@/components/credits/CreditsPopover', () => {\n  const React = require('react') as typeof import('react')\n  return {\n    CreditsPopover: () => React.createElement('div', { \n      'data-testid': 'credits-popover-mock',\n      'aria-label': 'Credits'\n    }, React.createElement('span', null, '42'))\n  }\n})\n\n// Mock ESM-only modules that Jest struggles to transform from node_modules\n// react-markdown: simple passthrough that renders children\njest.mock('react-markdown', () => {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const React = require('react') as typeof import('react')\n  return {\n    __esModule: true,\n    default: ({ children }: { children: any }) =>\n      React.createElement('div', { 'data-testid': 'react-markdown-mock' }, children),\n  }\n})\n\n// react-resizable-panels: pass-through wrappers so layout renders in tests\njest.mock('react-resizable-panels', () => {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const React = require('react') as typeof import('react')\n  const PassThrough = ({ children, ...props }: any) => React.createElement('div', props, children)\n  return {\n    __esModule: true,\n    PanelGroup: PassThrough,\n    Panel: PassThrough,\n    PanelResizeHandle: PassThrough,\n  }\n})\n\n// react-syntax-highlighter and its styles: provide minimal mocks\njest.mock('react-syntax-highlighter', () => {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const React = require('react') as typeof import('react')\n  return {\n    __esModule: true,\n    Prism: ({ children }: any) => React.createElement('pre', { 'data-testid': 'syntax-highlighter-mock' }, children),\n  }\n})\n\njest.mock('react-syntax-highlighter/dist/esm/styles/prism', () => ({\n  __esModule: true,\n  oneDark: {},\n}))\n"],"names":["jest","mock","React","require","passthrough","tag","props","createElement","Drawer","Root","Trigger","Portal","Close","Overlay","Content","Title","Description","virtual","CreditsPopover","__esModule","default","children","PassThrough","PanelGroup","Panel","PanelResizeHandle","Prism","oneDark","global","TextEncoder","TextDecoder","__mswServer","setupServer","handlers","err","console","warn","globalThis","Request","window","Response","Headers","json","data","init","headers","has","set","JSON","stringify","MockResizeObserver","observe","unobserve","disconnect","ResizeObserver","proto","HTMLElement","prototype","undefined","scrollIntoView","_options","beforeAll","listen","afterEach","resetHandlers","afterAll","close"],"mappings":"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"}