{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/components/chat/DesktopMessageInput.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Bot, Plus, Send, X, Calculator, Calendar, GamepadIcon, Sparkles, Zap, Brain } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { CreditBadge } from \"@/components/credits/CreditBadge\"\nimport { BuyCreditsButton } from \"@/components/credits/BuyCreditsButton\"\nimport { CREDITS_ENABLED, CREDITS_PER_AI_REQUEST } from \"@/lib/pricing\"\nimport { EmojiPicker } from \"./emoji-picker\"\nimport { FileUpload } from \"./file-upload\"\nimport { GifPicker } from \"./gif-picker\"\n\nexport interface DesktopMessageInputProps {\n  value: string\n  onChange: (value: string) => void\n  onSend: () => void\n  onEmojiSelect?: (emoji: string) => void\n  onFileSelect?: (file: File, type: string) => void\n  onGifSelect?: (gif: {\n    id: string\n    title: string\n    url: string\n    preview_url: string\n    width: number\n    height: number\n  }) => void\n  onLaunchApp?: (appId: string, appName: string) => void\n  onAgentToggle?: (enabled: boolean) => void\n  placeholder?: string\n}\n\nexport function DesktopMessageInput({\n  value,\n  onChange,\n  onSend,\n  onEmojiSelect, // reserved for parity with mobile\n  onFileSelect, // reserved for parity with mobile\n  onGifSelect, // reserved for parity with mobile\n  onLaunchApp, // reserved for parity with mobile\n  onAgentToggle,\n  placeholder = \"Type a message...\",\n}: DesktopMessageInputProps) {\n  const [agentMode, setAgentMode] = useState(false)\n  const [isExpanded, setIsExpanded] = useState(false)\n  const [showActions, setShowActions] = useState(false)\n  const textareaRef = useRef<HTMLTextAreaElement>(null)\n  const [activeTab, setActiveTab] = useState<\"media\" | \"apps\" | \"agents\">(\"media\")\n\n  const quickApps = [\n    { id: \"calculator\", name: \"Calculator\", icon: Calculator, color: \"bg-blue-500\" },\n    { id: \"tic-tac-toe\", name: \"Tic Tac Toe\", icon: GamepadIcon, color: \"bg-green-500\" },\n    { id: \"event-planner\", name: \"Event Planner\", icon: Calendar, color: \"bg-purple-500\" },\n  ]\n\n  const aiAgents = [\n    {\n      id: \"smart-assistant\",\n      name: \"Smart Assistant\",\n      icon: Brain,\n      color: \"bg-indigo-500\",\n      description: \"General AI helper\",\n    },\n    {\n      id: \"code-companion\",\n      name: \"Code Companion\",\n      icon: Zap,\n      color: \"bg-orange-500\",\n      description: \"Programming assistant\",\n    },\n    {\n      id: \"creative-writer\",\n      name: \"Creative Writer\",\n      icon: Sparkles,\n      color: \"bg-pink-500\",\n      description: \"Writing & content\",\n    },\n  ]\n\n  const handleAppLaunch = (appId: string, appName: string) => {\n    onLaunchApp?.(appId, appName)\n    setShowActions(false)\n  }\n\n  // Auto-resize textarea for desktop too\n  useEffect(() => {\n    const el = textareaRef.current\n    if (el) {\n      el.style.height = \"auto\"\n      const h = el.scrollHeight\n      el.style.height = `${Math.min(h, 160)}px`\n      setIsExpanded(h > 48)\n    }\n  }, [value])\n\n  const handleSend = () => {\n    if (!value.trim()) return\n    onSend()\n    setIsExpanded(false)\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      // Cmd/Ctrl+Enter sends\n      if (e.metaKey || e.ctrlKey) {\n        e.preventDefault()\n        handleSend()\n        return\n      }\n      // Enter sends; Shift+Enter for newline\n      if (!e.shiftKey) {\n        e.preventDefault()\n        handleSend()\n      }\n    }\n  }\n\n  const handleAgentToggle = () => {\n    const next = !agentMode\n    setAgentMode(next)\n    onAgentToggle?.(next)\n  }\n\n  const toggleActions = () => setShowActions(v => !v)\n\n  return (\n    <div className=\"border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\">\n      {/* Credits UI aligned to the top-right for desktop */}\n      {CREDITS_ENABLED && (\n        <div className=\"px-4 pt-3 pb-0 flex items-center gap-2 justify-end\">\n          <CreditBadge />\n          <BuyCreditsButton size=\"sm\" />\n        </div>\n      )}\n\n      {/* Action panel (collapsed by default) */}\n      {showActions && (\n        <div className=\"border-b border-gray-200 dark:border-gray-700\">\n          {/* Tabs header */}\n          <div className=\"flex items-center justify-between px-3 py-2 bg-gray-50 dark:bg-gray-700\">\n            <div className=\"flex items-center gap-1\">\n              <Button\n                variant={activeTab === \"media\" ? \"default\" : \"ghost\"}\n                size=\"sm\"\n                onClick={() => setActiveTab(\"media\")}\n                className=\"text-xs\"\n              >\n                Media\n              </Button>\n              <Button\n                variant={activeTab === \"apps\" ? \"default\" : \"ghost\"}\n                size=\"sm\"\n                onClick={() => setActiveTab(\"apps\")}\n                className=\"text-xs\"\n              >\n                Apps\n              </Button>\n              <Button\n                variant={activeTab === \"agents\" ? \"default\" : \"ghost\"}\n                size=\"sm\"\n                onClick={() => setActiveTab(\"agents\")}\n                className=\"text-xs\"\n              >\n                Agents\n              </Button>\n            </div>\n            <Button variant=\"ghost\" size=\"sm\" onClick={toggleActions}>\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n\n          {/* Tab content */}\n          <div className=\"p-3\">\n            {activeTab === \"media\" && (\n              <div className=\"space-y-3\">\n                <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Media & Content</div>\n                <div className=\"flex items-center gap-2\">\n                  {onFileSelect && <FileUpload onFileSelect={onFileSelect} />}\n                  {onEmojiSelect && <EmojiPicker onEmojiSelect={onEmojiSelect} />}\n                  {onGifSelect && <GifPicker onGifSelect={onGifSelect} />}\n                </div>\n              </div>\n            )}\n\n            {activeTab === \"apps\" && (\n              <div className=\"space-y-3\">\n                <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Quick Apps</div>\n                <div className=\"grid grid-cols-3 gap-2\">\n                  {quickApps.map((app) => (\n                    <Button\n                      key={app.id}\n                      variant=\"outline\"\n                      className=\"flex flex-col items-center gap-2 h-auto py-3 bg-transparent\"\n                      onClick={() => handleAppLaunch(app.id, app.name)}\n                    >\n                      <div className={`p-2 rounded-full ${app.color} text-white`}>\n                        <app.icon className=\"h-4 w-4\" />\n                      </div>\n                      <span className=\"text-xs\">{app.name}</span>\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {activeTab === \"agents\" && (\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">AI Agents</div>\n                  <Badge variant={agentMode ? \"default\" : \"secondary\"} className=\"text-xs\">\n                    {agentMode ? \"Active\" : \"Inactive\"}\n                  </Badge>\n                </div>\n                <div className=\"space-y-2\">\n                  {aiAgents.map((agent) => (\n                    <Button\n                      key={agent.id}\n                      variant=\"outline\"\n                      className=\"flex items-center gap-3 w-full justify-start h-auto py-3 bg-transparent\"\n                      onClick={() => handleAppLaunch(agent.id, agent.name)}\n                    >\n                      <div className={`p-2 rounded-full ${agent.color} text-white`}>\n                        <agent.icon className=\"h-4 w-4\" />\n                      </div>\n                      <div className=\"flex flex-col items-start\">\n                        <span className=\"text-sm font-medium\">{agent.name}</span>\n                        <span className=\"text-xs text-gray-500\">{agent.description}</span>\n                      </div>\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      <div className=\"px-4 py-3 flex items-end gap-3\">\n        {!showActions && (\n          <Button variant=\"ghost\" size=\"sm\" onClick={toggleActions} aria-label=\"Open actions\">\n            <Plus className=\"h-4 w-4\" />\n          </Button>\n        )}\n\n        <Button\n          variant={agentMode ? \"default\" : \"ghost\"}\n          size=\"sm\"\n          onClick={handleAgentToggle}\n          className={agentMode ? \"bg-indigo-500 hover:bg-indigo-600 text-white\" : \"\"}\n          aria-label={agentMode ? \"Disable AI mode\" : \"Enable AI mode\"}\n        >\n          <Bot className=\"h-4 w-4\" />\n        </Button>\n\n        <div className=\"flex-1 relative\">\n          <Textarea\n            ref={textareaRef}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            onKeyDown={handleKeyDown}\n            placeholder={agentMode ? \"Ask AI or type a message...\" : placeholder}\n            className={`\n              resize-none border-0 bg-gray-50 dark:bg-gray-700 rounded-2xl px-4 py-3\n              min-h-[48px] max-h-[160px] text-sm leading-5\n              focus:ring-2 focus:ring-blue-500 focus:bg-white dark:focus:bg-gray-600\n              ${agentMode ? \"ring-2 ring-indigo-200 dark:ring-indigo-800\" : \"\"}\n            `}\n            rows={1}\n            aria-label=\"Message input\"\n          />\n\n          {agentMode && (\n            <div className=\"absolute -top-6 left-2 flex items-center gap-1\">\n              <Bot className=\"h-3 w-3 text-indigo-500\" />\n              <span className=\"text-xs text-indigo-600 dark:text-indigo-400\">AI Mode</span>\n            </div>\n          )}\n\n          {/* Character count and credit estimate with anti-overlap logic */}\n          {value.length > 100 && (\n            <div className=\"absolute -top-6 right-2 text-xs text-gray-500 dark:text-gray-400\">{value.length}/1000</div>\n          )}\n          {CREDITS_ENABLED && (\n            <div\n              className={\n                agentMode\n                  ? value.length > 100\n                    ? \"absolute -top-10 right-2 text-xs text-gray-500 dark:text-gray-400\"\n                    : \"absolute -top-6 right-2 text-xs text-gray-500 dark:text-gray-400\"\n                  : \"absolute -top-6 left-2 text-xs text-gray-500 dark:text-gray-400\"\n              }\n            >\n              Est. credits: {CREDITS_PER_AI_REQUEST}\n            </div>\n          )}\n        </div>\n\n        <Button\n          onClick={handleSend}\n          disabled={!value.trim()}\n          aria-label=\"Send message\"\n          className={`\n            rounded-full h-8 w-8 p-0\n            ${agentMode ? \"bg-indigo-500 hover:bg-indigo-600\" : \"bg-blue-500 hover:bg-blue-600\"} text-white\n            disabled:bg-gray-300 dark:disabled:bg-gray-600\n            transition-all duration-200\n            ${value.trim() ? \"scale-100\" : \"scale-95 opacity-50\"}\n          `}\n        >\n          <Send className=\"h-4 w-4\" />\n        </Button>\n      </div>\n    </div>\n  )\n}\n"],"names":["DesktopMessageInput","value","onChange","onSend","onEmojiSelect","onFileSelect","onGifSelect","onLaunchApp","onAgentToggle","placeholder","agentMode","setAgentMode","useState","isExpanded","setIsExpanded","showActions","setShowActions","textareaRef","useRef","activeTab","setActiveTab","quickApps","id","name","icon","Calculator","color","GamepadIcon","Calendar","aiAgents","Brain","description","Zap","Sparkles","handleAppLaunch","appId","appName","useEffect","el","current","style","height","h","scrollHeight","Math","min","handleSend","trim","handleKeyDown","e","key","metaKey","ctrlKey","preventDefault","shiftKey","handleAgentToggle","next","toggleActions","v","div","className","CREDITS_ENABLED","CreditBadge","BuyCreditsButton","size","Button","variant","onClick","X","FileUpload","EmojiPicker","GifPicker","map","app","span","Badge","agent","aria-label","Plus","Bot","Textarea","ref","target","onKeyDown","rows","length","CREDITS_PER_AI_REQUEST","disabled","Send"],"mappings":"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"}