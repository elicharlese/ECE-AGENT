{"version":3,"sources":["/Users/elicharlese/CascadeProjects/AGENT/components/chat/message-bubble.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { MediaPreview } from \"./media-preview\"\nimport { MessageActions } from \"./message-actions\"\nimport { SwipeActions } from \"./swipe-actions\"\nimport { Button } from \"@/components/ui/button\"\nimport { Download, FileText, Pin, Heart, ImageIcon, Copy } from \"lucide-react\"\nimport { useHaptics } from \"@/hooks/use-haptics\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { MessageReactions } from \"./message-reactions\"\nimport ReactMarkdown from \"react-markdown\"\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { oneDark } from \"react-syntax-highlighter/dist/esm/styles/prism\"\nimport { Textarea } from \"@/components/ui/textarea\"\n\ninterface Message {\n  id: string\n  content: string\n  timestamp: Date\n  senderId: string\n  senderName: string\n  type: \"text\" | \"image\" | \"video\" | \"audio\" | \"document\" | \"system\" | \"gif\" | \"app\"\n  isOwn: boolean\n  mediaUrl?: string\n  fileName?: string\n  fileSize?: string\n  isPinned?: boolean\n  isLiked?: boolean\n  likeCount?: number\n  reactions?: Array<{\n    emoji: string\n    count: number\n    users: string[]\n    hasReacted: boolean\n  }>\n  gifData?: {\n    id: string\n    title: string\n    url: string\n    preview_url: string\n    width: number\n    height: number\n  }\n}\n\ninterface MessageBubbleProps {\n  message: Message\n  onUpdateMessage?: (id: string, content: string) => Promise<void> | void\n}\n\nexport function MessageBubble({ message, onUpdateMessage }: MessageBubbleProps) {\n  const [isPinned, setIsPinned] = useState(message.isPinned || false)\n  const [isLiked, setIsLiked] = useState(message.isLiked || false)\n  const [likeCount, setLikeCount] = useState(message.likeCount || 0)\n  const [reactions, setReactions] = useState(message.reactions || [])\n  const [showReactionPicker, setShowReactionPicker] = useState(false)\n  const [isEditing, setIsEditing] = useState(false)\n  const [editValue, setEditValue] = useState(message.content)\n  const [saving, setSaving] = useState(false)\n  const { triggerHaptic } = useHaptics()\n  const isMobile = useIsMobile()\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })\n  }\n\n  const handlePin = (messageId: string) => {\n    setIsPinned(true)\n    triggerHaptic(\"medium\")\n    console.log(\"Pinning message:\", messageId)\n  }\n\n  const handleUnpin = (messageId: string) => {\n    setIsPinned(false)\n    triggerHaptic(\"light\")\n    console.log(\"Unpinning message:\", messageId)\n  }\n\n  const handleLike = (messageId: string) => {\n    setIsLiked(true)\n    setLikeCount((prev) => prev + 1)\n    triggerHaptic(\"light\")\n    console.log(\"Liking message:\", messageId)\n  }\n\n  const handleUnlike = (messageId: string) => {\n    setIsLiked(false)\n    setLikeCount((prev) => Math.max(0, prev - 1))\n    triggerHaptic(\"selection\")\n    console.log(\"Unliking message:\", messageId)\n  }\n\n  const handleReply = (messageId: string) => {\n    triggerHaptic(\"medium\")\n    console.log(\"Replying to message:\", messageId)\n  }\n\n  const handleForward = (messageId: string) => {\n    triggerHaptic(\"medium\")\n    console.log(\"Forwarding message:\", messageId)\n  }\n\n  const handleCopy = (messageId: string) => {\n    navigator.clipboard.writeText(message.content)\n    triggerHaptic(\"light\")\n    console.log(\"Copied message:\", messageId)\n  }\n\n  const handleDelete = (messageId: string) => {\n    triggerHaptic(\"heavy\")\n    console.log(\"Deleting message:\", messageId)\n  }\n\n  const handleAddReaction = (messageId: string, emoji: string) => {\n    setReactions((prev) => {\n      const existingReaction = prev.find((r) => r.emoji === emoji)\n      if (existingReaction) {\n        return prev.map((r) => (r.emoji === emoji ? { ...r, count: r.count + 1, hasReacted: true } : r))\n      } else {\n        return [...prev, { emoji, count: 1, users: [\"current-user\"], hasReacted: true }]\n      }\n    })\n    console.log(\"Adding reaction:\", emoji, \"to message:\", messageId)\n  }\n\n  const handleRemoveReaction = (messageId: string, emoji: string) => {\n    setReactions((prev) => {\n      return prev\n        .map((r) => (r.emoji === emoji ? { ...r, count: Math.max(0, r.count - 1), hasReacted: false } : r))\n        .filter((r) => r.count > 0)\n    })\n    console.log(\"Removing reaction:\", emoji, \"from message:\", messageId)\n  }\n\n  const handleLongPress = () => {\n    if (isMobile) {\n      setShowReactionPicker(true)\n      triggerHaptic(\"medium\")\n    }\n  }\n\n  const handleDoubleClick = () => {\n    if (!isMobile) {\n      // Quick reaction with heart\n      handleAddReaction(message.id, \"❤️\")\n    }\n  }\n\n  // Keep edit value in sync if the parent updates the message content (optimistic update)\n  useEffect(() => {\n    if (!isEditing) setEditValue(message.content)\n  }, [message.content, isEditing])\n\n  const handleEditSave = async () => {\n    if (!onUpdateMessage) return setIsEditing(false)\n    const trimmed = editValue.trim()\n    if (!trimmed) return // do not allow empty save\n    try {\n      setSaving(true)\n      await onUpdateMessage(message.id, trimmed)\n      setIsEditing(false)\n      triggerHaptic(\"success\")\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  const handleEditCancel = () => {\n    setEditValue(message.content)\n    setIsEditing(false)\n    triggerHaptic(\"selection\")\n  }\n\n  if (message.type === \"system\") {\n    return (\n      <div className=\"flex justify-center\">\n        <span className=\"text-xs text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-800 px-3 py-1 rounded-full\">\n          {message.content}\n        </span>\n      </div>\n    )\n  }\n\n  // Markdown renderer with code block copy support\n  const CodeRenderer = ({ inline, className, children }: { inline?: boolean; className?: string; children: any }) => {\n    const [copied, setCopied] = useState(false)\n    const txt = Array.isArray(children) ? children.join(\"\") : String(children)\n    const match = /language-(\\w+)/.exec(className || \"\")\n\n    if (inline) {\n      return <code className=\"px-1 py-0.5 rounded bg-gray-200 dark:bg-gray-700 text-[0.85em]\">{children}</code>\n    }\n\n    const handleCopy = async () => {\n      try {\n        await navigator.clipboard.writeText(txt)\n        setCopied(true)\n        setTimeout(() => setCopied(false), 1200)\n      } catch (e) {\n        console.error(\"Copy failed\", e)\n      }\n    }\n\n    return (\n      <div className=\"relative group\">\n        <button\n          type=\"button\"\n          onClick={handleCopy}\n          className=\"absolute right-2 top-2 z-10 text-xs bg-black/60 text-white px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity\"\n          aria-label=\"Copy code\"\n        >\n          {copied ? \"Copied\" : <span className=\"inline-flex items-center gap-1\"><Copy className=\"h-3 w-3\" /> Copy</span>}\n        </button>\n        <SyntaxHighlighter\n          language={(match && match[1]) || undefined}\n          style={oneDark as any}\n          customStyle={{ margin: 0, borderRadius: 8, padding: \"12px\" }}\n          wrapLongLines\n        >\n          {txt.replace(/\\n$/, \"\")}\n        </SyntaxHighlighter>\n      </div>\n    )\n  }\n\n  const renderMessageContent = () => {\n    switch (message.type) {\n      case \"image\":\n        return (\n          <div className=\"max-w-xs\">\n            <MediaPreview\n              src={message.mediaUrl || \"/placeholder.svg?height=200&width=300\"}\n              type=\"image\"\n              alt={message.content}\n              className=\"w-full h-48\"\n            />\n            {message.content && <p className=\"mt-2 text-sm\">{message.content}</p>}\n          </div>\n        )\n\n      case \"video\":\n        return (\n          <div className=\"max-w-sm\">\n            <MediaPreview\n              src={message.mediaUrl || \"/placeholder.svg?height=200&width=300\"}\n              type=\"video\"\n              className=\"w-full h-48\"\n            />\n            {message.content && <p className=\"mt-2 text-sm\">{message.content}</p>}\n          </div>\n        )\n\n      case \"audio\":\n        return (\n          <div className=\"max-w-xs\">\n            <MediaPreview src={message.mediaUrl || \"\"} type=\"audio\" className=\"w-full\" />\n            {message.content && <p className=\"mt-2 text-sm\">{message.content}</p>}\n          </div>\n        )\n\n      case \"document\":\n        return (\n          <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-3 max-w-xs\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"bg-blue-500 rounded-lg p-2\">\n                <FileText className=\"h-4 w-4 text-white\" />\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-medium truncate\">{message.fileName || \"Document\"}</p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">{message.fileSize || \"Unknown size\"}</p>\n              </div>\n              <Button variant=\"ghost\" size=\"sm\">\n                <Download className=\"h-4 w-4\" />\n              </Button>\n            </div>\n            {message.content && <p className=\"mt-2 text-sm\">{message.content}</p>}\n          </div>\n        )\n\n      case \"gif\":\n        return (\n          <div className=\"max-w-xs\">\n            <div className=\"relative rounded-lg overflow-hidden bg-gray-100 dark:bg-gray-800\">\n              <img\n                src={message.gifData?.url || message.mediaUrl || \"/placeholder.svg?height=200&width=300\"}\n                alt={message.gifData?.title || message.content || \"GIF\"}\n                className=\"w-full h-auto max-h-64 object-cover\"\n                loading=\"lazy\"\n              />\n              {/* GIF indicator */}\n              <div className=\"absolute top-2 left-2\">\n                <Badge variant=\"secondary\" className=\"text-xs px-2 py-1 bg-black/70 text-white border-0\">\n                  <ImageIcon className=\"h-3 w-3 mr-1\" />\n                  GIF\n                </Badge>\n              </div>\n              {/* GIF title overlay */}\n              {message.gifData?.title && (\n                <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-2\">\n                  <p className=\"text-white text-xs font-medium truncate\">{message.gifData.title}</p>\n                </div>\n              )}\n            </div>\n            {message.content && message.content !== message.gifData?.title && (\n              <p className=\"mt-2 text-sm\">{message.content}</p>\n            )}\n          </div>\n        )\n\n      default:\n        if (isEditing && message.isOwn) {\n          return (\n            <div className=\"space-y-2\">\n              <Textarea\n                value={editValue}\n                onChange={(e) => setEditValue(e.target.value)}\n                rows={Math.min(8, Math.max(2, Math.ceil(editValue.length / 40)))}\n                onKeyDown={(e) => {\n                  if (e.key === \"Enter\" && !e.shiftKey) {\n                    e.preventDefault()\n                    void handleEditSave()\n                  } else if (e.key === \"Escape\") {\n                    e.preventDefault()\n                    handleEditCancel()\n                  }\n                }}\n                className=\"min-h-[60px] text-sm\"\n                aria-label=\"Edit message\"\n                autoFocus\n              />\n              <div className={`flex items-center gap-2 ${message.isOwn ? \"justify-end\" : \"justify-start\"}`}>\n                <Button size=\"sm\" onClick={() => void handleEditSave()} disabled={saving || !editValue.trim()}>\n                  Save\n                </Button>\n                <Button size=\"sm\" variant=\"ghost\" onClick={handleEditCancel} disabled={saving}>\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          )\n        }\n        return (\n          <div className=\"whitespace-pre-wrap break-words text-sm leading-5\">\n            <ReactMarkdown\n              // Only transform code; keep other elements simple\n              components={{\n                code: CodeRenderer as any,\n                a: ({ href, children }) => (\n                  <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline text-blue-600 dark:text-blue-400\">\n                    {children}\n                  </a>\n                ),\n              }}\n            >\n              {message.content}\n            </ReactMarkdown>\n          </div>\n        )\n    }\n  }\n\n  const messageContent = (\n    <div className={`flex gap-2 group ${message.isOwn ? \"justify-end\" : \"justify-start\"}`}>\n      {!message.isOwn && (\n        <Avatar className={`${isMobile ? \"h-8 w-8\" : \"h-6 w-6\"} mt-1`}>\n          <AvatarImage />\n          <AvatarFallback className=\"bg-gradient-to-br from-blue-500 to-purple-600 text-white text-xs\">\n            {message.senderName\n              .split(\" \")\n              .map((n) => n[0])\n              .join(\"\")}\n          </AvatarFallback>\n        </Avatar>\n      )}\n\n      <div className={`max-w-xs lg:max-w-md ${message.isOwn ? \"order-1\" : \"\"}`}>\n        {/* Message indicators */}\n        <div className={`flex items-center gap-1 mb-1 ${message.isOwn ? \"justify-end\" : \"justify-start\"}`}>\n          {isPinned && (\n            <Badge variant=\"secondary\" className=\"text-xs px-1 py-0\">\n              <Pin className=\"h-2 w-2 mr-1\" />\n              Pinned\n            </Badge>\n          )}\n        </div>\n\n        <div className=\"relative\">\n          {/* MessageReactions moved above the message content */}\n          <MessageReactions\n            messageId={message.id}\n            reactions={reactions}\n            onAddReaction={handleAddReaction}\n            onRemoveReaction={handleRemoveReaction}\n            showPicker={showReactionPicker}\n            onTogglePicker={() => setShowReactionPicker(false)}\n          />\n\n          <div\n            className={`\n            ${message.type === \"text\" ? `${isMobile ? \"px-3 py-2\" : \"px-4 py-2\"}` : \"p-1\"} rounded-2xl text-sm\n            ${\n              message.isOwn\n                ? `${message.type === \"text\" ? \"bg-blue-500 text-white\" : \"bg-blue-50 dark:bg-blue-900/20\"} rounded-br-md`\n                : `${message.type === \"text\" ? \"bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white\" : \"bg-white dark:bg-gray-800\"} rounded-bl-md`\n            }\n          `}\n            onTouchStart={handleLongPress}\n            onDoubleClick={handleDoubleClick}\n            onContextMenu={(e) => {\n              e.preventDefault()\n              setShowReactionPicker(true)\n            }}\n          >\n            {renderMessageContent()}\n          </div>\n\n          {!isMobile && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className={`absolute top-1 ${message.isOwn ? \"-left-10\" : \"-right-10\"} opacity-0 group-hover:opacity-100 transition-opacity h-6 w-6 p-0 rounded-full`}\n              onClick={() => setShowReactionPicker(!showReactionPicker)}\n            >\n              <span className=\"text-sm\">😊</span>\n            </Button>\n          )}\n\n          {/* Message Actions - Hidden on mobile, shown via swipe */}\n          {!isMobile && (\n            <div className={`absolute top-1 ${message.isOwn ? \"-left-8\" : \"-right-8\"}`}>\n              <MessageActions\n                messageId={message.id}\n                isPinned={isPinned}\n                isLiked={isLiked}\n                onPin={handlePin}\n                onUnpin={handleUnpin}\n                onLike={handleLike}\n                onUnlike={handleUnlike}\n                onReply={handleReply}\n                onForward={handleForward}\n                onCopy={handleCopy}\n                onDelete={handleDelete}\n                onEdit={message.isOwn && message.type === \"text\" && onUpdateMessage ? () => setIsEditing(true) : undefined}\n              />\n            </div>\n          )}\n        </div>\n\n        {/* Message footer */}\n        <div className={`flex items-center gap-2 mt-1 ${message.isOwn ? \"justify-end\" : \"justify-start\"}`}>\n          <span className=\"text-xs text-gray-500 dark:text-gray-400\">{formatTime(message.timestamp)}</span>\n          {likeCount > 0 && (\n            <div className=\"flex items-center gap-1\">\n              <Heart className=\"h-3 w-3 text-red-500 fill-current\" />\n              <span className=\"text-xs text-gray-500 dark:text-gray-400\">{likeCount}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n\n  // Wrap with swipe actions on mobile\n  if (isMobile) {\n    return (\n      <SwipeActions\n        onReply={() => handleReply(message.id)}\n        onPin={isPinned ? () => handleUnpin(message.id) : () => handlePin(message.id)}\n        onLike={isLiked ? () => handleUnlike(message.id) : () => handleLike(message.id)}\n        onDelete={() => handleDelete(message.id)}\n      >\n        {messageContent}\n      </SwipeActions>\n    )\n  }\n\n  return messageContent\n}\n"],"names":["MessageBubble","message","onUpdateMessage","isPinned","setIsPinned","useState","isLiked","setIsLiked","likeCount","setLikeCount","reactions","setReactions","showReactionPicker","setShowReactionPicker","isEditing","setIsEditing","editValue","setEditValue","content","saving","setSaving","triggerHaptic","useHaptics","isMobile","useIsMobile","formatTime","date","toLocaleTimeString","hour","minute","handlePin","messageId","console","log","handleUnpin","handleLike","prev","handleUnlike","Math","max","handleReply","handleForward","handleCopy","navigator","clipboard","writeText","handleDelete","handleAddReaction","emoji","existingReaction","find","r","map","count","hasReacted","users","handleRemoveReaction","filter","handleLongPress","handleDoubleClick","id","useEffect","handleEditSave","trimmed","trim","handleEditCancel","type","div","className","span","CodeRenderer","inline","children","copied","setCopied","txt","Array","isArray","join","String","match","exec","code","setTimeout","e","error","button","onClick","aria-label","Copy","SyntaxHighlighter","language","undefined","style","oneDark","customStyle","margin","borderRadius","padding","wrapLongLines","replace","renderMessageContent","MediaPreview","src","mediaUrl","alt","p","FileText","fileName","fileSize","Button","variant","size","Download","img","gifData","url","title","loading","Badge","ImageIcon","isOwn","Textarea","value","onChange","target","rows","min","ceil","length","onKeyDown","key","shiftKey","preventDefault","autoFocus","disabled","ReactMarkdown","components","a","href","rel","messageContent","Avatar","AvatarImage","AvatarFallback","senderName","split","n","Pin","MessageReactions","onAddReaction","onRemoveReaction","showPicker","onTogglePicker","onTouchStart","onDoubleClick","onContextMenu","MessageActions","onPin","onUnpin","onLike","onUnlike","onReply","onForward","onCopy","onDelete","onEdit","timestamp","Heart","SwipeActions"],"mappings":"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"}