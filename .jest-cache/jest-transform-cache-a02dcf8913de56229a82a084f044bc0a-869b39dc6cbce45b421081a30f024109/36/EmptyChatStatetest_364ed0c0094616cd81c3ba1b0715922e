25abb042e1960fb2447880f13f798d01
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("@testing-library/react");
const _EmptyChatState = require("../../components/chat/EmptyChatState");
describe('EmptyChatState', ()=>{
    it('renders empty state with default content', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_EmptyChatState.EmptyChatState, {}));
        expect(_react.screen.getByText('No conversation selected')).toBeInTheDocument();
        expect(_react.screen.getByText(/Select a conversation from the left/)).toBeInTheDocument();
        expect(_react.screen.getByRole('button', {
            name: /start new chat/i
        })).toBeInTheDocument();
    });
    it('calls onStartNewChat when button is clicked', ()=>{
        const mockStartNewChat = jest.fn();
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_EmptyChatState.EmptyChatState, {
            onStartNewChat: mockStartNewChat
        }));
        const button = _react.screen.getByRole('button', {
            name: /start new chat/i
        });
        _react.fireEvent.click(button);
        expect(mockStartNewChat).toHaveBeenCalledTimes(1);
    });
    it('has proper accessibility attributes', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_EmptyChatState.EmptyChatState, {}));
        const button = _react.screen.getByRole('button', {
            name: /start new chat/i
        });
        expect(button).toHaveAttribute('aria-label', 'Start new chat');
    });
    it('renders icon and maintains visual structure', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_EmptyChatState.EmptyChatState, {}));
        // Check for icon container
        const iconContainer = _react.screen.getByText('No conversation selected').previousElementSibling;
        expect(iconContainer).toHaveClass('rounded-xl', 'bg-gradient-to-br');
        // Check for button with icon
        const button = _react.screen.getByRole('button', {
            name: /start new chat/i
        });
        expect(button).toHaveClass('gap-2');
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbGljaGFybGVzZS9DYXNjYWRlUHJvamVjdHMvRUNFLUFHRU5UL19fdGVzdHNfXy9jb21wb25lbnRzL0VtcHR5Q2hhdFN0YXRlLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc2NyZWVuLCBmaXJlRXZlbnQgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0J1xuaW1wb3J0IHsgRW1wdHlDaGF0U3RhdGUgfSBmcm9tICdAL2NvbXBvbmVudHMvY2hhdC9FbXB0eUNoYXRTdGF0ZSdcblxuZGVzY3JpYmUoJ0VtcHR5Q2hhdFN0YXRlJywgKCkgPT4ge1xuICBpdCgncmVuZGVycyBlbXB0eSBzdGF0ZSB3aXRoIGRlZmF1bHQgY29udGVudCcsICgpID0+IHtcbiAgICByZW5kZXIoPEVtcHR5Q2hhdFN0YXRlIC8+KVxuICAgIFxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdObyBjb252ZXJzYXRpb24gc2VsZWN0ZWQnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KC9TZWxlY3QgYSBjb252ZXJzYXRpb24gZnJvbSB0aGUgbGVmdC8pKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVJvbGUoJ2J1dHRvbicsIHsgbmFtZTogL3N0YXJ0IG5ldyBjaGF0L2kgfSkpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnY2FsbHMgb25TdGFydE5ld0NoYXQgd2hlbiBidXR0b24gaXMgY2xpY2tlZCcsICgpID0+IHtcbiAgICBjb25zdCBtb2NrU3RhcnROZXdDaGF0ID0gamVzdC5mbigpXG4gICAgcmVuZGVyKDxFbXB0eUNoYXRTdGF0ZSBvblN0YXJ0TmV3Q2hhdD17bW9ja1N0YXJ0TmV3Q2hhdH0gLz4pXG4gICAgXG4gICAgY29uc3QgYnV0dG9uID0gc2NyZWVuLmdldEJ5Um9sZSgnYnV0dG9uJywgeyBuYW1lOiAvc3RhcnQgbmV3IGNoYXQvaSB9KVxuICAgIGZpcmVFdmVudC5jbGljayhidXR0b24pXG4gICAgXG4gICAgZXhwZWN0KG1vY2tTdGFydE5ld0NoYXQpLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygxKVxuICB9KVxuXG4gIGl0KCdoYXMgcHJvcGVyIGFjY2Vzc2liaWxpdHkgYXR0cmlidXRlcycsICgpID0+IHtcbiAgICByZW5kZXIoPEVtcHR5Q2hhdFN0YXRlIC8+KVxuICAgIFxuICAgIGNvbnN0IGJ1dHRvbiA9IHNjcmVlbi5nZXRCeVJvbGUoJ2J1dHRvbicsIHsgbmFtZTogL3N0YXJ0IG5ldyBjaGF0L2kgfSlcbiAgICBleHBlY3QoYnV0dG9uKS50b0hhdmVBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnU3RhcnQgbmV3IGNoYXQnKVxuICB9KVxuXG4gIGl0KCdyZW5kZXJzIGljb24gYW5kIG1haW50YWlucyB2aXN1YWwgc3RydWN0dXJlJywgKCkgPT4ge1xuICAgIHJlbmRlcig8RW1wdHlDaGF0U3RhdGUgLz4pXG4gICAgXG4gICAgLy8gQ2hlY2sgZm9yIGljb24gY29udGFpbmVyXG4gICAgY29uc3QgaWNvbkNvbnRhaW5lciA9IHNjcmVlbi5nZXRCeVRleHQoJ05vIGNvbnZlcnNhdGlvbiBzZWxlY3RlZCcpLnByZXZpb3VzRWxlbWVudFNpYmxpbmdcbiAgICBleHBlY3QoaWNvbkNvbnRhaW5lcikudG9IYXZlQ2xhc3MoJ3JvdW5kZWQteGwnLCAnYmctZ3JhZGllbnQtdG8tYnInKVxuICAgIFxuICAgIC8vIENoZWNrIGZvciBidXR0b24gd2l0aCBpY29uXG4gICAgY29uc3QgYnV0dG9uID0gc2NyZWVuLmdldEJ5Um9sZSgnYnV0dG9uJywgeyBuYW1lOiAvc3RhcnQgbmV3IGNoYXQvaSB9KVxuICAgIGV4cGVjdChidXR0b24pLnRvSGF2ZUNsYXNzKCdnYXAtMicpXG4gIH0pXG59KVxuIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwiaXQiLCJyZW5kZXIiLCJFbXB0eUNoYXRTdGF0ZSIsImV4cGVjdCIsInNjcmVlbiIsImdldEJ5VGV4dCIsInRvQmVJblRoZURvY3VtZW50IiwiZ2V0QnlSb2xlIiwibmFtZSIsIm1vY2tTdGFydE5ld0NoYXQiLCJqZXN0IiwiZm4iLCJvblN0YXJ0TmV3Q2hhdCIsImJ1dHRvbiIsImZpcmVFdmVudCIsImNsaWNrIiwidG9IYXZlQmVlbkNhbGxlZFRpbWVzIiwidG9IYXZlQXR0cmlidXRlIiwiaWNvbkNvbnRhaW5lciIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJ0b0hhdmVDbGFzcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7dUJBQTBDO2dDQUNYO0FBRS9CQSxTQUFTLGtCQUFrQjtJQUN6QkMsR0FBRyw0Q0FBNEM7UUFDN0NDLElBQUFBLGFBQU0sZ0JBQUMscUJBQUNDLDhCQUFjO1FBRXRCQyxPQUFPQyxhQUFNLENBQUNDLFNBQVMsQ0FBQyw2QkFBNkJDLGlCQUFpQjtRQUN0RUgsT0FBT0MsYUFBTSxDQUFDQyxTQUFTLENBQUMsd0NBQXdDQyxpQkFBaUI7UUFDakZILE9BQU9DLGFBQU0sQ0FBQ0csU0FBUyxDQUFDLFVBQVU7WUFBRUMsTUFBTTtRQUFrQixJQUFJRixpQkFBaUI7SUFDbkY7SUFFQU4sR0FBRywrQ0FBK0M7UUFDaEQsTUFBTVMsbUJBQW1CQyxLQUFLQyxFQUFFO1FBQ2hDVixJQUFBQSxhQUFNLGdCQUFDLHFCQUFDQyw4QkFBYztZQUFDVSxnQkFBZ0JIOztRQUV2QyxNQUFNSSxTQUFTVCxhQUFNLENBQUNHLFNBQVMsQ0FBQyxVQUFVO1lBQUVDLE1BQU07UUFBa0I7UUFDcEVNLGdCQUFTLENBQUNDLEtBQUssQ0FBQ0Y7UUFFaEJWLE9BQU9NLGtCQUFrQk8scUJBQXFCLENBQUM7SUFDakQ7SUFFQWhCLEdBQUcsdUNBQXVDO1FBQ3hDQyxJQUFBQSxhQUFNLGdCQUFDLHFCQUFDQyw4QkFBYztRQUV0QixNQUFNVyxTQUFTVCxhQUFNLENBQUNHLFNBQVMsQ0FBQyxVQUFVO1lBQUVDLE1BQU07UUFBa0I7UUFDcEVMLE9BQU9VLFFBQVFJLGVBQWUsQ0FBQyxjQUFjO0lBQy9DO0lBRUFqQixHQUFHLCtDQUErQztRQUNoREMsSUFBQUEsYUFBTSxnQkFBQyxxQkFBQ0MsOEJBQWM7UUFFdEIsMkJBQTJCO1FBQzNCLE1BQU1nQixnQkFBZ0JkLGFBQU0sQ0FBQ0MsU0FBUyxDQUFDLDRCQUE0QmMsc0JBQXNCO1FBQ3pGaEIsT0FBT2UsZUFBZUUsV0FBVyxDQUFDLGNBQWM7UUFFaEQsNkJBQTZCO1FBQzdCLE1BQU1QLFNBQVNULGFBQU0sQ0FBQ0csU0FBUyxDQUFDLFVBQVU7WUFBRUMsTUFBTTtRQUFrQjtRQUNwRUwsT0FBT1UsUUFBUU8sV0FBVyxDQUFDO0lBQzdCO0FBQ0YifQ==