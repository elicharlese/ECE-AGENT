{"version":3,"sources":["/Users/elicharlese/CascadeProjects/ECE-AGENT/__tests__/api/agents.post.test.ts"],"sourcesContent":["// Mock NextResponse.json to produce a standard Response with JSON body\njest.mock('next/server', () => ({\n  NextResponse: {\n    json: (data: any, init?: ResponseInit & { status?: number }) =>\n      new Response(JSON.stringify(data), {\n        status: (init as any)?.status ?? 200,\n        headers: { 'content-type': 'application/json' },\n      }),\n  },\n}))\n\n// Mock getSupabaseServer to simulate authenticated user and DB calls\njest.mock('@/lib/supabase/server', () => {\n  const authGetUser = jest.fn(async () => ({ data: { user: { id: 'user-1' } }, error: null }))\n\n  // Build a chain: from('agents').insert(payload).select('*').single()\n  const single = jest.fn(async () => ({ data: null, error: null }))\n  const select = jest.fn(() => ({ single }))\n  const insert = jest.fn(() => ({ select }))\n  const from = jest.fn(() => ({ insert }))\n\n  return {\n    getSupabaseServer: async () => ({\n      auth: { getUser: authGetUser },\n      from,\n      __mocks: { authGetUser, from, insert, select, single },\n    }),\n  }\n})\n\ndescribe('POST /api/agents', () => {\n  it('returns 400 on invalid payload (zod)', async () => {\n    const { POST } = await import('@/app/api/agents/route')\n    const req = new Request('http://localhost/api/agents', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({}),\n    })\n\n    const res = await POST(req as any)\n    expect(res.status).toBe(400)\n    const json = await res.json()\n    expect(json.error).toBeDefined()\n  })\n\n  it('creates agent and returns 201 on valid payload', async () => {\n    // Override the mock to return an inserted row\n    const { getSupabaseServer } = await import('@/lib/supabase/server')\n    const supa: any = await getSupabaseServer()\n    supa.__mocks.single.mockImplementation(async () => ({\n      data: {\n        id: 'agent-1',\n        user_id: 'user-1',\n        name: 'Test Agent',\n        description: null,\n        model: 'gpt-4o-mini',\n        avatar_url: null,\n        capabilities: [],\n        mcp_tools: [],\n        status: 'online',\n        system_prompt: null,\n        created_at: new Date().toISOString(),\n      },\n      error: null,\n    }))\n\n    const { POST } = await import('@/app/api/agents/route')\n    const req = new Request('http://localhost/api/agents', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name: 'Test Agent' }),\n    })\n\n    const res = await POST(req as any)\n    expect(res.status).toBe(201)\n    const json = await res.json()\n    expect(json.agent).toBeDefined()\n    expect(json.agent.name).toBe('Test Agent')\n  })\n})\n"],"names":["jest","mock","NextResponse","json","data","init","Response","JSON","stringify","status","headers","authGetUser","fn","user","id","error","single","select","insert","from","getSupabaseServer","auth","getUser","__mocks","describe","it","POST","req","Request","method","body","res","expect","toBe","toBeDefined","supa","mockImplementation","user_id","name","description","model","avatar_url","capabilities","mcp_tools","system_prompt","created_at","Date","toISOString","agent"],"mappings":"AAAA,uEAAuE;;AACvEA,KAAKC,IAAI,CAAC,eAAe,IAAO,CAAA;QAC9BC,cAAc;YACZC,MAAM,CAACC,MAAWC,OAChB,IAAIC,SAASC,KAAKC,SAAS,CAACJ,OAAO;oBACjCK,QAAQ,AAACJ,MAAcI,UAAU;oBACjCC,SAAS;wBAAE,gBAAgB;oBAAmB;gBAChD;QACJ;IACF,CAAA;AAEA,qEAAqE;AACrEV,KAAKC,IAAI,CAAC,yBAAyB;IACjC,MAAMU,cAAcX,KAAKY,EAAE,CAAC,UAAa,CAAA;YAAER,MAAM;gBAAES,MAAM;oBAAEC,IAAI;gBAAS;YAAE;YAAGC,OAAO;QAAK,CAAA;IAEzF,qEAAqE;IACrE,MAAMC,SAAShB,KAAKY,EAAE,CAAC,UAAa,CAAA;YAAER,MAAM;YAAMW,OAAO;QAAK,CAAA;IAC9D,MAAME,SAASjB,KAAKY,EAAE,CAAC,IAAO,CAAA;YAAEI;QAAO,CAAA;IACvC,MAAME,SAASlB,KAAKY,EAAE,CAAC,IAAO,CAAA;YAAEK;QAAO,CAAA;IACvC,MAAME,OAAOnB,KAAKY,EAAE,CAAC,IAAO,CAAA;YAAEM;QAAO,CAAA;IAErC,OAAO;QACLE,mBAAmB,UAAa,CAAA;gBAC9BC,MAAM;oBAAEC,SAASX;gBAAY;gBAC7BQ;gBACAI,SAAS;oBAAEZ;oBAAaQ;oBAAMD;oBAAQD;oBAAQD;gBAAO;YACvD,CAAA;IACF;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEAQ,SAAS,oBAAoB;IAC3BC,GAAG,wCAAwC;QACzC,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAM,mEAAA,QAAO;QAC9B,MAAMC,MAAM,IAAIC,QAAQ,+BAA+B;YACrDC,QAAQ;YACRnB,SAAS;gBAAE,gBAAgB;YAAmB;YAC9CoB,MAAMvB,KAAKC,SAAS,CAAC,CAAC;QACxB;QAEA,MAAMuB,MAAM,MAAML,KAAKC;QACvBK,OAAOD,IAAItB,MAAM,EAAEwB,IAAI,CAAC;QACxB,MAAM9B,OAAO,MAAM4B,IAAI5B,IAAI;QAC3B6B,OAAO7B,KAAKY,KAAK,EAAEmB,WAAW;IAChC;IAEAT,GAAG,kDAAkD;QACnD,8CAA8C;QAC9C,MAAM,EAAEL,iBAAiB,EAAE,GAAG,MAAM,mEAAA,QAAO;QAC3C,MAAMe,OAAY,MAAMf;QACxBe,KAAKZ,OAAO,CAACP,MAAM,CAACoB,kBAAkB,CAAC,UAAa,CAAA;gBAClDhC,MAAM;oBACJU,IAAI;oBACJuB,SAAS;oBACTC,MAAM;oBACNC,aAAa;oBACbC,OAAO;oBACPC,YAAY;oBACZC,cAAc,EAAE;oBAChBC,WAAW,EAAE;oBACblC,QAAQ;oBACRmC,eAAe;oBACfC,YAAY,IAAIC,OAAOC,WAAW;gBACpC;gBACAhC,OAAO;YACT,CAAA;QAEA,MAAM,EAAEW,IAAI,EAAE,GAAG,MAAM,mEAAA,QAAO;QAC9B,MAAMC,MAAM,IAAIC,QAAQ,+BAA+B;YACrDC,QAAQ;YACRnB,SAAS;gBAAE,gBAAgB;YAAmB;YAC9CoB,MAAMvB,KAAKC,SAAS,CAAC;gBAAE8B,MAAM;YAAa;QAC5C;QAEA,MAAMP,MAAM,MAAML,KAAKC;QACvBK,OAAOD,IAAItB,MAAM,EAAEwB,IAAI,CAAC;QACxB,MAAM9B,OAAO,MAAM4B,IAAI5B,IAAI;QAC3B6B,OAAO7B,KAAK6C,KAAK,EAAEd,WAAW;QAC9BF,OAAO7B,KAAK6C,KAAK,CAACV,IAAI,EAAEL,IAAI,CAAC;IAC/B;AACF"}