{"version":3,"sources":["/Users/elicharlese/CascadeProjects/ECE-AGENT/components/chat/pinned-messages.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Pin, X } from \"lucide-react\"\n\ninterface PinnedMessage {\n  id: string\n  content: string\n  timestamp: Date\n  senderName: string\n  senderId: string\n  type: \"text\" | \"image\" | \"video\" | \"audio\" | \"document\"\n  mediaUrl?: string\n}\n\nconst mockPinnedMessages: PinnedMessage[] = [\n  {\n    id: \"pin1\",\n    content: \"Meeting tomorrow at 2 PM in conference room A\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 24),\n    senderName: \"Sarah Wilson\",\n    senderId: \"2\",\n    type: \"text\",\n  },\n  {\n    id: \"pin2\",\n    content: \"Project deadline is Friday - don't forget!\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 48),\n    senderName: \"Alex Chen\",\n    senderId: \"3\",\n    type: \"text\",\n  },\n  {\n    id: \"pin3\",\n    content: \"Team photo from last week\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 60 * 72),\n    senderName: \"Maria Garcia\",\n    senderId: \"4\",\n    type: \"image\",\n    mediaUrl: \"/placeholder.svg?height=200&width=300\",\n  },\n]\n\ninterface PinnedMessagesProps {\n  chatId: string\n  onUnpin?: (messageId: string) => void\n  onJumpToMessage?: (messageId: string) => void\n}\n\nexport function PinnedMessages({ chatId, onUnpin, onJumpToMessage }: PinnedMessagesProps) {\n  const [pinnedMessages, setPinnedMessages] = useState<PinnedMessage[]>(mockPinnedMessages)\n\n  const handleUnpin = (messageId: string) => {\n    setPinnedMessages((prev) => prev.filter((msg) => msg.id !== messageId))\n    onUnpin?.(messageId)\n  }\n\n  const handleJumpToMessage = (messageId: string) => {\n    onJumpToMessage?.(messageId)\n  }\n\n  const formatDate = (date: Date) => {\n    const now = new Date()\n    const diff = now.getTime() - date.getTime()\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24))\n\n    if (days === 0) return \"Today\"\n    if (days === 1) return \"Yesterday\"\n    if (days < 7) return `${days} days ago`\n    return date.toLocaleDateString()\n  }\n\n  if (pinnedMessages.length === 0) return null\n\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant=\"ghost\" size=\"sm\" className=\"relative\">\n          <Pin className=\"h-4 w-4\" />\n          {pinnedMessages.length > 0 && (\n            <Badge className=\"absolute -top-1 -right-1 h-4 w-4 p-0 text-xs bg-blue-500\">{pinnedMessages.length}</Badge>\n          )}\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"max-w-2xl max-h-[80vh]\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <Pin className=\"h-5 w-5\" />\n            Pinned Messages ({pinnedMessages.length})\n          </DialogTitle>\n        </DialogHeader>\n\n        <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n          {pinnedMessages.map((message) => (\n            <div\n              key={message.id}\n              className=\"flex gap-3 p-4 rounded-lg border border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors group\"\n            >\n              <Avatar className=\"h-8 w-8\">\n                <AvatarImage />\n                <AvatarFallback className=\"bg-gradient-to-br from-blue-500 to-purple-600 text-white text-sm\">\n                  {message.senderName\n                    .split(\" \")\n                    .map((n) => n[0])\n                    .join(\"\")}\n                </AvatarFallback>\n              </Avatar>\n\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center justify-between mb-1\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"font-medium text-sm\">{message.senderName}</span>\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">{formatDate(message.timestamp)}</span>\n                  </div>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => handleUnpin(message.id)}\n                    className=\"opacity-0 group-hover:opacity-100 transition-opacity h-6 w-6 p-0\"\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n\n                <div className=\"cursor-pointer\" onClick={() => handleJumpToMessage(message.id)}>\n                  {message.type === \"text\" ? (\n                    <p className=\"text-sm text-gray-700 dark:text-gray-300\">{message.content}</p>\n                  ) : message.type === \"image\" ? (\n                    <div className=\"flex items-center gap-2\">\n                      <img\n                        src={message.mediaUrl || \"/placeholder.svg\"}\n                        alt=\"Pinned image\"\n                        className=\"w-12 h-12 rounded object-cover\"\n                      />\n                      <span className=\"text-sm text-gray-600 dark:text-gray-400\">{message.content}</span>\n                    </div>\n                  ) : (\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 italic\">{message.content}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {pinnedMessages.length === 0 && (\n          <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n            <Pin className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n            <p>No pinned messages</p>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":["PinnedMessages","mockPinnedMessages","id","content","timestamp","Date","now","senderName","senderId","type","mediaUrl","chatId","onUnpin","onJumpToMessage","pinnedMessages","setPinnedMessages","useState","handleUnpin","messageId","prev","filter","msg","handleJumpToMessage","formatDate","date","diff","getTime","days","Math","floor","toLocaleDateString","length","Dialog","DialogTrigger","asChild","Button","variant","size","className","Pin","Badge","DialogContent","DialogHeader","DialogTitle","div","map","message","Avatar","AvatarImage","AvatarFallback","split","n","join","span","onClick","X","p","img","src","alt"],"mappings":"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"}