5ec22b5b7b56830980df039fdec671ac
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "PinnedMessages", {
    enumerable: true,
    get: function() {
        return PinnedMessages;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _button = require("../ui/button");
const _dialog = require("../ui/dialog");
const _avatar = require("../ui/avatar");
const _badge = require("../ui/badge");
const _lucidereact = require("lucide-react");
const mockPinnedMessages = [
    {
        id: "pin1",
        content: "Meeting tomorrow at 2 PM in conference room A",
        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 24),
        senderName: "Sarah Wilson",
        senderId: "2",
        type: "text"
    },
    {
        id: "pin2",
        content: "Project deadline is Friday - don't forget!",
        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 48),
        senderName: "Alex Chen",
        senderId: "3",
        type: "text"
    },
    {
        id: "pin3",
        content: "Team photo from last week",
        timestamp: new Date(Date.now() - 1000 * 60 * 60 * 72),
        senderName: "Maria Garcia",
        senderId: "4",
        type: "image",
        mediaUrl: "/placeholder.svg?height=200&width=300"
    }
];
function PinnedMessages({ chatId, onUnpin, onJumpToMessage }) {
    const [pinnedMessages, setPinnedMessages] = (0, _react.useState)(mockPinnedMessages);
    const handleUnpin = (messageId)=>{
        setPinnedMessages((prev)=>prev.filter((msg)=>msg.id !== messageId));
        onUnpin?.(messageId);
    };
    const handleJumpToMessage = (messageId)=>{
        onJumpToMessage?.(messageId);
    };
    const formatDate = (date)=>{
        const now = new Date();
        const diff = now.getTime() - date.getTime();
        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        if (days === 0) return "Today";
        if (days === 1) return "Yesterday";
        if (days < 7) return `${days} days ago`;
        return date.toLocaleDateString();
    };
    if (pinnedMessages.length === 0) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.Dialog, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogTrigger, {
                asChild: true,
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                    variant: "ghost",
                    size: "sm",
                    className: "relative",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Pin, {
                            className: "h-4 w-4"
                        }),
                        pinnedMessages.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                            className: "absolute -top-1 -right-1 h-4 w-4 p-0 text-xs bg-blue-500",
                            children: pinnedMessages.length
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogContent, {
                className: "max-w-2xl max-h-[80vh]",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogHeader, {
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogTitle, {
                            className: "flex items-center gap-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Pin, {
                                    className: "h-5 w-5"
                                }),
                                "Pinned Messages (",
                                pinnedMessages.length,
                                ")"
                            ]
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "space-y-4 max-h-96 overflow-y-auto",
                        children: pinnedMessages.map((message)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex gap-3 p-4 rounded-lg border border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors group",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_avatar.Avatar, {
                                        className: "h-8 w-8",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_avatar.AvatarImage, {}),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_avatar.AvatarFallback, {
                                                className: "bg-gradient-to-br from-blue-500 to-purple-600 text-white text-sm",
                                                children: message.senderName.split(" ").map((n)=>n[0]).join("")
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex-1 min-w-0",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex items-center justify-between mb-1",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center gap-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                className: "font-medium text-sm",
                                                                children: message.senderName
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                className: "text-xs text-gray-500 dark:text-gray-400",
                                                                children: formatDate(message.timestamp)
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                        variant: "ghost",
                                                        size: "sm",
                                                        onClick: ()=>handleUnpin(message.id),
                                                        className: "opacity-0 group-hover:opacity-100 transition-opacity h-6 w-6 p-0",
                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                                            className: "h-3 w-3"
                                                        })
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "cursor-pointer",
                                                onClick: ()=>handleJumpToMessage(message.id),
                                                children: message.type === "text" ? /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "text-sm text-gray-700 dark:text-gray-300",
                                                    children: message.content
                                                }) : message.type === "image" ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "flex items-center gap-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                                                            src: message.mediaUrl || "/placeholder.svg",
                                                            alt: "Pinned image",
                                                            className: "w-12 h-12 rounded object-cover"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                            className: "text-sm text-gray-600 dark:text-gray-400",
                                                            children: message.content
                                                        })
                                                    ]
                                                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "text-sm text-gray-600 dark:text-gray-400 italic",
                                                    children: message.content
                                                })
                                            })
                                        ]
                                    })
                                ]
                            }, message.id))
                    }),
                    pinnedMessages.length === 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "text-center py-8 text-gray-500 dark:text-gray-400",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Pin, {
                                className: "h-12 w-12 mx-auto mb-4 opacity-50"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                children: "No pinned messages"
                            })
                        ]
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbGljaGFybGVzZS9DYXNjYWRlUHJvamVjdHMvRUNFLUFHRU5UL2NvbXBvbmVudHMvY2hhdC9waW5uZWQtbWVzc2FnZXMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5cbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvYnV0dG9uXCJcbmltcG9ydCB7IERpYWxvZywgRGlhbG9nQ29udGVudCwgRGlhbG9nSGVhZGVyLCBEaWFsb2dUaXRsZSwgRGlhbG9nVHJpZ2dlciB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvZGlhbG9nXCJcbmltcG9ydCB7IEF2YXRhciwgQXZhdGFyRmFsbGJhY2ssIEF2YXRhckltYWdlIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9hdmF0YXJcIlxuaW1wb3J0IHsgQmFkZ2UgfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2JhZGdlXCJcbmltcG9ydCB7IFBpbiwgWCB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIlxuXG5pbnRlcmZhY2UgUGlubmVkTWVzc2FnZSB7XG4gIGlkOiBzdHJpbmdcbiAgY29udGVudDogc3RyaW5nXG4gIHRpbWVzdGFtcDogRGF0ZVxuICBzZW5kZXJOYW1lOiBzdHJpbmdcbiAgc2VuZGVySWQ6IHN0cmluZ1xuICB0eXBlOiBcInRleHRcIiB8IFwiaW1hZ2VcIiB8IFwidmlkZW9cIiB8IFwiYXVkaW9cIiB8IFwiZG9jdW1lbnRcIlxuICBtZWRpYVVybD86IHN0cmluZ1xufVxuXG5jb25zdCBtb2NrUGlubmVkTWVzc2FnZXM6IFBpbm5lZE1lc3NhZ2VbXSA9IFtcbiAge1xuICAgIGlkOiBcInBpbjFcIixcbiAgICBjb250ZW50OiBcIk1lZXRpbmcgdG9tb3Jyb3cgYXQgMiBQTSBpbiBjb25mZXJlbmNlIHJvb20gQVwiLFxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoRGF0ZS5ub3coKSAtIDEwMDAgKiA2MCAqIDYwICogMjQpLFxuICAgIHNlbmRlck5hbWU6IFwiU2FyYWggV2lsc29uXCIsXG4gICAgc2VuZGVySWQ6IFwiMlwiLFxuICAgIHR5cGU6IFwidGV4dFwiLFxuICB9LFxuICB7XG4gICAgaWQ6IFwicGluMlwiLFxuICAgIGNvbnRlbnQ6IFwiUHJvamVjdCBkZWFkbGluZSBpcyBGcmlkYXkgLSBkb24ndCBmb3JnZXQhXCIsXG4gICAgdGltZXN0YW1wOiBuZXcgRGF0ZShEYXRlLm5vdygpIC0gMTAwMCAqIDYwICogNjAgKiA0OCksXG4gICAgc2VuZGVyTmFtZTogXCJBbGV4IENoZW5cIixcbiAgICBzZW5kZXJJZDogXCIzXCIsXG4gICAgdHlwZTogXCJ0ZXh0XCIsXG4gIH0sXG4gIHtcbiAgICBpZDogXCJwaW4zXCIsXG4gICAgY29udGVudDogXCJUZWFtIHBob3RvIGZyb20gbGFzdCB3ZWVrXCIsXG4gICAgdGltZXN0YW1wOiBuZXcgRGF0ZShEYXRlLm5vdygpIC0gMTAwMCAqIDYwICogNjAgKiA3MiksXG4gICAgc2VuZGVyTmFtZTogXCJNYXJpYSBHYXJjaWFcIixcbiAgICBzZW5kZXJJZDogXCI0XCIsXG4gICAgdHlwZTogXCJpbWFnZVwiLFxuICAgIG1lZGlhVXJsOiBcIi9wbGFjZWhvbGRlci5zdmc/aGVpZ2h0PTIwMCZ3aWR0aD0zMDBcIixcbiAgfSxcbl1cblxuaW50ZXJmYWNlIFBpbm5lZE1lc3NhZ2VzUHJvcHMge1xuICBjaGF0SWQ6IHN0cmluZ1xuICBvblVucGluPzogKG1lc3NhZ2VJZDogc3RyaW5nKSA9PiB2b2lkXG4gIG9uSnVtcFRvTWVzc2FnZT86IChtZXNzYWdlSWQ6IHN0cmluZykgPT4gdm9pZFxufVxuXG5leHBvcnQgZnVuY3Rpb24gUGlubmVkTWVzc2FnZXMoeyBjaGF0SWQsIG9uVW5waW4sIG9uSnVtcFRvTWVzc2FnZSB9OiBQaW5uZWRNZXNzYWdlc1Byb3BzKSB7XG4gIGNvbnN0IFtwaW5uZWRNZXNzYWdlcywgc2V0UGlubmVkTWVzc2FnZXNdID0gdXNlU3RhdGU8UGlubmVkTWVzc2FnZVtdPihtb2NrUGlubmVkTWVzc2FnZXMpXG5cbiAgY29uc3QgaGFuZGxlVW5waW4gPSAobWVzc2FnZUlkOiBzdHJpbmcpID0+IHtcbiAgICBzZXRQaW5uZWRNZXNzYWdlcygocHJldikgPT4gcHJldi5maWx0ZXIoKG1zZykgPT4gbXNnLmlkICE9PSBtZXNzYWdlSWQpKVxuICAgIG9uVW5waW4/LihtZXNzYWdlSWQpXG4gIH1cblxuICBjb25zdCBoYW5kbGVKdW1wVG9NZXNzYWdlID0gKG1lc3NhZ2VJZDogc3RyaW5nKSA9PiB7XG4gICAgb25KdW1wVG9NZXNzYWdlPy4obWVzc2FnZUlkKVxuICB9XG5cbiAgY29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlOiBEYXRlKSA9PiB7XG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKVxuICAgIGNvbnN0IGRpZmYgPSBub3cuZ2V0VGltZSgpIC0gZGF0ZS5nZXRUaW1lKClcbiAgICBjb25zdCBkYXlzID0gTWF0aC5mbG9vcihkaWZmIC8gKDEwMDAgKiA2MCAqIDYwICogMjQpKVxuXG4gICAgaWYgKGRheXMgPT09IDApIHJldHVybiBcIlRvZGF5XCJcbiAgICBpZiAoZGF5cyA9PT0gMSkgcmV0dXJuIFwiWWVzdGVyZGF5XCJcbiAgICBpZiAoZGF5cyA8IDcpIHJldHVybiBgJHtkYXlzfSBkYXlzIGFnb2BcbiAgICByZXR1cm4gZGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoKVxuICB9XG5cbiAgaWYgKHBpbm5lZE1lc3NhZ2VzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIG51bGxcblxuICByZXR1cm4gKFxuICAgIDxEaWFsb2c+XG4gICAgICA8RGlhbG9nVHJpZ2dlciBhc0NoaWxkPlxuICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJnaG9zdFwiIHNpemU9XCJzbVwiIGNsYXNzTmFtZT1cInJlbGF0aXZlXCI+XG4gICAgICAgICAgPFBpbiBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgICAgICAgICB7cGlubmVkTWVzc2FnZXMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgICA8QmFkZ2UgY2xhc3NOYW1lPVwiYWJzb2x1dGUgLXRvcC0xIC1yaWdodC0xIGgtNCB3LTQgcC0wIHRleHQteHMgYmctYmx1ZS01MDBcIj57cGlubmVkTWVzc2FnZXMubGVuZ3RofTwvQmFkZ2U+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9CdXR0b24+XG4gICAgICA8L0RpYWxvZ1RyaWdnZXI+XG4gICAgICA8RGlhbG9nQ29udGVudCBjbGFzc05hbWU9XCJtYXgtdy0yeGwgbWF4LWgtWzgwdmhdXCI+XG4gICAgICAgIDxEaWFsb2dIZWFkZXI+XG4gICAgICAgICAgPERpYWxvZ1RpdGxlIGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yXCI+XG4gICAgICAgICAgICA8UGluIGNsYXNzTmFtZT1cImgtNSB3LTVcIiAvPlxuICAgICAgICAgICAgUGlubmVkIE1lc3NhZ2VzICh7cGlubmVkTWVzc2FnZXMubGVuZ3RofSlcbiAgICAgICAgICA8L0RpYWxvZ1RpdGxlPlxuICAgICAgICA8L0RpYWxvZ0hlYWRlcj5cblxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNCBtYXgtaC05NiBvdmVyZmxvdy15LWF1dG9cIj5cbiAgICAgICAgICB7cGlubmVkTWVzc2FnZXMubWFwKChtZXNzYWdlKSA9PiAoXG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGtleT17bWVzc2FnZS5pZH1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmxleCBnYXAtMyBwLTQgcm91bmRlZC1sZyBib3JkZXIgYm9yZGVyLWdyYXktMjAwIGRhcms6Ym9yZGVyLWdyYXktNzAwIGhvdmVyOmJnLWdyYXktNTAgZGFyazpob3ZlcjpiZy1ncmF5LTgwMCB0cmFuc2l0aW9uLWNvbG9ycyBncm91cFwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxBdmF0YXIgY2xhc3NOYW1lPVwiaC04IHctOFwiPlxuICAgICAgICAgICAgICAgIDxBdmF0YXJJbWFnZSAvPlxuICAgICAgICAgICAgICAgIDxBdmF0YXJGYWxsYmFjayBjbGFzc05hbWU9XCJiZy1ncmFkaWVudC10by1iciBmcm9tLWJsdWUtNTAwIHRvLXB1cnBsZS02MDAgdGV4dC13aGl0ZSB0ZXh0LXNtXCI+XG4gICAgICAgICAgICAgICAgICB7bWVzc2FnZS5zZW5kZXJOYW1lXG4gICAgICAgICAgICAgICAgICAgIC5zcGxpdChcIiBcIilcbiAgICAgICAgICAgICAgICAgICAgLm1hcCgobikgPT4gblswXSlcbiAgICAgICAgICAgICAgICAgICAgLmpvaW4oXCJcIil9XG4gICAgICAgICAgICAgICAgPC9BdmF0YXJGYWxsYmFjaz5cbiAgICAgICAgICAgICAgPC9BdmF0YXI+XG5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LTEgbWluLXctMFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIG1iLTFcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZm9udC1tZWRpdW0gdGV4dC1zbVwiPnttZXNzYWdlLnNlbmRlck5hbWV9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LXhzIHRleHQtZ3JheS01MDAgZGFyazp0ZXh0LWdyYXktNDAwXCI+e2Zvcm1hdERhdGUobWVzc2FnZS50aW1lc3RhbXApfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICB2YXJpYW50PVwiZ2hvc3RcIlxuICAgICAgICAgICAgICAgICAgICBzaXplPVwic21cIlxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVVbnBpbihtZXNzYWdlLmlkKX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwib3BhY2l0eS0wIGdyb3VwLWhvdmVyOm9wYWNpdHktMTAwIHRyYW5zaXRpb24tb3BhY2l0eSBoLTYgdy02IHAtMFwiXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxYIGNsYXNzTmFtZT1cImgtMyB3LTNcIiAvPlxuICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImN1cnNvci1wb2ludGVyXCIgb25DbGljaz17KCkgPT4gaGFuZGxlSnVtcFRvTWVzc2FnZShtZXNzYWdlLmlkKX0+XG4gICAgICAgICAgICAgICAgICB7bWVzc2FnZS50eXBlID09PSBcInRleHRcIiA/IChcbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNzAwIGRhcms6dGV4dC1ncmF5LTMwMFwiPnttZXNzYWdlLmNvbnRlbnR9PC9wPlxuICAgICAgICAgICAgICAgICAgKSA6IG1lc3NhZ2UudHlwZSA9PT0gXCJpbWFnZVwiID8gKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgICAgICAgICAgc3JjPXttZXNzYWdlLm1lZGlhVXJsIHx8IFwiL3BsYWNlaG9sZGVyLnN2Z1wifVxuICAgICAgICAgICAgICAgICAgICAgICAgYWx0PVwiUGlubmVkIGltYWdlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctMTIgaC0xMiByb3VuZGVkIG9iamVjdC1jb3ZlclwiXG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS02MDAgZGFyazp0ZXh0LWdyYXktNDAwXCI+e21lc3NhZ2UuY29udGVudH08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNjAwIGRhcms6dGV4dC1ncmF5LTQwMCBpdGFsaWNcIj57bWVzc2FnZS5jb250ZW50fTwvcD5cbiAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHtwaW5uZWRNZXNzYWdlcy5sZW5ndGggPT09IDAgJiYgKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXIgcHktOCB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiPlxuICAgICAgICAgICAgPFBpbiBjbGFzc05hbWU9XCJoLTEyIHctMTIgbXgtYXV0byBtYi00IG9wYWNpdHktNTBcIiAvPlxuICAgICAgICAgICAgPHA+Tm8gcGlubmVkIG1lc3NhZ2VzPC9wPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgPC9EaWFsb2dDb250ZW50PlxuICAgIDwvRGlhbG9nPlxuICApXG59XG4iXSwibmFtZXMiOlsiUGlubmVkTWVzc2FnZXMiLCJtb2NrUGlubmVkTWVzc2FnZXMiLCJpZCIsImNvbnRlbnQiLCJ0aW1lc3RhbXAiLCJEYXRlIiwibm93Iiwic2VuZGVyTmFtZSIsInNlbmRlcklkIiwidHlwZSIsIm1lZGlhVXJsIiwiY2hhdElkIiwib25VbnBpbiIsIm9uSnVtcFRvTWVzc2FnZSIsInBpbm5lZE1lc3NhZ2VzIiwic2V0UGlubmVkTWVzc2FnZXMiLCJ1c2VTdGF0ZSIsImhhbmRsZVVucGluIiwibWVzc2FnZUlkIiwicHJldiIsImZpbHRlciIsIm1zZyIsImhhbmRsZUp1bXBUb01lc3NhZ2UiLCJmb3JtYXREYXRlIiwiZGF0ZSIsImRpZmYiLCJnZXRUaW1lIiwiZGF5cyIsIk1hdGgiLCJmbG9vciIsInRvTG9jYWxlRGF0ZVN0cmluZyIsImxlbmd0aCIsIkRpYWxvZyIsIkRpYWxvZ1RyaWdnZXIiLCJhc0NoaWxkIiwiQnV0dG9uIiwidmFyaWFudCIsInNpemUiLCJjbGFzc05hbWUiLCJQaW4iLCJCYWRnZSIsIkRpYWxvZ0NvbnRlbnQiLCJEaWFsb2dIZWFkZXIiLCJEaWFsb2dUaXRsZSIsImRpdiIsIm1hcCIsIm1lc3NhZ2UiLCJBdmF0YXIiLCJBdmF0YXJJbWFnZSIsIkF2YXRhckZhbGxiYWNrIiwic3BsaXQiLCJuIiwiam9pbiIsInNwYW4iLCJvbkNsaWNrIiwiWCIsInAiLCJpbWciLCJzcmMiLCJhbHQiXSwibWFwcGluZ3MiOiJBQUFBOzs7OzsrQkFxRGdCQTs7O2VBQUFBOzs7O3VCQW5EUzt3QkFDRjt3QkFDeUQ7d0JBQzVCO3VCQUM5Qjs2QkFDQztBQVl2QixNQUFNQyxxQkFBc0M7SUFDMUM7UUFDRUMsSUFBSTtRQUNKQyxTQUFTO1FBQ1RDLFdBQVcsSUFBSUMsS0FBS0EsS0FBS0MsR0FBRyxLQUFLLE9BQU8sS0FBSyxLQUFLO1FBQ2xEQyxZQUFZO1FBQ1pDLFVBQVU7UUFDVkMsTUFBTTtJQUNSO0lBQ0E7UUFDRVAsSUFBSTtRQUNKQyxTQUFTO1FBQ1RDLFdBQVcsSUFBSUMsS0FBS0EsS0FBS0MsR0FBRyxLQUFLLE9BQU8sS0FBSyxLQUFLO1FBQ2xEQyxZQUFZO1FBQ1pDLFVBQVU7UUFDVkMsTUFBTTtJQUNSO0lBQ0E7UUFDRVAsSUFBSTtRQUNKQyxTQUFTO1FBQ1RDLFdBQVcsSUFBSUMsS0FBS0EsS0FBS0MsR0FBRyxLQUFLLE9BQU8sS0FBSyxLQUFLO1FBQ2xEQyxZQUFZO1FBQ1pDLFVBQVU7UUFDVkMsTUFBTTtRQUNOQyxVQUFVO0lBQ1o7Q0FDRDtBQVFNLFNBQVNWLGVBQWUsRUFBRVcsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLGVBQWUsRUFBdUI7SUFDdEYsTUFBTSxDQUFDQyxnQkFBZ0JDLGtCQUFrQixHQUFHQyxJQUFBQSxlQUFRLEVBQWtCZjtJQUV0RSxNQUFNZ0IsY0FBYyxDQUFDQztRQUNuQkgsa0JBQWtCLENBQUNJLE9BQVNBLEtBQUtDLE1BQU0sQ0FBQyxDQUFDQyxNQUFRQSxJQUFJbkIsRUFBRSxLQUFLZ0I7UUFDNUROLFVBQVVNO0lBQ1o7SUFFQSxNQUFNSSxzQkFBc0IsQ0FBQ0o7UUFDM0JMLGtCQUFrQks7SUFDcEI7SUFFQSxNQUFNSyxhQUFhLENBQUNDO1FBQ2xCLE1BQU1sQixNQUFNLElBQUlEO1FBQ2hCLE1BQU1vQixPQUFPbkIsSUFBSW9CLE9BQU8sS0FBS0YsS0FBS0UsT0FBTztRQUN6QyxNQUFNQyxPQUFPQyxLQUFLQyxLQUFLLENBQUNKLE9BQVEsQ0FBQSxPQUFPLEtBQUssS0FBSyxFQUFDO1FBRWxELElBQUlFLFNBQVMsR0FBRyxPQUFPO1FBQ3ZCLElBQUlBLFNBQVMsR0FBRyxPQUFPO1FBQ3ZCLElBQUlBLE9BQU8sR0FBRyxPQUFPLEdBQUdBLEtBQUssU0FBUyxDQUFDO1FBQ3ZDLE9BQU9ILEtBQUtNLGtCQUFrQjtJQUNoQztJQUVBLElBQUloQixlQUFlaUIsTUFBTSxLQUFLLEdBQUcsT0FBTztJQUV4QyxxQkFDRSxzQkFBQ0MsY0FBTTs7MEJBQ0wscUJBQUNDLHFCQUFhO2dCQUFDQyxPQUFPOzBCQUNwQixjQUFBLHNCQUFDQyxjQUFNO29CQUFDQyxTQUFRO29CQUFRQyxNQUFLO29CQUFLQyxXQUFVOztzQ0FDMUMscUJBQUNDLGdCQUFHOzRCQUFDRCxXQUFVOzt3QkFDZHhCLGVBQWVpQixNQUFNLEdBQUcsbUJBQ3ZCLHFCQUFDUyxZQUFLOzRCQUFDRixXQUFVO3NDQUE0RHhCLGVBQWVpQixNQUFNOzs7OzswQkFJeEcsc0JBQUNVLHFCQUFhO2dCQUFDSCxXQUFVOztrQ0FDdkIscUJBQUNJLG9CQUFZO2tDQUNYLGNBQUEsc0JBQUNDLG1CQUFXOzRCQUFDTCxXQUFVOzs4Q0FDckIscUJBQUNDLGdCQUFHO29DQUFDRCxXQUFVOztnQ0FBWTtnQ0FDVHhCLGVBQWVpQixNQUFNO2dDQUFDOzs7O2tDQUk1QyxxQkFBQ2E7d0JBQUlOLFdBQVU7a0NBQ1p4QixlQUFlK0IsR0FBRyxDQUFDLENBQUNDLHdCQUNuQixzQkFBQ0Y7Z0NBRUNOLFdBQVU7O2tEQUVWLHNCQUFDUyxjQUFNO3dDQUFDVCxXQUFVOzswREFDaEIscUJBQUNVLG1CQUFXOzBEQUNaLHFCQUFDQyxzQkFBYztnREFBQ1gsV0FBVTswREFDdkJRLFFBQVF2QyxVQUFVLENBQ2hCMkMsS0FBSyxDQUFDLEtBQ05MLEdBQUcsQ0FBQyxDQUFDTSxJQUFNQSxDQUFDLENBQUMsRUFBRSxFQUNmQyxJQUFJLENBQUM7Ozs7a0RBSVosc0JBQUNSO3dDQUFJTixXQUFVOzswREFDYixzQkFBQ007Z0RBQUlOLFdBQVU7O2tFQUNiLHNCQUFDTTt3REFBSU4sV0FBVTs7MEVBQ2IscUJBQUNlO2dFQUFLZixXQUFVOzBFQUF1QlEsUUFBUXZDLFVBQVU7OzBFQUN6RCxxQkFBQzhDO2dFQUFLZixXQUFVOzBFQUE0Q2YsV0FBV3VCLFFBQVExQyxTQUFTOzs7O2tFQUUxRixxQkFBQytCLGNBQU07d0RBQ0xDLFNBQVE7d0RBQ1JDLE1BQUs7d0RBQ0xpQixTQUFTLElBQU1yQyxZQUFZNkIsUUFBUTVDLEVBQUU7d0RBQ3JDb0MsV0FBVTtrRUFFVixjQUFBLHFCQUFDaUIsY0FBQzs0REFBQ2pCLFdBQVU7Ozs7OzBEQUlqQixxQkFBQ007Z0RBQUlOLFdBQVU7Z0RBQWlCZ0IsU0FBUyxJQUFNaEMsb0JBQW9Cd0IsUUFBUTVDLEVBQUU7MERBQzFFNEMsUUFBUXJDLElBQUksS0FBSyx1QkFDaEIscUJBQUMrQztvREFBRWxCLFdBQVU7OERBQTRDUSxRQUFRM0MsT0FBTztxREFDdEUyQyxRQUFRckMsSUFBSSxLQUFLLHdCQUNuQixzQkFBQ21DO29EQUFJTixXQUFVOztzRUFDYixxQkFBQ21COzREQUNDQyxLQUFLWixRQUFRcEMsUUFBUSxJQUFJOzREQUN6QmlELEtBQUk7NERBQ0pyQixXQUFVOztzRUFFWixxQkFBQ2U7NERBQUtmLFdBQVU7c0VBQTRDUSxRQUFRM0MsT0FBTzs7O21FQUc3RSxxQkFBQ3FEO29EQUFFbEIsV0FBVTs4REFBbURRLFFBQVEzQyxPQUFPOzs7Ozs7K0JBMUNoRjJDLFFBQVE1QyxFQUFFOztvQkFrRHBCWSxlQUFlaUIsTUFBTSxLQUFLLG1CQUN6QixzQkFBQ2E7d0JBQUlOLFdBQVU7OzBDQUNiLHFCQUFDQyxnQkFBRztnQ0FBQ0QsV0FBVTs7MENBQ2YscUJBQUNrQjswQ0FBRTs7Ozs7Ozs7QUFNZiJ9