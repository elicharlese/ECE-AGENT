{"version":3,"sources":["/Users/elicharlese/CascadeProjects/ECE-AGENT/__tests__/components/CheckInOverview.test.tsx"],"sourcesContent":["import { render, screen, waitFor } from '@testing-library/react'\nimport { CheckInOverview } from '@/components/profile/CheckInOverview'\n\n// Mock the useUser hook\njest.mock('@/hooks/use-user', () => ({\n  useUser: () => ({\n    user: {\n      email: 'john@company.com'\n    }\n  })\n}))\n\ndescribe('CheckInOverview', () => {\n  it('renders loading state initially', () => {\n    render(<CheckInOverview />)\n    \n    // Should show loading skeletons\n    const skeletons = document.querySelectorAll('.animate-pulse')\n    expect(skeletons.length).toBeGreaterThan(0)\n  })\n\n  it('renders welcome message after loading', async () => {\n    render(<CheckInOverview />)\n    \n    await waitFor(() => {\n      expect(screen.getByText('Welcome back!')).toBeInTheDocument()\n      expect(screen.getByText(\"Here's what's happening in your workspace\")).toBeInTheDocument()\n    })\n  })\n\n  it('displays user avatar with first letter', async () => {\n    render(<CheckInOverview />)\n    \n    await waitFor(() => {\n      expect(screen.getByText('J')).toBeInTheDocument() // First letter of john@company.com\n    })\n  })\n\n  it('renders quick action cards', async () => {\n    render(<CheckInOverview />)\n    \n    await waitFor(() => {\n      expect(screen.getByText('View Messages')).toBeInTheDocument()\n      expect(screen.getByText('Check Mentions')).toBeInTheDocument()\n      expect(screen.getByText('Review Docs')).toBeInTheDocument()\n      expect(screen.getByText('Calendar')).toBeInTheDocument()\n    })\n  })\n\n  it('displays activity summary', async () => {\n    render(<CheckInOverview />)\n    \n    await waitFor(() => {\n      expect(screen.getByText('Activity Summary')).toBeInTheDocument()\n      expect(screen.getByText('Active Conversations')).toBeInTheDocument()\n      expect(screen.getByText('Pending Tasks')).toBeInTheDocument()\n      expect(screen.getByText('Upcoming Events')).toBeInTheDocument()\n    })\n  })\n\n  it('shows recent activity timeline', async () => {\n    render(<CheckInOverview />)\n    \n    await waitFor(() => {\n      expect(screen.getByText('Recent Activity')).toBeInTheDocument()\n      expect(screen.getByText('New message in #general')).toBeInTheDocument()\n      expect(screen.getByText('Document \"Project Plan\" updated')).toBeInTheDocument()\n      expect(screen.getByText('Mentioned in team discussion')).toBeInTheDocument()\n    })\n  })\n\n  it('displays badges for non-zero counts', async () => {\n    render(<CheckInOverview />)\n    \n    await waitFor(() => {\n      // Should show badges for items with counts > 0\n      const badges = screen.getAllByText(/^\\d+$/) // Numbers only\n      expect(badges.length).toBeGreaterThan(0)\n    })\n  })\n\n  it('has proper responsive grid layout', async () => {\n    render(<CheckInOverview />)\n    \n    await waitFor(() => {\n      const gridContainer = screen.getByText('View Messages').closest('.grid')\n      expect(gridContainer).toHaveClass('gap-4', 'md:grid-cols-2', 'lg:grid-cols-4')\n    })\n  })\n})\n"],"names":["jest","mock","useUser","user","email","describe","it","render","CheckInOverview","skeletons","document","querySelectorAll","expect","length","toBeGreaterThan","waitFor","screen","getByText","toBeInTheDocument","badges","getAllByText","gridContainer","closest","toHaveClass"],"mappings":";AAGA,wBAAwB;AACxBA,KAAKC,IAAI,CAAC,oBAAoB,IAAO,CAAA;QACnCC,SAAS,IAAO,CAAA;gBACdC,MAAM;oBACJC,OAAO;gBACT;YACF,CAAA;IACF,CAAA;;;;;uBAVwC;iCACR;AAWhCC,SAAS,mBAAmB;IAC1BC,GAAG,mCAAmC;QACpCC,IAAAA,aAAM,gBAAC,qBAACC,gCAAe;QAEvB,gCAAgC;QAChC,MAAMC,YAAYC,SAASC,gBAAgB,CAAC;QAC5CC,OAAOH,UAAUI,MAAM,EAAEC,eAAe,CAAC;IAC3C;IAEAR,GAAG,yCAAyC;QAC1CC,IAAAA,aAAM,gBAAC,qBAACC,gCAAe;QAEvB,MAAMO,IAAAA,cAAO,EAAC;YACZH,OAAOI,aAAM,CAACC,SAAS,CAAC,kBAAkBC,iBAAiB;YAC3DN,OAAOI,aAAM,CAACC,SAAS,CAAC,8CAA8CC,iBAAiB;QACzF;IACF;IAEAZ,GAAG,0CAA0C;QAC3CC,IAAAA,aAAM,gBAAC,qBAACC,gCAAe;QAEvB,MAAMO,IAAAA,cAAO,EAAC;YACZH,OAAOI,aAAM,CAACC,SAAS,CAAC,MAAMC,iBAAiB,IAAG,mCAAmC;QACvF;IACF;IAEAZ,GAAG,8BAA8B;QAC/BC,IAAAA,aAAM,gBAAC,qBAACC,gCAAe;QAEvB,MAAMO,IAAAA,cAAO,EAAC;YACZH,OAAOI,aAAM,CAACC,SAAS,CAAC,kBAAkBC,iBAAiB;YAC3DN,OAAOI,aAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;YAC5DN,OAAOI,aAAM,CAACC,SAAS,CAAC,gBAAgBC,iBAAiB;YACzDN,OAAOI,aAAM,CAACC,SAAS,CAAC,aAAaC,iBAAiB;QACxD;IACF;IAEAZ,GAAG,6BAA6B;QAC9BC,IAAAA,aAAM,gBAAC,qBAACC,gCAAe;QAEvB,MAAMO,IAAAA,cAAO,EAAC;YACZH,OAAOI,aAAM,CAACC,SAAS,CAAC,qBAAqBC,iBAAiB;YAC9DN,OAAOI,aAAM,CAACC,SAAS,CAAC,yBAAyBC,iBAAiB;YAClEN,OAAOI,aAAM,CAACC,SAAS,CAAC,kBAAkBC,iBAAiB;YAC3DN,OAAOI,aAAM,CAACC,SAAS,CAAC,oBAAoBC,iBAAiB;QAC/D;IACF;IAEAZ,GAAG,kCAAkC;QACnCC,IAAAA,aAAM,gBAAC,qBAACC,gCAAe;QAEvB,MAAMO,IAAAA,cAAO,EAAC;YACZH,OAAOI,aAAM,CAACC,SAAS,CAAC,oBAAoBC,iBAAiB;YAC7DN,OAAOI,aAAM,CAACC,SAAS,CAAC,4BAA4BC,iBAAiB;YACrEN,OAAOI,aAAM,CAACC,SAAS,CAAC,oCAAoCC,iBAAiB;YAC7EN,OAAOI,aAAM,CAACC,SAAS,CAAC,iCAAiCC,iBAAiB;QAC5E;IACF;IAEAZ,GAAG,uCAAuC;QACxCC,IAAAA,aAAM,gBAAC,qBAACC,gCAAe;QAEvB,MAAMO,IAAAA,cAAO,EAAC;YACZ,+CAA+C;YAC/C,MAAMI,SAASH,aAAM,CAACI,YAAY,CAAC,SAAS,eAAe;;YAC3DR,OAAOO,OAAON,MAAM,EAAEC,eAAe,CAAC;QACxC;IACF;IAEAR,GAAG,qCAAqC;QACtCC,IAAAA,aAAM,gBAAC,qBAACC,gCAAe;QAEvB,MAAMO,IAAAA,cAAO,EAAC;YACZ,MAAMM,gBAAgBL,aAAM,CAACC,SAAS,CAAC,iBAAiBK,OAAO,CAAC;YAChEV,OAAOS,eAAeE,WAAW,CAAC,SAAS,kBAAkB;QAC/D;IACF;AACF"}