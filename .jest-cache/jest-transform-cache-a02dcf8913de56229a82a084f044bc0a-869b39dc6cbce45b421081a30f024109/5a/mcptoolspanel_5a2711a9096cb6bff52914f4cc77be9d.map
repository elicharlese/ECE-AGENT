{"version":3,"sources":["/Users/elicharlese/CascadeProjects/ECE-AGENT/components/mcp/mcp-tools-panel.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { Database, Globe, GitBranch, FileSearch, Terminal, Calculator, Settings, ChevronDown, ChevronRight, Play, Check, X, Github } from 'lucide-react'\nimport { cn } from '@/lib/utils'\nimport { mcpService } from '@/services/mcp-service'\n\ninterface MCPToolsPanelProps {\n  chatId: string\n}\n\nexport function MCPToolsPanel({ chatId }: MCPToolsPanelProps) {\n  const [expandedCategory, setExpandedCategory] = useState<string | null>('database')\n  const [executingTool, setExecutingTool] = useState<string | null>(null)\n  const [results, setResults] = useState<Record<string, any>>({})\n  const [tools, setTools] = useState(mcpService.getTools())\n  const [gateways, setGateways] = useState(mcpService.getGateways())\n  const [githubToken, setGithubToken] = useState('')\n  const [isConnecting, setIsConnecting] = useState(false)\n  const [mcpEvents, setMcpEvents] = useState<string[]>([])\n  const [mcpStatus, setMcpStatus] = useState(() => mcpService.getMcpStatus?.() ?? { connected: false, sessionId: null, streaming: false, lastEventAt: null })\n  const [presetInputs, setPresetInputs] = useState({\n    owner: '',\n    repo: '',\n    base: 'main',\n    head: '',\n    title: '',\n    body: '',\n    filePath: '',\n    ref: 'main',\n  })\n\n  useEffect(() => {\n    // Refresh tools and gateways\n    setTools(mcpService.getTools())\n    setGateways(mcpService.getGateways())\n    setMcpStatus(mcpService.getMcpStatus?.() ?? mcpStatus)\n\n    // Subscribe to MCP streaming events\n    const handler = (evt: string) => {\n      setMcpEvents(prev => [...prev, evt].slice(-200))\n      // Update status with last event time\n      setMcpStatus(mcpService.getMcpStatus?.() ?? mcpStatus)\n    }\n    mcpService.onMcpEvent(handler)\n    const interval = setInterval(() => {\n      setMcpStatus(mcpService.getMcpStatus?.() ?? mcpStatus)\n    }, 5000)\n    return () => {\n      mcpService.offMcpEvent(handler)\n      clearInterval(interval)\n    }\n  }, [])\n\n  const categories = [\n    { id: 'database', name: 'Database', count: tools.filter(t => t.category === 'database').length },\n    { id: 'web', name: 'Web', count: tools.filter(t => t.category === 'web').length },\n    { id: 'git', name: 'Git', count: tools.filter(t => t.category === 'git').length },\n    { id: 'file', name: 'File', count: tools.filter(t => t.category === 'file').length },\n    { id: 'terminal', name: 'Terminal', count: tools.filter(t => t.category === 'terminal').length },\n    { id: 'math', name: 'Math', count: tools.filter(t => t.category === 'math').length },\n    { id: 'github', name: 'GitHub', count: tools.filter(t => t.category === 'github').length },\n  ]\n\n  const getToolIcon = (category: string) => {\n    switch (category) {\n      case 'database': return Database\n      case 'web': return Globe\n      case 'git': return GitBranch\n      case 'file': return FileSearch\n      case 'terminal': return Terminal\n      case 'math': return Calculator\n      case 'github': return Github\n      default: return Globe\n    }\n  }\n\n  const filteredTools = tools.filter(tool => !expandedCategory || tool.category === expandedCategory)\n\n  const executeTool = async (toolId: string) => {\n    setExecutingTool(toolId)\n    try {\n      // Get appropriate params based on tool\n      let params = {}\n      if (toolId === 'calculator') {\n        params = { expression: '2 + 2' } // Demo expression\n      } else if (toolId === 'web-search') {\n        params = { query: 'latest AI news' } // Demo query\n      } else if (toolId === 'github-api') {\n        params = { endpoint: '/user', method: 'GET' } // Demo API call\n      } else if (toolId === 'github-mcp') {\n        params = { request: { type: 'ping', ts: Date.now() } }\n      }\n\n      const result = await mcpService.executeTool(toolId, params)\n      setResults({\n        ...results,\n        [toolId]: result,\n      })\n    } catch (error) {\n      setResults({\n        ...results,\n        [toolId]: {\n          success: false,\n          error: error instanceof Error ? error.message : 'Execution failed',\n        },\n      })\n    } finally {\n      setExecutingTool(null)\n    }\n  }\n\n  const execPreset = async (action: 'list_repos' | 'open_pr' | 'review_file') => {\n    const request = (() => {\n      switch (action) {\n        case 'list_repos':\n          return { action: 'list_repos' }\n        case 'open_pr':\n          return {\n            action: 'open_pr',\n            params: {\n              owner: presetInputs.owner,\n              repo: presetInputs.repo,\n              base: presetInputs.base,\n              head: presetInputs.head,\n              title: presetInputs.title,\n              body: presetInputs.body,\n            },\n          }\n        case 'review_file':\n          return {\n            action: 'review_file',\n            params: {\n              owner: presetInputs.owner,\n              repo: presetInputs.repo,\n              path: presetInputs.filePath,\n              ref: presetInputs.ref,\n            },\n          }\n      }\n    })()\n    setExecutingTool('github-mcp')\n    try {\n      const result = await mcpService.executeTool('github-mcp', { request })\n      setResults(prev => ({ ...prev, ['github-mcp']: result }))\n    } catch (error) {\n      setResults(prev => ({\n        ...prev,\n        ['github-mcp']: { success: false, error: error instanceof Error ? error.message : 'Preset failed' },\n      }))\n    } finally {\n      setExecutingTool(null)\n    }\n  }\n\n  const formatLastEvent = (ts: number | null) => {\n    if (!ts) return '—'\n    const diff = Date.now() - ts\n    const s = Math.floor(diff / 1000)\n    if (s < 60) return `${s}s ago`\n    const m = Math.floor(s / 60)\n    if (m < 60) return `${m}m ago`\n    const h = Math.floor(m / 60)\n    return `${h}h ago`\n  }\n\n  const toggleTool = (toolId: string, enabled: boolean) => {\n    mcpService.toggleTool(toolId, enabled)\n    setTools(mcpService.getTools())\n  }\n\n  const connectGitHub = async () => {\n    if (!githubToken.trim()) return\n    setIsConnecting(true)\n    try {\n      await mcpService.connectGitHub(githubToken)\n      setGateways(mcpService.getGateways())\n      setTools(mcpService.getTools())\n      setGithubToken('')\n    } catch (error) {\n      console.error('Failed to connect GitHub:', error)\n      alert('Failed to connect GitHub. Please check your token.')\n    } finally {\n      setIsConnecting(false)\n    }\n  }\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <div className=\"flex items-center gap-2 mb-4\">\n        <Settings className=\"w-5 h-5 text-blue-600\" />\n        <h2 className=\"text-lg font-semibold\">MCP Tools</h2>\n      </div>\n\n      {/* Category Tabs */}\n      <div className=\"flex gap-2 mb-4 overflow-x-auto\">\n        {categories.map((category) => (\n          <button\n            key={category.id}\n            onClick={() => setExpandedCategory(category.id)}\n            className={`px-3 py-1.5 rounded-lg text-sm font-medium whitespace-nowrap transition-colors ${\n              expandedCategory === category.id\n                ? 'bg-blue-100 text-blue-700'\n                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n            }`}\n          >\n            {category.name}\n            <span className=\"ml-1 text-xs opacity-70\">({category.count})</span>\n          </button>\n        ))}\n      </div>\n\n      {/* GitHub Connection Gateway */}\n      <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\n        <h4 className=\"text-sm font-medium mb-2 flex items-center gap-2\">\n          <Github className=\"w-4 h-4\" />\n          GitHub Gateway\n        </h4>\n        <p className=\"text-xs text-gray-500 mb-2\">\n          Tip: For presets like Open PR or Review File, use a PAT with <span className=\"font-medium\">repo</span> scope. Read-only actions may work with minimal scopes.\n        </p>\n        {gateways.find(g => g.type === 'github' && g.status === 'connected') ? (\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-xs text-green-600 flex items-center gap-1\">\n                <Check className=\"w-3 h-3\" /> Connected\n              </span>\n              <button\n                onClick={() => {\n                  mcpService.disconnectGitHub()\n                  setGateways(mcpService.getGateways())\n                  setTools(mcpService.getTools())\n                  setMcpStatus(mcpService.getMcpStatus?.() ?? mcpStatus)\n                }}\n                className=\"text-xs text-red-600 hover:underline\"\n              >\n                Disconnect\n              </button>\n            </div>\n            <div className=\"grid grid-cols-2 gap-2 text-xs text-gray-600\">\n              <div>\n                <span className=\"font-medium\">Session:</span>{' '}\n                <span className=\"font-mono\">{mcpStatus.sessionId ? String(mcpStatus.sessionId).slice(0, 8) + '…' : '—'}</span>\n              </div>\n              <div>\n                <span className=\"font-medium\">Streaming:</span>{' '}\n                <span className={mcpStatus.streaming ? 'text-green-700' : 'text-gray-600'}>\n                  {mcpStatus.streaming ? 'Yes' : 'No'}\n                </span>\n              </div>\n              <div>\n                <span className=\"font-medium\">Last Event:</span>{' '}\n                {formatLastEvent(mcpStatus.lastEventAt ?? null)}\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2 pt-1\">\n              <button\n                onClick={async () => {\n                  try {\n                    await mcpService.startMcpStreaming?.()\n                  } finally {\n                    setMcpStatus(mcpService.getMcpStatus?.() ?? mcpStatus)\n                  }\n                }}\n                disabled={!!mcpStatus.streaming}\n                className=\"px-2 py-1 text-xs rounded bg-blue-600 text-white disabled:bg-gray-300 flex items-center gap-1\"\n                title=\"Start MCP stream\"\n              >\n                <Play className=\"w-3 h-3\" /> Start Stream\n              </button>\n              <button\n                onClick={() => {\n                  mcpService.stopMcpStreaming?.()\n                  setMcpStatus(mcpService.getMcpStatus?.() ?? mcpStatus)\n                }}\n                disabled={!mcpStatus.streaming}\n                className=\"px-2 py-1 text-xs rounded bg-gray-200 text-gray-800 disabled:bg-gray-100 flex items-center gap-1\"\n                title=\"Stop MCP stream (session persists)\"\n              >\n                <X className=\"w-3 h-3\" /> Stop Stream\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"space-y-2\">\n            <input\n              type=\"password\"\n              value={githubToken}\n              onChange={(e) => setGithubToken(e.target.value)}\n              placeholder=\"Enter GitHub personal access token\"\n              className=\"w-full px-2 py-1 text-xs border rounded\"\n              disabled={isConnecting}\n            />\n            <button\n              onClick={connectGitHub}\n              disabled={!githubToken.trim() || isConnecting}\n              className=\"w-full px-2 py-1 text-xs bg-black text-white rounded hover:bg-gray-800 disabled:bg-gray-400\"\n            >\n              {isConnecting ? 'Connecting...' : 'Connect GitHub'}\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* GitHub MCP Presets */}\n      {mcpStatus.connected && (\n        <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\n          <h4 className=\"text-sm font-medium mb-2 flex items-center gap-2\">\n            <Github className=\"w-4 h-4\" /> GitHub MCP Presets\n          </h4>\n          <div className=\"grid grid-cols-1 gap-2\">\n            <div className=\"flex items-center gap-2\">\n              <button\n                onClick={() => execPreset('list_repos')}\n                className=\"px-2 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700\"\n              >\n                List My Repos\n              </button>\n              <span className=\"text-xs text-gray-500\">Reads your repositories (no write)</span>\n            </div>\n\n            <div className=\"p-2 bg-white border rounded\">\n              <div className=\"text-xs font-medium mb-2\">Open Pull Request</div>\n              <div className=\"grid grid-cols-2 gap-2 mb-2\">\n                <input className=\"px-2 py-1 text-xs border rounded\" placeholder=\"owner\" value={presetInputs.owner} onChange={e => setPresetInputs({ ...presetInputs, owner: e.target.value })} />\n                <input className=\"px-2 py-1 text-xs border rounded\" placeholder=\"repo\" value={presetInputs.repo} onChange={e => setPresetInputs({ ...presetInputs, repo: e.target.value })} />\n                <input className=\"px-2 py-1 text-xs border rounded\" placeholder=\"base (default main)\" value={presetInputs.base} onChange={e => setPresetInputs({ ...presetInputs, base: e.target.value })} />\n                <input className=\"px-2 py-1 text-xs border rounded\" placeholder=\"head (branch)\" value={presetInputs.head} onChange={e => setPresetInputs({ ...presetInputs, head: e.target.value })} />\n                <input className=\"px-2 py-1 text-xs border rounded col-span-2\" placeholder=\"title\" value={presetInputs.title} onChange={e => setPresetInputs({ ...presetInputs, title: e.target.value })} />\n                <input className=\"px-2 py-1 text-xs border rounded col-span-2\" placeholder=\"body (optional)\" value={presetInputs.body} onChange={e => setPresetInputs({ ...presetInputs, body: e.target.value })} />\n              </div>\n              <button\n                onClick={() => execPreset('open_pr')}\n                disabled={!presetInputs.owner || !presetInputs.repo || !presetInputs.head || !presetInputs.title}\n                className=\"px-2 py-1 text-xs bg-emerald-600 text-white rounded hover:bg-emerald-700 disabled:bg-gray-300\"\n              >\n                Open PR\n              </button>\n            </div>\n\n            <div className=\"p-2 bg-white border rounded\">\n              <div className=\"text-xs font-medium mb-2\">Review File</div>\n              <div className=\"grid grid-cols-2 gap-2 mb-2\">\n                <input className=\"px-2 py-1 text-xs border rounded\" placeholder=\"owner\" value={presetInputs.owner} onChange={e => setPresetInputs({ ...presetInputs, owner: e.target.value })} />\n                <input className=\"px-2 py-1 text-xs border rounded\" placeholder=\"repo\" value={presetInputs.repo} onChange={e => setPresetInputs({ ...presetInputs, repo: e.target.value })} />\n                <input className=\"px-2 py-1 text-xs border rounded col-span-2\" placeholder=\"path (e.g., src/index.ts)\" value={presetInputs.filePath} onChange={e => setPresetInputs({ ...presetInputs, filePath: e.target.value })} />\n                <input className=\"px-2 py-1 text-xs border rounded col-span-2\" placeholder=\"ref (branch/tag/sha)\" value={presetInputs.ref} onChange={e => setPresetInputs({ ...presetInputs, ref: e.target.value })} />\n              </div>\n              <button\n                onClick={() => execPreset('review_file')}\n                disabled={!presetInputs.owner || !presetInputs.repo || !presetInputs.filePath}\n                className=\"px-2 py-1 text-xs bg-indigo-600 text-white rounded hover:bg-indigo-700 disabled:bg-gray-300\"\n              >\n                Review File\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Tools Grid */}\n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"space-y-2\">\n          <div>\n            <h4 className=\"text-sm font-medium mb-2 flex items-center gap-2\">\n              <Github className=\"w-4 h-4\" /> Tools\n            </h4>\n            <div className=\"grid grid-cols-2 gap-3\">\n              {filteredTools.map((tool) => {\n                const Icon = getToolIcon(tool.category)\n                const isDisabled = !tool.enabled\n                return (\n                  <div\n                    key={tool.id}\n                    onClick={() => !isDisabled && executeTool(tool.id)}\n                    className={`p-3 rounded-lg border transition-all ${\n                      isDisabled\n                        ? 'border-gray-200 bg-gray-50 opacity-50 cursor-not-allowed'\n                        : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50 cursor-pointer'\n                    }`}\n                  >\n                    <div className=\"flex flex-col items-center text-center\">\n                      <div className=\"p-2 rounded-lg mb-2 bg-gray-100\">\n                        <Icon className={`w-6 h-6 ${isDisabled ? 'text-gray-400' : 'text-gray-600'}`} />\n                      </div>\n                      <h3 className=\"text-sm font-medium text-gray-900\">{tool.name}</h3>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* Tool Details */}\n        {executingTool && (\n          <div className=\"mt-4 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n            {(() => {\n              const tool = tools.find(t => t.id === executingTool)\n              if (!tool) return null\n              const Icon = getToolIcon(tool.category)\n\n              return (\n                <>\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Icon className=\"w-5 h-5 text-blue-600\" />\n                    <h3 className=\"font-medium text-gray-900\">{tool.name}</h3>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-3\">{tool.description}</p>\n                  <button className=\"w-full px-3 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 transition-colors\">\n                    Use Tool\n                  </button>\n                </>\n              )\n            })()}\n          </div>\n        )}\n\n        {/* MCP Streaming Events */}\n        {mcpEvents.length > 0 && (\n          <div className=\"mt-4 p-3 bg-gray-50 rounded-lg border border-gray-200\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Github className=\"w-4 h-4 text-gray-700\" />\n              <h4 className=\"text-sm font-medium\">GitHub MCP Stream</h4>\n              <button\n                onClick={() => setMcpEvents([])}\n                className=\"ml-auto text-xs px-2 py-1 rounded bg-gray-200 hover:bg-gray-300\"\n              >\n                Clear\n              </button>\n            </div>\n            <pre className=\"text-xs whitespace-pre-wrap max-h-56 overflow-auto bg-white p-2 rounded border\">\n              {mcpEvents.join('\\n\\n')}\n            </pre>\n          </div>\n        )}\n      </div>\n\n      {/* Settings */}\n      <div className=\"mt-4 pt-4 border-t border-gray-200\">\n        <div className=\"text-xs text-gray-500 mb-2\">Connected MCP Servers: 3</div>\n        <button className=\"w-full px-4 py-2 bg-gray-100 text-gray-700 text-sm rounded-lg hover:bg-gray-200 transition-colors\">\n          Configure MCP Tools\n        </button>\n      </div>\n    </div>\n  )\n}\n"],"names":["MCPToolsPanel","chatId","expandedCategory","setExpandedCategory","useState","executingTool","setExecutingTool","results","setResults","tools","setTools","mcpService","getTools","gateways","setGateways","getGateways","githubToken","setGithubToken","isConnecting","setIsConnecting","mcpEvents","setMcpEvents","mcpStatus","setMcpStatus","getMcpStatus","connected","sessionId","streaming","lastEventAt","presetInputs","setPresetInputs","owner","repo","base","head","title","body","filePath","ref","useEffect","handler","evt","prev","slice","onMcpEvent","interval","setInterval","offMcpEvent","clearInterval","categories","id","name","count","filter","t","category","length","getToolIcon","Database","Globe","GitBranch","FileSearch","Terminal","Calculator","Github","filteredTools","tool","executeTool","toolId","params","expression","query","endpoint","method","request","type","ts","Date","now","result","error","success","Error","message","execPreset","action","path","formatLastEvent","diff","s","Math","floor","m","h","toggleTool","enabled","connectGitHub","trim","console","alert","div","className","Settings","h2","map","button","onClick","span","h4","p","find","g","status","Check","disconnectGitHub","String","startMcpStreaming","disabled","Play","stopMcpStreaming","X","input","value","onChange","e","target","placeholder","Icon","isDisabled","h3","description","pre","join"],"mappings":"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"}