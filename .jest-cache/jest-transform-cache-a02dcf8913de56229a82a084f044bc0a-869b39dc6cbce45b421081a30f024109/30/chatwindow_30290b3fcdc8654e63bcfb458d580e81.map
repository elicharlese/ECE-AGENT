{"version":3,"sources":["/Users/elicharlese/CascadeProjects/ECE-AGENT/components/chat/chat-window.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useRef, useEffect } from \"react\"\nimport { Phone, Video, Bot, SquareArrowOutUpRight } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { MessageBubble } from \"./message-bubble\"\nimport { UserProfile } from \"./user-profile\"\nimport { PinnedMessages } from \"./pinned-messages\"\nimport { MobileMessageInput } from \"./mobile-message-input\"\nimport { PullToRefresh } from \"./pull-to-refresh\"\nimport dynamic from \"next/dynamic\"\nconst AppLauncher = dynamic(() => import(\"../apps/app-launcher\").then(m => m.AppLauncher), {\n  ssr: false,\n  loading: () => <div className=\"text-xs text-gray-400\">Loading…</div>,\n})\nconst AppMessage = dynamic(() => import(\"../apps/app-message\").then(m => m.AppMessage), {\n  ssr: false,\n})\nconst CalculatorApp = dynamic(() => import(\"../apps/mini-apps/calculator-app\").then(m => m.CalculatorApp), {\n  ssr: false,\n})\nconst TicTacToeApp = dynamic(() => import(\"../apps/mini-apps/tic-tac-toe-app\").then(m => m.TicTacToeApp), {\n  ssr: false,\n})\nconst EventPlannerApp = dynamic(() => import(\"../apps/mini-apps/event-planner-app\").then(m => m.EventPlannerApp), {\n  ssr: false,\n})\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { useHaptics } from \"@/hooks/use-haptics\"\nconst AgentIntegration = dynamic(() => import(\"../agents/agent-integration\").then(m => m.AgentIntegration), {\n  ssr: false,\n})\nconst PhoneCallUI = dynamic(() => import(\"../calls/phone-call-ui\").then(m => m.PhoneCallUI), {\n  ssr: false,\n})\nconst VideoCallUI = dynamic(() => import(\"../calls/video-call-ui\").then(m => m.VideoCallUI), {\n  ssr: false,\n})\nimport { useWebSocket } from \"@/hooks/use-websocket\"\nimport { TypingIndicator } from \"./typing-indicator\"\nimport { useConversations } from \"@/hooks/use-conversations\"\n\ninterface Message {\n  id: string\n  content: string\n  timestamp: Date\n  senderId: string\n  senderName: string\n  type: \"text\" | \"image\" | \"video\" | \"audio\" | \"document\" | \"system\" | \"gif\" | \"app\"\n  isOwn: boolean\n  mediaUrl?: string\n  fileName?: string\n  fileSize?: string\n  isPinned?: boolean\n  isLiked?: boolean\n  likeCount?: number\n  appData?: {\n    appId: string\n    appName: string\n  }\n}\n\nconst mockMessages: Message[] = [\n  {\n    id: \"1\",\n    content: \"Hey! How was your day?\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 30),\n    senderId: \"2\",\n    senderName: \"Sarah Wilson\",\n    type: \"text\",\n    isOwn: false,\n  },\n  {\n    id: \"2\",\n    content: \"It was great! Just finished a big project at work. How about you?\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 25),\n    senderId: \"1\",\n    senderName: \"You\",\n    type: \"text\",\n    isOwn: true,\n  },\n  {\n    id: \"3\",\n    content:\n      \"📅 Event: Team Meeting\\n📍 Conference Room A\\n🕐 2024-01-15 at 14:00\\n👥 Attendees: Sarah, John, Mike\\n📝 Quarterly review and planning\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 20),\n    senderId: \"2\",\n    senderName: \"Sarah Wilson\",\n    type: \"app\",\n    isOwn: false,\n    appData: {\n      appId: \"event-planner\",\n      appName: \"Event Planner\",\n    },\n  },\n  {\n    id: \"4\",\n    content: \"🎮 Tic Tac Toe: Player X wins!\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 18),\n    senderId: \"1\",\n    senderName: \"You\",\n    type: \"app\",\n    isOwn: true,\n    appData: {\n      appId: \"tic-tac-toe\",\n      appName: \"Tic Tac Toe\",\n    },\n  },\n  {\n    id: \"5\",\n    content: \"Thanks! Want to celebrate over dinner this weekend?\",\n    timestamp: new Date(Date.now() - 1000 * 60 * 15),\n    senderId: \"1\",\n    senderName: \"You\",\n    type: \"text\",\n    isOwn: true,\n    isLiked: true,\n    likeCount: 2,\n  },\n]\n\ninterface ChatWindowProps {\n  chatId: string\n  onToggleSidebar: () => void\n  sidebarCollapsed: boolean\n}\n\nexport function ChatWindow({ chatId, onToggleSidebar, sidebarCollapsed }: ChatWindowProps) {\n  const [messages, setMessages] = useState<Message[]>(mockMessages)\n  const [newMessage, setNewMessage] = useState(\"\")\n  const [activeApp, setActiveApp] = useState<string | null>(null)\n  const [activeAppName, setActiveAppName] = useState<string>(\"\")\n  const [showAgentIntegration, setShowAgentIntegration] = useState(false)\n  const [showPhoneCall, setShowPhoneCall] = useState(false)\n  const [showVideoCall, setShowVideoCall] = useState(false)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n  const isMobile = useIsMobile()\n  const { triggerHaptic } = useHaptics()\n  const { isConnected, messages: wsMessages, joinConversation, sendChatMessage, sendTyping, typingUsers: wsTypingUsers } = useWebSocket()\n  const { conversations } = useConversations()\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n\n  useEffect(() => {\n    // Join the conversation when the component mounts\n    if (isConnected) {\n      joinConversation(chatId)\n    }\n  }, [isConnected, chatId])\n\n  useEffect(() => {\n    // Map the latest useWebSocket message (shape: { id, text, sender, senderName?, timestamp, conversationId, type? })\n    if (wsMessages.length === 0) return\n    const latest: any = wsMessages[wsMessages.length - 1]\n    if (latest && typeof latest === 'object' && 'text' in latest) {\n      const mapped: Message = {\n        id: latest.id || Date.now().toString(),\n        content: latest.text || '',\n        timestamp: latest.timestamp instanceof Date ? latest.timestamp : new Date(latest.timestamp || Date.now()),\n        senderId: latest.sender === 'user' ? '1' : latest.sender === 'ai' ? 'ai-assistant' : 'other',\n        senderName: latest.senderName || (latest.sender === 'user' ? 'You' : latest.sender === 'ai' ? 'AI Assistant' : 'Other'),\n        type: latest.type || 'text',\n        isOwn: latest.sender === 'user',\n        mediaUrl: latest.mediaUrl,\n        fileName: latest.fileName,\n        fileSize: latest.fileSize,\n        isPinned: latest.isPinned,\n        isLiked: latest.isLiked,\n        likeCount: latest.likeCount,\n        appData: latest.appData ? { appId: latest.appData.appId, appName: latest.appData.appName } : undefined,\n      }\n      setMessages(prev => (prev.some(m => m.id === mapped.id) ? prev : [...prev, mapped]))\n    }\n  }, [wsMessages])\n\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return\n\n    // Send message via WebSocket\n    // useWebSocket expects (text, conversationId)\n    sendChatMessage(newMessage, chatId)\n    setNewMessage(\"\")\n  }\n\n  const handleEmojiSelect = (emoji: string) => {\n    setNewMessage((prev) => prev + emoji)\n  }\n\n  const handleFileSelect = (file: File, type: string) => {\n    const fileUrl = URL.createObjectURL(file)\n    const message: Message = {\n      id: Date.now().toString(),\n      content: `Shared a ${type}`,\n      timestamp: new Date(),\n      senderId: \"1\",\n      senderName: \"You\",\n      type: type as Message[\"type\"],\n      isOwn: true,\n      mediaUrl: fileUrl,\n      fileName: file.name,\n      fileSize: `${(file.size / 1024 / 1024).toFixed(1)} MB`,\n    }\n\n    setMessages((prev) => [...prev, message])\n  }\n\n  const handleRefresh = async () => {\n    await new Promise((resolve) => setTimeout(resolve, 1000))\n    triggerHaptic(\"success\")\n    console.log(\"Refreshed messages\")\n  }\n\n  const handleLaunchApp = (appId: string, appName: string) => {\n    setActiveApp(appId)\n    setActiveAppName(appName)\n  }\n\n  const handleAppShare = (content: string, appId: string, appName: string) => {\n    const message: Message = {\n      id: Date.now().toString(),\n      content,\n      timestamp: new Date(),\n      senderId: \"1\",\n      senderName: \"You\",\n      type: \"app\",\n      isOwn: true,\n      appData: {\n        appId,\n        appName,\n      },\n    }\n\n    setMessages((prev) => [...prev, message])\n    setActiveApp(null)\n    setActiveAppName(\"\")\n  }\n\n  const handleOpenApp = (appId: string) => {\n    // Find app name from the message or use default\n    const appNames: Record<string, string> = {\n      calculator: \"Calculator\",\n      \"tic-tac-toe\": \"Tic Tac Toe\",\n      \"event-planner\": \"Event Planner\",\n    }\n    handleLaunchApp(appId, appNames[appId] || \"App\")\n  }\n\n  const renderActiveApp = () => {\n    switch (activeApp) {\n      case \"calculator\":\n        return <CalculatorApp onShare={(result) => handleAppShare(result, \"calculator\", \"Calculator\")} />\n      case \"tic-tac-toe\":\n        return <TicTacToeApp onShare={(result) => handleAppShare(result, \"tic-tac-toe\", \"Tic Tac Toe\")} />\n      case \"event-planner\":\n        return <EventPlannerApp onShare={(event) => handleAppShare(event, \"event-planner\", \"Event Planner\")} />\n      default:\n        return null\n    }\n  }\n\n  const handleAgentMessage = (agentId: string, message: string) => {\n    const agentMessage: Message = {\n      id: Date.now().toString(),\n      content: message,\n      timestamp: new Date(),\n      senderId: agentId,\n      senderName: `Agent ${agentId}`,\n      type: \"text\",\n      isOwn: false,\n    }\n    setMessages((prev) => [...prev, agentMessage])\n  }\n\n  const handleAgentAppLaunch = (appId: string, agentId: string, context?: any) => {\n    const appNames: Record<string, string> = {\n      calculator: \"Calculator\",\n      \"tic-tac-toe\": \"Tic Tac Toe\",\n      \"event-planner\": \"Event Planner\",\n    }\n\n    // Launch app with agent context\n    setActiveApp(appId)\n    setActiveAppName(appNames[appId] || \"App\")\n\n    // Send agent message about app launch\n    handleAgentMessage(agentId, `I've launched ${appNames[appId]} for you based on our conversation.`)\n  }\n\n  const handleWorkflowTrigger = (workflowId: string, agentId: string) => {\n    console.log(`Agent ${agentId} triggered workflow ${workflowId}`)\n    handleAgentMessage(agentId, `I'm running a workflow to help with your request...`)\n  }\n\n  const handlePhoneCall = () => {\n    setShowPhoneCall(true)\n    triggerHaptic(\"medium\")\n  }\n\n  const handleVideoCall = () => {\n    setShowVideoCall(true)\n    triggerHaptic(\"medium\")\n  }\n\n  const handlePopout = () => {\n    try {\n      const origin = typeof window !== 'undefined' ? window.location.origin : ''\n      const url = new URL('/messages', origin || 'http://localhost')\n      url.searchParams.set('c', chatId)\n      url.searchParams.set('popout', '1')\n      window.open(url.toString(), '_blank', 'noopener,noreferrer,width=520,height=720')\n    } catch (e) {\n      console.error('Failed to open popout window', e)\n    }\n  }\n\n  // Derive chat info from conversations state using chatId\n  const conversation = conversations.find(c => c.id === chatId)\n  const chatInfo = {\n    id: chatId,\n    name: conversation?.title || 'New Chat',\n    email: '',\n    phone: undefined as string | undefined,\n    bio: conversation?.title ? `Conversation • ${conversation.title}` : 'New conversation',\n    status: 'online' as const,\n    customStatus: undefined as string | undefined,\n    avatar: undefined as string | undefined,\n  }\n\n  return (\n    <div className=\"flex flex-col h-full bg-white dark:bg-gray-900\">\n      {/* Header */}\n      <div\n        className={`\n        flex items-center justify-between bg-white dark:bg-gray-800 border-b border-transparent\n        ${isMobile ? \"px-3 py-2 safe-area-inset-top\" : \"p-4\"}\n        flex-shrink-0\n      `}\n      >\n        <div className=\"flex items-center gap-3\">\n          <UserProfile user={chatInfo} isOwnProfile={false} />\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          <PinnedMessages chatId={chatId} />\n          <Button variant=\"ghost\" size=\"sm\" onClick={handlePopout} title=\"Open in new window\" aria-label=\"Open in new window\">\n            <SquareArrowOutUpRight className=\"h-4 w-4\" />\n          </Button>\n          <AppLauncher onLaunchApp={handleLaunchApp} />\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => setShowAgentIntegration(true)}>\n            <Bot className=\"h-4 w-4\" />\n          </Button>\n          <Button variant=\"ghost\" size=\"sm\" onClick={handlePhoneCall}>\n            <Phone className=\"h-4 w-4\" />\n          </Button>\n          <Button variant=\"ghost\" size=\"sm\" onClick={handleVideoCall}>\n            <Video className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n\n      {/* Messages with Pull to Refresh */}\n      <div className=\"flex-1 min-h-0 overflow-hidden\">\n        <PullToRefresh onRefresh={handleRefresh}>\n          <div className={`h-full ${isMobile ? \"px-3 py-2\" : \"p-4\"}`}>\n            <div className=\"space-y-4\">\n              {messages.map((message) =>\n                message.type === \"app\" ? (\n                  <div key={message.id} className={`flex ${message.isOwn ? \"justify-end\" : \"justify-start\"}`}>\n                    <AppMessage\n                      message={{\n                        appId: message.appData?.appId || \"\",\n                        appName: message.appData?.appName || \"\",\n                        content: message.content,\n                        timestamp: message.timestamp,\n                      }}\n                      onOpenApp={handleOpenApp}\n                    />\n                  </div>\n                ) : (\n                  <MessageBubble key={message.id} message={message} />\n                ),\n              )}\n              {/* Typing Indicators */}\n              {Object.entries(wsTypingUsers).map(([userId, userInfo]) => (\n                <TypingIndicator \n                  key={userId} \n                  userId={userId} \n                  userName={userInfo.name} \n                />\n              ))}\n              <div ref={messagesEndRef} />\n            </div>\n          </div>\n        </PullToRefresh>\n      </div>\n\n      {/* Message Input */}\n      <div className=\"flex-shrink-0\">\n        <MobileMessageInput\n          value={newMessage}\n          onChange={setNewMessage}\n          onSend={handleSendMessage}\n          onEmojiSelect={handleEmojiSelect}\n          onFileSelect={handleFileSelect}\n        />\n      </div>\n\n      {/* App Modal */}\n      <Dialog open={!!activeApp} onOpenChange={() => setActiveApp(null)}>\n        <DialogContent className=\"max-w-fit\">\n          <DialogHeader>\n            <DialogTitle>{activeAppName}</DialogTitle>\n          </DialogHeader>\n          {renderActiveApp()}\n        </DialogContent>\n      </Dialog>\n\n      {/* Agent Integration Dialog */}\n      <Dialog open={showAgentIntegration} onOpenChange={setShowAgentIntegration}>\n        <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-hidden\">\n          <DialogHeader>\n            <DialogTitle>Agent Integration</DialogTitle>\n          </DialogHeader>\n          <AgentIntegration\n            chatId={chatId}\n            onAgentMessage={handleAgentMessage}\n            onAppLaunch={handleAgentAppLaunch}\n            onWorkflowTrigger={handleWorkflowTrigger}\n          />\n        </DialogContent>\n      </Dialog>\n\n      {/* Call UI Dialogs */}\n      <PhoneCallUI\n        isOpen={showPhoneCall}\n        onClose={() => setShowPhoneCall(false)}\n        contact={chatInfo}\n        callType=\"outgoing\"\n      />\n\n      <VideoCallUI\n        isOpen={showVideoCall}\n        onClose={() => setShowVideoCall(false)}\n        contact={chatInfo}\n        callType=\"outgoing\"\n      />\n    </div>\n  )\n}\n"],"names":["ChatWindow","AppLauncher","dynamic","then","m","ssr","loading","div","className","AppMessage","CalculatorApp","TicTacToeApp","EventPlannerApp","AgentIntegration","PhoneCallUI","VideoCallUI","mockMessages","id","content","timestamp","Date","now","senderId","senderName","type","isOwn","appData","appId","appName","isLiked","likeCount","chatId","onToggleSidebar","sidebarCollapsed","messages","setMessages","useState","newMessage","setNewMessage","activeApp","setActiveApp","activeAppName","setActiveAppName","showAgentIntegration","setShowAgentIntegration","showPhoneCall","setShowPhoneCall","showVideoCall","setShowVideoCall","messagesEndRef","useRef","isMobile","useIsMobile","triggerHaptic","useHaptics","isConnected","wsMessages","joinConversation","sendChatMessage","sendTyping","typingUsers","wsTypingUsers","useWebSocket","conversations","useConversations","scrollToBottom","current","scrollIntoView","behavior","useEffect","length","latest","mapped","toString","text","sender","mediaUrl","fileName","fileSize","isPinned","undefined","prev","some","handleSendMessage","trim","handleEmojiSelect","emoji","handleFileSelect","file","fileUrl","URL","createObjectURL","message","name","size","toFixed","handleRefresh","Promise","resolve","setTimeout","console","log","handleLaunchApp","handleAppShare","handleOpenApp","appNames","calculator","renderActiveApp","onShare","result","event","handleAgentMessage","agentId","agentMessage","handleAgentAppLaunch","context","handleWorkflowTrigger","workflowId","handlePhoneCall","handleVideoCall","handlePopout","origin","window","location","url","searchParams","set","open","e","error","conversation","find","c","chatInfo","title","email","phone","bio","status","customStatus","avatar","UserProfile","user","isOwnProfile","PinnedMessages","Button","variant","onClick","aria-label","SquareArrowOutUpRight","onLaunchApp","Bot","Phone","Video","PullToRefresh","onRefresh","map","onOpenApp","MessageBubble","Object","entries","userId","userInfo","TypingIndicator","userName","ref","MobileMessageInput","value","onChange","onSend","onEmojiSelect","onFileSelect","Dialog","onOpenChange","DialogContent","DialogHeader","DialogTitle","onAgentMessage","onAppLaunch","onWorkflowTrigger","isOpen","onClose","contact","callType"],"mappings":"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"}