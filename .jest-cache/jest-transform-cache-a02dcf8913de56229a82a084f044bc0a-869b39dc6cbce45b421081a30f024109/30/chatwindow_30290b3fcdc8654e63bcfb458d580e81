8f712d6b9428198b52201fa26d6affcb
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ChatWindow", {
    enumerable: true,
    get: function() {
        return ChatWindow;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _lucidereact = require("lucide-react");
const _button = require("../ui/button");
const _messagebubble = require("./message-bubble");
const _userprofile = require("./user-profile");
const _pinnedmessages = require("./pinned-messages");
const _mobilemessageinput = require("./mobile-message-input");
const _pulltorefresh = require("./pull-to-refresh");
const _dynamic = /*#__PURE__*/ _interop_require_default(require("next/dynamic"));
const _dialog = require("../ui/dialog");
const _usemobile = require("../../hooks/use-mobile");
const _usehaptics = require("../../hooks/use-haptics");
const _usewebsocket = require("../../hooks/use-websocket");
const _typingindicator = require("./typing-indicator");
const _useconversations = require("../../hooks/use-conversations");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const AppLauncher = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../apps/app-launcher"))).then((m)=>m.AppLauncher), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("../apps/app-launcher")
            ]
    },
    ssr: false,
    loading: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "text-xs text-gray-400",
            children: "Loading…"
        })
});
const AppMessage = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../apps/app-message"))).then((m)=>m.AppMessage), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("../apps/app-message")
            ]
    },
    ssr: false
});
const CalculatorApp = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../apps/mini-apps/calculator-app"))).then((m)=>m.CalculatorApp), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("../apps/mini-apps/calculator-app")
            ]
    },
    ssr: false
});
const TicTacToeApp = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../apps/mini-apps/tic-tac-toe-app"))).then((m)=>m.TicTacToeApp), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("../apps/mini-apps/tic-tac-toe-app")
            ]
    },
    ssr: false
});
const EventPlannerApp = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../apps/mini-apps/event-planner-app"))).then((m)=>m.EventPlannerApp), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("../apps/mini-apps/event-planner-app")
            ]
    },
    ssr: false
});
const AgentIntegration = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../agents/agent-integration"))).then((m)=>m.AgentIntegration), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("../agents/agent-integration")
            ]
    },
    ssr: false
});
const PhoneCallUI = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../calls/phone-call-ui"))).then((m)=>m.PhoneCallUI), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("../calls/phone-call-ui")
            ]
    },
    ssr: false
});
const VideoCallUI = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../calls/video-call-ui"))).then((m)=>m.VideoCallUI), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("../calls/video-call-ui")
            ]
    },
    ssr: false
});
const mockMessages = [
    {
        id: "1",
        content: "Hey! How was your day?",
        timestamp: new Date(Date.now() - 1000 * 60 * 30),
        senderId: "2",
        senderName: "Sarah Wilson",
        type: "text",
        isOwn: false
    },
    {
        id: "2",
        content: "It was great! Just finished a big project at work. How about you?",
        timestamp: new Date(Date.now() - 1000 * 60 * 25),
        senderId: "1",
        senderName: "You",
        type: "text",
        isOwn: true
    },
    {
        id: "3",
        content: "📅 Event: Team Meeting\n📍 Conference Room A\n🕐 2024-01-15 at 14:00\n👥 Attendees: Sarah, John, Mike\n📝 Quarterly review and planning",
        timestamp: new Date(Date.now() - 1000 * 60 * 20),
        senderId: "2",
        senderName: "Sarah Wilson",
        type: "app",
        isOwn: false,
        appData: {
            appId: "event-planner",
            appName: "Event Planner"
        }
    },
    {
        id: "4",
        content: "🎮 Tic Tac Toe: Player X wins!",
        timestamp: new Date(Date.now() - 1000 * 60 * 18),
        senderId: "1",
        senderName: "You",
        type: "app",
        isOwn: true,
        appData: {
            appId: "tic-tac-toe",
            appName: "Tic Tac Toe"
        }
    },
    {
        id: "5",
        content: "Thanks! Want to celebrate over dinner this weekend?",
        timestamp: new Date(Date.now() - 1000 * 60 * 15),
        senderId: "1",
        senderName: "You",
        type: "text",
        isOwn: true,
        isLiked: true,
        likeCount: 2
    }
];
function ChatWindow({ chatId, onToggleSidebar, sidebarCollapsed }) {
    const [messages, setMessages] = (0, _react.useState)(mockMessages);
    const [newMessage, setNewMessage] = (0, _react.useState)("");
    const [activeApp, setActiveApp] = (0, _react.useState)(null);
    const [activeAppName, setActiveAppName] = (0, _react.useState)("");
    const [showAgentIntegration, setShowAgentIntegration] = (0, _react.useState)(false);
    const [showPhoneCall, setShowPhoneCall] = (0, _react.useState)(false);
    const [showVideoCall, setShowVideoCall] = (0, _react.useState)(false);
    const messagesEndRef = (0, _react.useRef)(null);
    const isMobile = (0, _usemobile.useIsMobile)();
    const { triggerHaptic } = (0, _usehaptics.useHaptics)();
    const { isConnected, messages: wsMessages, joinConversation, sendChatMessage, sendTyping, typingUsers: wsTypingUsers } = (0, _usewebsocket.useWebSocket)();
    const { conversations } = (0, _useconversations.useConversations)();
    const scrollToBottom = ()=>{
        messagesEndRef.current?.scrollIntoView({
            behavior: "smooth"
        });
    };
    (0, _react.useEffect)(()=>{
        scrollToBottom();
    }, [
        messages
    ]);
    (0, _react.useEffect)(()=>{
        // Join the conversation when the component mounts
        if (isConnected) {
            joinConversation(chatId);
        }
    }, [
        isConnected,
        chatId
    ]);
    (0, _react.useEffect)(()=>{
        // Map the latest useWebSocket message (shape: { id, text, sender, senderName?, timestamp, conversationId, type? })
        if (wsMessages.length === 0) return;
        const latest = wsMessages[wsMessages.length - 1];
        if (latest && typeof latest === 'object' && 'text' in latest) {
            const mapped = {
                id: latest.id || Date.now().toString(),
                content: latest.text || '',
                timestamp: latest.timestamp instanceof Date ? latest.timestamp : new Date(latest.timestamp || Date.now()),
                senderId: latest.sender === 'user' ? '1' : latest.sender === 'ai' ? 'ai-assistant' : 'other',
                senderName: latest.senderName || (latest.sender === 'user' ? 'You' : latest.sender === 'ai' ? 'AI Assistant' : 'Other'),
                type: latest.type || 'text',
                isOwn: latest.sender === 'user',
                mediaUrl: latest.mediaUrl,
                fileName: latest.fileName,
                fileSize: latest.fileSize,
                isPinned: latest.isPinned,
                isLiked: latest.isLiked,
                likeCount: latest.likeCount,
                appData: latest.appData ? {
                    appId: latest.appData.appId,
                    appName: latest.appData.appName
                } : undefined
            };
            setMessages((prev)=>prev.some((m)=>m.id === mapped.id) ? prev : [
                    ...prev,
                    mapped
                ]);
        }
    }, [
        wsMessages
    ]);
    const handleSendMessage = ()=>{
        if (!newMessage.trim()) return;
        // Send message via WebSocket
        // useWebSocket expects (text, conversationId)
        sendChatMessage(newMessage, chatId);
        setNewMessage("");
    };
    const handleEmojiSelect = (emoji)=>{
        setNewMessage((prev)=>prev + emoji);
    };
    const handleFileSelect = (file, type)=>{
        const fileUrl = URL.createObjectURL(file);
        const message = {
            id: Date.now().toString(),
            content: `Shared a ${type}`,
            timestamp: new Date(),
            senderId: "1",
            senderName: "You",
            type: type,
            isOwn: true,
            mediaUrl: fileUrl,
            fileName: file.name,
            fileSize: `${(file.size / 1024 / 1024).toFixed(1)} MB`
        };
        setMessages((prev)=>[
                ...prev,
                message
            ]);
    };
    const handleRefresh = async ()=>{
        await new Promise((resolve)=>setTimeout(resolve, 1000));
        triggerHaptic("success");
        console.log("Refreshed messages");
    };
    const handleLaunchApp = (appId, appName)=>{
        setActiveApp(appId);
        setActiveAppName(appName);
    };
    const handleAppShare = (content, appId, appName)=>{
        const message = {
            id: Date.now().toString(),
            content,
            timestamp: new Date(),
            senderId: "1",
            senderName: "You",
            type: "app",
            isOwn: true,
            appData: {
                appId,
                appName
            }
        };
        setMessages((prev)=>[
                ...prev,
                message
            ]);
        setActiveApp(null);
        setActiveAppName("");
    };
    const handleOpenApp = (appId)=>{
        // Find app name from the message or use default
        const appNames = {
            calculator: "Calculator",
            "tic-tac-toe": "Tic Tac Toe",
            "event-planner": "Event Planner"
        };
        handleLaunchApp(appId, appNames[appId] || "App");
    };
    const renderActiveApp = ()=>{
        switch(activeApp){
            case "calculator":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(CalculatorApp, {
                    onShare: (result)=>handleAppShare(result, "calculator", "Calculator")
                });
            case "tic-tac-toe":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(TicTacToeApp, {
                    onShare: (result)=>handleAppShare(result, "tic-tac-toe", "Tic Tac Toe")
                });
            case "event-planner":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(EventPlannerApp, {
                    onShare: (event)=>handleAppShare(event, "event-planner", "Event Planner")
                });
            default:
                return null;
        }
    };
    const handleAgentMessage = (agentId, message)=>{
        const agentMessage = {
            id: Date.now().toString(),
            content: message,
            timestamp: new Date(),
            senderId: agentId,
            senderName: `Agent ${agentId}`,
            type: "text",
            isOwn: false
        };
        setMessages((prev)=>[
                ...prev,
                agentMessage
            ]);
    };
    const handleAgentAppLaunch = (appId, agentId, context)=>{
        const appNames = {
            calculator: "Calculator",
            "tic-tac-toe": "Tic Tac Toe",
            "event-planner": "Event Planner"
        };
        // Launch app with agent context
        setActiveApp(appId);
        setActiveAppName(appNames[appId] || "App");
        // Send agent message about app launch
        handleAgentMessage(agentId, `I've launched ${appNames[appId]} for you based on our conversation.`);
    };
    const handleWorkflowTrigger = (workflowId, agentId)=>{
        console.log(`Agent ${agentId} triggered workflow ${workflowId}`);
        handleAgentMessage(agentId, `I'm running a workflow to help with your request...`);
    };
    const handlePhoneCall = ()=>{
        setShowPhoneCall(true);
        triggerHaptic("medium");
    };
    const handleVideoCall = ()=>{
        setShowVideoCall(true);
        triggerHaptic("medium");
    };
    const handlePopout = ()=>{
        try {
            const origin = typeof window !== 'undefined' ? window.location.origin : '';
            const url = new URL('/messages', origin || 'http://localhost');
            url.searchParams.set('c', chatId);
            url.searchParams.set('popout', '1');
            window.open(url.toString(), '_blank', 'noopener,noreferrer,width=520,height=720');
        } catch (e) {
            console.error('Failed to open popout window', e);
        }
    };
    // Derive chat info from conversations state using chatId
    const conversation = conversations.find((c)=>c.id === chatId);
    const chatInfo = {
        id: chatId,
        name: conversation?.title || 'New Chat',
        email: '',
        phone: undefined,
        bio: conversation?.title ? `Conversation • ${conversation.title}` : 'New conversation',
        status: 'online',
        customStatus: undefined,
        avatar: undefined
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "flex flex-col h-full bg-white dark:bg-gray-900",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: `
        flex items-center justify-between bg-white dark:bg-gray-800 border-b border-transparent
        ${isMobile ? "px-3 py-2 safe-area-inset-top" : "p-4"}
        flex-shrink-0
      `,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "flex items-center gap-3",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_userprofile.UserProfile, {
                            user: chatInfo,
                            isOwnProfile: false
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_pinnedmessages.PinnedMessages, {
                                chatId: chatId
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                variant: "ghost",
                                size: "sm",
                                onClick: handlePopout,
                                title: "Open in new window",
                                "aria-label": "Open in new window",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.SquareArrowOutUpRight, {
                                    className: "h-4 w-4"
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(AppLauncher, {
                                onLaunchApp: handleLaunchApp
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                variant: "ghost",
                                size: "sm",
                                onClick: ()=>setShowAgentIntegration(true),
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Bot, {
                                    className: "h-4 w-4"
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                variant: "ghost",
                                size: "sm",
                                onClick: handlePhoneCall,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Phone, {
                                    className: "h-4 w-4"
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                variant: "ghost",
                                size: "sm",
                                onClick: handleVideoCall,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Video, {
                                    className: "h-4 w-4"
                                })
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex-1 min-h-0 overflow-hidden",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_pulltorefresh.PullToRefresh, {
                    onRefresh: handleRefresh,
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: `h-full ${isMobile ? "px-3 py-2" : "p-4"}`,
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-4",
                            children: [
                                messages.map((message)=>message.type === "app" ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: `flex ${message.isOwn ? "justify-end" : "justify-start"}`,
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(AppMessage, {
                                            message: {
                                                appId: message.appData?.appId || "",
                                                appName: message.appData?.appName || "",
                                                content: message.content,
                                                timestamp: message.timestamp
                                            },
                                            onOpenApp: handleOpenApp
                                        })
                                    }, message.id) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_messagebubble.MessageBubble, {
                                        message: message
                                    }, message.id)),
                                Object.entries(wsTypingUsers).map(([userId, userInfo])=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_typingindicator.TypingIndicator, {
                                        userId: userId,
                                        userName: userInfo.name
                                    }, userId)),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    ref: messagesEndRef
                                })
                            ]
                        })
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex-shrink-0",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_mobilemessageinput.MobileMessageInput, {
                    value: newMessage,
                    onChange: setNewMessage,
                    onSend: handleSendMessage,
                    onEmojiSelect: handleEmojiSelect,
                    onFileSelect: handleFileSelect
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.Dialog, {
                open: !!activeApp,
                onOpenChange: ()=>setActiveApp(null),
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogContent, {
                    className: "max-w-fit",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogHeader, {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogTitle, {
                                children: activeAppName
                            })
                        }),
                        renderActiveApp()
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.Dialog, {
                open: showAgentIntegration,
                onOpenChange: setShowAgentIntegration,
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogContent, {
                    className: "max-w-6xl max-h-[90vh] overflow-hidden",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogHeader, {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogTitle, {
                                children: "Agent Integration"
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(AgentIntegration, {
                            chatId: chatId,
                            onAgentMessage: handleAgentMessage,
                            onAppLaunch: handleAgentAppLaunch,
                            onWorkflowTrigger: handleWorkflowTrigger
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(PhoneCallUI, {
                isOpen: showPhoneCall,
                onClose: ()=>setShowPhoneCall(false),
                contact: chatInfo,
                callType: "outgoing"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(VideoCallUI, {
                isOpen: showVideoCall,
                onClose: ()=>setShowVideoCall(false),
                contact: chatInfo,
                callType: "outgoing"
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,