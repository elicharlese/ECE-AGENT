e6a5ce7840c6dec9b6852a2d7bf2e339
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CreateAgentDialog", {
    enumerable: true,
    get: function() {
        return CreateAgentDialog;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _zod = require("@hookform/resolvers/zod");
const _reacthookform = require("react-hook-form");
const _zod1 = require("zod");
const _dialog = require("../ui/dialog");
const _button = require("../ui/button");
const _input = require("../ui/input");
const _textarea = require("../ui/textarea");
const _label = require("../ui/label");
const _sonner = require("sonner");
const _lucidereact = require("lucide-react");
const _useagents = require("../../hooks/use-agents");
function CreateAgentDialog({ open, onOpenChange, onCreated }) {
    // Local form schema keeps CSV fields as strings for inputs
    const FormSchema = _zod1.z.object({
        name: _zod1.z.string().min(2).max(60),
        description: _zod1.z.string().max(500).optional().default(""),
        model: _zod1.z.string().max(120).optional().default("gpt-4o-mini"),
        avatar_url: _zod1.z.string().url().optional().nullable(),
        status: _zod1.z.enum([
            "online",
            "offline",
            "busy"
        ]).optional().default("online"),
        system_prompt: _zod1.z.string().max(4000).optional().default(""),
        capabilitiesCsv: _zod1.z.string().optional().default(""),
        mcpToolsCsv: _zod1.z.string().optional().default("")
    });
    const { register, handleSubmit, formState: { errors }, reset } = (0, _reacthookform.useForm)({
        resolver: (0, _zod.zodResolver)(FormSchema),
        defaultValues: {
            name: "",
            description: "",
            model: "gpt-4o-mini",
            system_prompt: "",
            capabilitiesCsv: "",
            mcpToolsCsv: "",
            status: "online"
        }
    });
    const [submitting, setSubmitting] = (0, _react.useState)(false);
    const mutation = (0, _useagents.useCreateAgentMutation)();
    const onSubmit = async (values)=>{
        setSubmitting(true);
        try {
            const capabilities = (values.capabilitiesCsv || "").split(",").map((s)=>s.trim()).filter(Boolean);
            const mcp_tools = (values.mcpToolsCsv || "").split(",").map((s)=>s.trim()).filter(Boolean);
            const payload = {
                name: values.name,
                description: values.description,
                model: values.model,
                system_prompt: values.system_prompt,
                capabilities,
                mcp_tools,
                status: values.status,
                avatar_url: null
            };
            const created = await mutation.mutateAsync(payload);
            _sonner.toast.success("Agent created");
            onOpenChange(false);
            reset();
            onCreated?.(created);
        } catch (e) {
            _sonner.toast.error(e?.message ?? "Failed to create agent");
        } finally{
            setSubmitting(false);
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.Dialog, {
        open: open,
        onOpenChange: onOpenChange,
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogContent, {
            className: "sm:max-w-lg bg-card text-card-foreground border border-border shadow-xl",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogHeader, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogTitle, {
                        className: "flex items-center gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Bot, {
                                className: "h-5 w-5"
                            }),
                            "Create New Assistant"
                        ]
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("form", {
                    onSubmit: handleSubmit(onSubmit),
                    className: "space-y-4",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                    htmlFor: "name",
                                    children: "Name"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                    id: "name",
                                    placeholder: "My Research Agent",
                                    ...register("name")
                                }),
                                errors.name && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-xs text-red-600 mt-1",
                                    children: errors.name.message
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                    htmlFor: "description",
                                    children: "Description"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_textarea.Textarea, {
                                    id: "description",
                                    placeholder: "What this agent does",
                                    ...register("description")
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                    htmlFor: "model",
                                    children: "Model"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                    id: "model",
                                    placeholder: "gpt-4o-mini",
                                    ...register("model")
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                    htmlFor: "system_prompt",
                                    children: "System Prompt"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_textarea.Textarea, {
                                    id: "system_prompt",
                                    placeholder: "Behavior instructions",
                                    ...register("system_prompt")
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                    htmlFor: "capabilitiesCsv",
                                    children: "Capabilities (comma-separated)"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                    id: "capabilitiesCsv",
                                    placeholder: "search, analysis",
                                    ...register("capabilitiesCsv")
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                    htmlFor: "mcpToolsCsv",
                                    children: "MCP Tools (comma-separated)"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                    id: "mcpToolsCsv",
                                    placeholder: "brave-search, memory",
                                    ...register("mcpToolsCsv")
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex justify-end gap-2 pt-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                    type: "button",
                                    variant: "ghost",
                                    onClick: ()=>onOpenChange(false),
                                    disabled: submitting,
                                    children: "Cancel"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                    type: "submit",
                                    disabled: submitting,
                                    children: submitting ? "Creatingâ€¦" : "Create"
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,