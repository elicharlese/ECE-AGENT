002a88f58d7569ac449c11518b9fec36
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "SwipeActions", {
    enumerable: true,
    get: function() {
        return SwipeActions;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _button = require("../ui/button");
const _usetouchgestures = require("../../hooks/use-touch-gestures");
const _usehaptics = require("../../hooks/use-haptics");
const _lucidereact = require("lucide-react");
function SwipeActions({ children, onReply, onPin, onLike, onDelete, className }) {
    const [swipeOffset, setSwipeOffset] = (0, _react.useState)(0);
    const [isRevealed, setIsRevealed] = (0, _react.useState)(false);
    const { triggerHaptic } = (0, _usehaptics.useHaptics)();
    const handleSwipeLeft = ()=>{
        setIsRevealed(true);
        setSwipeOffset(-80);
        triggerHaptic("light");
    };
    const handleSwipeRight = ()=>{
        if (onReply) {
            onReply();
            triggerHaptic("medium");
        }
        resetSwipe();
    };
    const resetSwipe = ()=>{
        setIsRevealed(false);
        setSwipeOffset(0);
    };
    const { touchHandlers } = (0, _usetouchgestures.useTouchGestures)({
        onSwipeLeft: handleSwipeLeft,
        onSwipeRight: handleSwipeRight,
        threshold: 30
    });
    const handleAction = (action)=>{
        action();
        triggerHaptic("medium");
        resetSwipe();
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `relative overflow-hidden ${className}`,
        ...touchHandlers,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "transition-transform duration-200 ease-out",
                style: {
                    transform: `translateX(${swipeOffset}px)`
                },
                onClick: resetSwipe,
                children: children
            }),
            isRevealed && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "absolute right-0 top-0 h-full flex items-center bg-gray-100 dark:bg-gray-700",
                children: [
                    onLike && /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                        variant: "ghost",
                        size: "sm",
                        className: "h-full px-3 rounded-none bg-red-500 hover:bg-red-600 text-white",
                        onClick: ()=>handleAction(onLike),
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Heart, {
                            className: "h-4 w-4"
                        })
                    }),
                    onPin && /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                        variant: "ghost",
                        size: "sm",
                        className: "h-full px-3 rounded-none bg-blue-500 hover:bg-blue-600 text-white",
                        onClick: ()=>handleAction(onPin),
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Pin, {
                            className: "h-4 w-4"
                        })
                    }),
                    onDelete && /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                        variant: "ghost",
                        size: "sm",
                        className: "h-full px-3 rounded-none bg-red-600 hover:bg-red-700 text-white",
                        onClick: ()=>handleAction(onDelete),
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Trash2, {
                            className: "h-4 w-4"
                        })
                    })
                ]
            }),
            onReply && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "absolute left-0 top-0 h-full flex items-center pl-4 pointer-events-none",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center gap-2 text-blue-500 opacity-0 transition-opacity duration-200",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Reply, {
                            className: "h-4 w-4"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: "text-sm font-medium",
                            children: "Reply"
                        })
                    ]
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbGljaGFybGVzZS9DYXNjYWRlUHJvamVjdHMvRUNFLUFHRU5UL2NvbXBvbmVudHMvY2hhdC9zd2lwZS1hY3Rpb25zLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxuXG5pbXBvcnQgdHlwZSBSZWFjdCBmcm9tIFwicmVhY3RcIlxuXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2J1dHRvblwiXG5pbXBvcnQgeyB1c2VUb3VjaEdlc3R1cmVzIH0gZnJvbSBcIkAvaG9va3MvdXNlLXRvdWNoLWdlc3R1cmVzXCJcbmltcG9ydCB7IHVzZUhhcHRpY3MgfSBmcm9tIFwiQC9ob29rcy91c2UtaGFwdGljc1wiXG5pbXBvcnQgeyBSZXBseSwgUGluLCBIZWFydCwgVHJhc2gyIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiXG5cbmludGVyZmFjZSBTd2lwZUFjdGlvbnNQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVcbiAgb25SZXBseT86ICgpID0+IHZvaWRcbiAgb25QaW4/OiAoKSA9PiB2b2lkXG4gIG9uTGlrZT86ICgpID0+IHZvaWRcbiAgb25EZWxldGU/OiAoKSA9PiB2b2lkXG4gIGNsYXNzTmFtZT86IHN0cmluZ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gU3dpcGVBY3Rpb25zKHsgY2hpbGRyZW4sIG9uUmVwbHksIG9uUGluLCBvbkxpa2UsIG9uRGVsZXRlLCBjbGFzc05hbWUgfTogU3dpcGVBY3Rpb25zUHJvcHMpIHtcbiAgY29uc3QgW3N3aXBlT2Zmc2V0LCBzZXRTd2lwZU9mZnNldF0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBbaXNSZXZlYWxlZCwgc2V0SXNSZXZlYWxlZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgeyB0cmlnZ2VySGFwdGljIH0gPSB1c2VIYXB0aWNzKClcblxuICBjb25zdCBoYW5kbGVTd2lwZUxlZnQgPSAoKSA9PiB7XG4gICAgc2V0SXNSZXZlYWxlZCh0cnVlKVxuICAgIHNldFN3aXBlT2Zmc2V0KC04MClcbiAgICB0cmlnZ2VySGFwdGljKFwibGlnaHRcIilcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZVN3aXBlUmlnaHQgPSAoKSA9PiB7XG4gICAgaWYgKG9uUmVwbHkpIHtcbiAgICAgIG9uUmVwbHkoKVxuICAgICAgdHJpZ2dlckhhcHRpYyhcIm1lZGl1bVwiKVxuICAgIH1cbiAgICByZXNldFN3aXBlKClcbiAgfVxuXG4gIGNvbnN0IHJlc2V0U3dpcGUgPSAoKSA9PiB7XG4gICAgc2V0SXNSZXZlYWxlZChmYWxzZSlcbiAgICBzZXRTd2lwZU9mZnNldCgwKVxuICB9XG5cbiAgY29uc3QgeyB0b3VjaEhhbmRsZXJzIH0gPSB1c2VUb3VjaEdlc3R1cmVzKHtcbiAgICBvblN3aXBlTGVmdDogaGFuZGxlU3dpcGVMZWZ0LFxuICAgIG9uU3dpcGVSaWdodDogaGFuZGxlU3dpcGVSaWdodCxcbiAgICB0aHJlc2hvbGQ6IDMwLFxuICB9KVxuXG4gIGNvbnN0IGhhbmRsZUFjdGlvbiA9IChhY3Rpb246ICgpID0+IHZvaWQpID0+IHtcbiAgICBhY3Rpb24oKVxuICAgIHRyaWdnZXJIYXB0aWMoXCJtZWRpdW1cIilcbiAgICByZXNldFN3aXBlKClcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2ByZWxhdGl2ZSBvdmVyZmxvdy1oaWRkZW4gJHtjbGFzc05hbWV9YH0gey4uLnRvdWNoSGFuZGxlcnN9PlxuICAgICAgey8qIE1haW4gY29udGVudCAqL31cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPVwidHJhbnNpdGlvbi10cmFuc2Zvcm0gZHVyYXRpb24tMjAwIGVhc2Utb3V0XCJcbiAgICAgICAgc3R5bGU9e3sgdHJhbnNmb3JtOiBgdHJhbnNsYXRlWCgke3N3aXBlT2Zmc2V0fXB4KWAgfX1cbiAgICAgICAgb25DbGljaz17cmVzZXRTd2lwZX1cbiAgICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9kaXY+XG5cbiAgICAgIHsvKiBBY3Rpb24gYnV0dG9ucyAocmV2ZWFsZWQgb24gc3dpcGUpICovfVxuICAgICAge2lzUmV2ZWFsZWQgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFic29sdXRlIHJpZ2h0LTAgdG9wLTAgaC1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGJnLWdyYXktMTAwIGRhcms6YmctZ3JheS03MDBcIj5cbiAgICAgICAgICB7b25MaWtlICYmIChcbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgdmFyaWFudD1cImdob3N0XCJcbiAgICAgICAgICAgICAgc2l6ZT1cInNtXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaC1mdWxsIHB4LTMgcm91bmRlZC1ub25lIGJnLXJlZC01MDAgaG92ZXI6YmctcmVkLTYwMCB0ZXh0LXdoaXRlXCJcbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlQWN0aW9uKG9uTGlrZSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxIZWFydCBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICl9XG4gICAgICAgICAge29uUGluICYmIChcbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgdmFyaWFudD1cImdob3N0XCJcbiAgICAgICAgICAgICAgc2l6ZT1cInNtXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaC1mdWxsIHB4LTMgcm91bmRlZC1ub25lIGJnLWJsdWUtNTAwIGhvdmVyOmJnLWJsdWUtNjAwIHRleHQtd2hpdGVcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVBY3Rpb24ob25QaW4pfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8UGluIGNsYXNzTmFtZT1cImgtNCB3LTRcIiAvPlxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7b25EZWxldGUgJiYgKFxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICB2YXJpYW50PVwiZ2hvc3RcIlxuICAgICAgICAgICAgICBzaXplPVwic21cIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJoLWZ1bGwgcHgtMyByb3VuZGVkLW5vbmUgYmctcmVkLTYwMCBob3ZlcjpiZy1yZWQtNzAwIHRleHQtd2hpdGVcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVBY3Rpb24ob25EZWxldGUpfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8VHJhc2gyIGNsYXNzTmFtZT1cImgtNCB3LTRcIiAvPlxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuXG4gICAgICB7LyogUmVwbHkgaW5kaWNhdG9yIChzaG93biBvbiByaWdodCBzd2lwZSkgKi99XG4gICAgICB7b25SZXBseSAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWJzb2x1dGUgbGVmdC0wIHRvcC0wIGgtZnVsbCBmbGV4IGl0ZW1zLWNlbnRlciBwbC00IHBvaW50ZXItZXZlbnRzLW5vbmVcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yIHRleHQtYmx1ZS01MDAgb3BhY2l0eS0wIHRyYW5zaXRpb24tb3BhY2l0eSBkdXJhdGlvbi0yMDBcIj5cbiAgICAgICAgICAgIDxSZXBseSBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW1cIj5SZXBseTwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApXG59XG4iXSwibmFtZXMiOlsiU3dpcGVBY3Rpb25zIiwiY2hpbGRyZW4iLCJvblJlcGx5Iiwib25QaW4iLCJvbkxpa2UiLCJvbkRlbGV0ZSIsImNsYXNzTmFtZSIsInN3aXBlT2Zmc2V0Iiwic2V0U3dpcGVPZmZzZXQiLCJ1c2VTdGF0ZSIsImlzUmV2ZWFsZWQiLCJzZXRJc1JldmVhbGVkIiwidHJpZ2dlckhhcHRpYyIsInVzZUhhcHRpY3MiLCJoYW5kbGVTd2lwZUxlZnQiLCJoYW5kbGVTd2lwZVJpZ2h0IiwicmVzZXRTd2lwZSIsInRvdWNoSGFuZGxlcnMiLCJ1c2VUb3VjaEdlc3R1cmVzIiwib25Td2lwZUxlZnQiLCJvblN3aXBlUmlnaHQiLCJ0aHJlc2hvbGQiLCJoYW5kbGVBY3Rpb24iLCJhY3Rpb24iLCJkaXYiLCJzdHlsZSIsInRyYW5zZm9ybSIsIm9uQ2xpY2siLCJCdXR0b24iLCJ2YXJpYW50Iiwic2l6ZSIsIkhlYXJ0IiwiUGluIiwiVHJhc2gyIiwiUmVwbHkiLCJzcGFuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7K0JBbUJnQkE7OztlQUFBQTs7Ozt1QkFmUzt3QkFDRjtrQ0FDVTs0QkFDTjs2QkFDZTtBQVduQyxTQUFTQSxhQUFhLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQXFCO0lBQ3ZHLE1BQU0sQ0FBQ0MsYUFBYUMsZUFBZSxHQUFHQyxJQUFBQSxlQUFRLEVBQUM7SUFDL0MsTUFBTSxDQUFDQyxZQUFZQyxjQUFjLEdBQUdGLElBQUFBLGVBQVEsRUFBQztJQUM3QyxNQUFNLEVBQUVHLGFBQWEsRUFBRSxHQUFHQyxJQUFBQSxzQkFBVTtJQUVwQyxNQUFNQyxrQkFBa0I7UUFDdEJILGNBQWM7UUFDZEgsZUFBZSxDQUFDO1FBQ2hCSSxjQUFjO0lBQ2hCO0lBRUEsTUFBTUcsbUJBQW1CO1FBQ3ZCLElBQUliLFNBQVM7WUFDWEE7WUFDQVUsY0FBYztRQUNoQjtRQUNBSTtJQUNGO0lBRUEsTUFBTUEsYUFBYTtRQUNqQkwsY0FBYztRQUNkSCxlQUFlO0lBQ2pCO0lBRUEsTUFBTSxFQUFFUyxhQUFhLEVBQUUsR0FBR0MsSUFBQUEsa0NBQWdCLEVBQUM7UUFDekNDLGFBQWFMO1FBQ2JNLGNBQWNMO1FBQ2RNLFdBQVc7SUFDYjtJQUVBLE1BQU1DLGVBQWUsQ0FBQ0M7UUFDcEJBO1FBQ0FYLGNBQWM7UUFDZEk7SUFDRjtJQUVBLHFCQUNFLHNCQUFDUTtRQUFJbEIsV0FBVyxDQUFDLHlCQUF5QixFQUFFQSxXQUFXO1FBQUcsR0FBR1csYUFBYTs7MEJBRXhFLHFCQUFDTztnQkFDQ2xCLFdBQVU7Z0JBQ1ZtQixPQUFPO29CQUFFQyxXQUFXLENBQUMsV0FBVyxFQUFFbkIsWUFBWSxHQUFHLENBQUM7Z0JBQUM7Z0JBQ25Eb0IsU0FBU1g7MEJBRVJmOztZQUlGUyw0QkFDQyxzQkFBQ2M7Z0JBQUlsQixXQUFVOztvQkFDWkYsd0JBQ0MscUJBQUN3QixjQUFNO3dCQUNMQyxTQUFRO3dCQUNSQyxNQUFLO3dCQUNMeEIsV0FBVTt3QkFDVnFCLFNBQVMsSUFBTUwsYUFBYWxCO2tDQUU1QixjQUFBLHFCQUFDMkIsa0JBQUs7NEJBQUN6QixXQUFVOzs7b0JBR3BCSCx1QkFDQyxxQkFBQ3lCLGNBQU07d0JBQ0xDLFNBQVE7d0JBQ1JDLE1BQUs7d0JBQ0x4QixXQUFVO3dCQUNWcUIsU0FBUyxJQUFNTCxhQUFhbkI7a0NBRTVCLGNBQUEscUJBQUM2QixnQkFBRzs0QkFBQzFCLFdBQVU7OztvQkFHbEJELDBCQUNDLHFCQUFDdUIsY0FBTTt3QkFDTEMsU0FBUTt3QkFDUkMsTUFBSzt3QkFDTHhCLFdBQVU7d0JBQ1ZxQixTQUFTLElBQU1MLGFBQWFqQjtrQ0FFNUIsY0FBQSxxQkFBQzRCLG1CQUFNOzRCQUFDM0IsV0FBVTs7Ozs7WUFPekJKLHlCQUNDLHFCQUFDc0I7Z0JBQUlsQixXQUFVOzBCQUNiLGNBQUEsc0JBQUNrQjtvQkFBSWxCLFdBQVU7O3NDQUNiLHFCQUFDNEIsa0JBQUs7NEJBQUM1QixXQUFVOztzQ0FDakIscUJBQUM2Qjs0QkFBSzdCLFdBQVU7c0NBQXNCOzs7Ozs7O0FBTWxEIn0=