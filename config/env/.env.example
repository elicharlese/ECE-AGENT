# Environment variables for AGENT
# Desktop downloads (public links shown on homepage)
# Point these to your hosted installers or GitHub Releases assets
NEXT_PUBLIC_DESKTOP_DOWNLOAD_MAC=
NEXT_PUBLIC_DESKTOP_DOWNLOAD_WIN=
NEXT_PUBLIC_DESKTOP_DOWNLOAD_LINUX=

# Optional: Releases page fallback for Desktop button
NEXT_PUBLIC_DESKTOP_RELEASE_URL=

# Mobile store links (public links shown on homepage)
# Prefer official stores; for testing iOS you can use TestFlight
NEXT_PUBLIC_MOBILE_APPSTORE_URL=
NEXT_PUBLIC_MOBILE_TESTFLIGHT_URL=
NEXT_PUBLIC_MOBILE_PLAY_URL=

# Official Apple App Store badge image URL (SVG/PNG). Use Apple-provided artwork without modification.
# Example: /design/app-store-badge.svg or a CDN link from Apple Marketing Tools
NEXT_PUBLIC_APPLE_BADGE_IMAGE_URL=

# Desktop auto-update (optional)
# If set, Electron auto-updater will use this generic feed URL (must host latest.yml and assets)
AGENT_UPDATE_URL=

# Desktop packaged UI (optional)
# If set, the packaged Electron app will load its UI from this URL instead of the bundled placeholder page.
# Example: https://agent.your-domain.com
AGENT_DESKTOP_WEB_URL=

# Expo EAS Update (mobile)
# Set the Expo project ID to enable OTA updates via expo-updates
# You can find this in Expo → Project → Settings → General → Project ID
EXPO_PUBLIC_EAS_PROJECT_ID=

# Copy to .env.local and fill with your Supabase project values

# Supabase (Required in production)
NEXT_PUBLIC_SUPABASE_URL=
NEXT_PUBLIC_SUPABASE_ANON_KEY=

# Prisma / Database (Optional unless using Prisma)
# Connect to Supabase via connection pooling (pgbouncer)
# Replace [YOUR_DB_PASSWORD] with the database password from Supabase → Project Settings → Database
DATABASE_URL="postgresql://postgres.<project-ref>:[YOUR_DB_PASSWORD]@aws-0-us-east-1.pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=1"

# Direct connection to the database (used for Prisma migrations and introspection)
DIRECT_URL="postgresql://postgres.<project-ref>:[YOUR_DB_PASSWORD]@aws-0-us-east-1.pooler.supabase.com:5432/postgres"

# LiveKit (Required for calls)
# Obtain these from your LiveKit Cloud project or your self-hosted LiveKit server.
LIVEKIT_API_KEY=
LIVEKIT_API_SECRET=
# Prefer setting the public WS URL for client-side usage (e.g. wss://<subdomain>.livekit.cloud)
NEXT_PUBLIC_LIVEKIT_WS_URL=
# Optional alternative server-side names also supported by the token route:
# LIVEKIT_WS_URL=
# LIVEKIT_URL=

 

# Database Connection Pooling (for Supabase)
# Increase connection limit for better performance
DATABASE_CONNECTION_LIMIT=10
DATABASE_CONNECTION_TIMEOUT=60000
DATABASE_IDLE_TIMEOUT=300000

# Redis Caching (Vercel KV or external Redis)
REDIS_URL=
REDIS_TOKEN=
REDIS_CACHE_TTL=3600

# Performance Monitoring
VERCEL_ANALYTICS_ID=
DATADOG_API_KEY=
DATADOG_APP_KEY=
NEW_RELIC_LICENSE_KEY=

# Load Testing
K6_CLOUD_TOKEN=
ARTILLERY_CLOUD_API_KEY=

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=1000
RATE_LIMIT_BURST_LIMIT=2000

# Circuit Breaker
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_RECOVERY_TIMEOUT=60000

# Background Jobs
REDIS_QUEUE_URL=
JOB_CONCURRENCY=5
JOB_TIMEOUT=300000

# Performance Thresholds
API_RESPONSE_TIME_WARNING=1000
API_RESPONSE_TIME_CRITICAL=2000
MEMORY_USAGE_WARNING=80
MEMORY_USAGE_CRITICAL=90

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_RETRIES=3

# Auto-scaling Triggers
CPU_THRESHOLD_WARNING=70
CPU_THRESHOLD_CRITICAL=85
MEMORY_THRESHOLD_WARNING=75
MEMORY_THRESHOLD_CRITICAL=90
REQUEST_QUEUE_THRESHOLD=100

# Database Optimization
DB_QUERY_TIMEOUT=30000
DB_CONNECTION_POOL_SIZE=20
DB_STATEMENT_CACHE_SIZE=100

# CDN Configuration
CDN_CACHE_TTL_STATIC=86400
CDN_CACHE_TTL_API=0
CDN_CACHE_TTL_DYNAMIC=300

# Logging
LOG_LEVEL=info
LOG_FORMAT=json
LOG_DESTINATION=stdout,datadog
