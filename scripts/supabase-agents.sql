-- Create agent-related tables for ECE-AGENT
-- You can run this in the Supabase SQL Editor or via psql:
--   psql "$SUPABASE_DB_URL" -f scripts/supabase-agents.sql

-- Enable UUID extension for uuid_generate_v4()
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Agents registry (optional for future dynamic agents management)
CREATE TABLE IF NOT EXISTS agents (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  agent_id TEXT UNIQUE NOT NULL,
  name TEXT NOT NULL,
  description TEXT,
  capabilities JSONB,
  mcp_tools JSONB,
  status TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Messages generated by agents
CREATE TABLE IF NOT EXISTS agent_messages (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  agent_id TEXT REFERENCES agents(agent_id),
  conversation_id TEXT,
  content TEXT,
  metadata JSONB,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Note: Consider adding RLS policies later if needed, e.g. allowing the
-- authenticated user to insert/read their own conversation-related messages.

-- Seed default agents used by the app (idempotent)
INSERT INTO agents (agent_id, name, description, capabilities, mcp_tools, status)
VALUES
  ('ai-assistant', 'AI Assistant', 'General purpose AI assistant with web search and analysis capabilities',
   '["search","analysis","coding","writing"]'::jsonb, '["brave-search","sequential-thinking","memory"]'::jsonb, 'online'),
  ('dev-agent', 'Development Agent', 'Specialized in coding, debugging, and technical documentation',
   '["coding","debugging","git","documentation"]'::jsonb, '["git","puppeteer","sequential-thinking"]'::jsonb, 'online'),
  ('project-manager', 'Project Manager', 'Handles project tracking, issue management, and team coordination',
   '["planning","tracking","reporting"]'::jsonb, '["linear","memory","sequential-thinking"]'::jsonb, 'online'),
  ('legal-assistant', 'Legal Assistant', 'Reviews contracts, compliance, and legal documentation',
   '["contracts","compliance","research"]'::jsonb, '["brave-search","memory","sequential-thinking"]'::jsonb, 'online'),
  ('finance-agent', 'Finance Agent', 'Manages payments, invoicing, and financial operations',
   '["payments","invoicing","reporting"]'::jsonb, '["stripe","supabase","memory"]'::jsonb, 'offline'),
  ('research-agent', 'Research Agent', 'Performs deep web research and summarizes findings with sources.',
   '["research","summarization","source-citation"]'::jsonb, '["brave-search","sequential-thinking","memory"]'::jsonb, 'online')
ON CONFLICT (agent_id) DO NOTHING;
